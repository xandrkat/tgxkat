{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Player/PipPlayer.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/PinOff.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Assets/Icons/AddMember.js","Assets/Icons/Broom.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/AnimatedItem.js","Components/ColumnMiddle/AnimatedCounter.js","Components/ColumnMiddle/HeaderCommand.js","Assets/Icons/PlaylistEdit.js","Components/ColumnMiddle/PinnedMessageBorder.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Assets/Icons/PinFilled.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/FilesDropTarget.js","Components/ColumnMiddle/InputBoxHints.js","Components/Message/MessageContext.js","Assets/Icons/ArrowTopRight.js","Assets/Icons/ShareFilled.js","Components/Message/Markup/KeyboardButton.js","Components/Message/Markup/KeyboardRow.js","Components/Message/Markup/ReplyMarkup.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/ColumnMiddle/PinnedMessagesHeader.js","Components/ColumnMiddle/PinnedMessages.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/SelectChatPlaceholder.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/Popup/AlertDialog.js","Components/Popup/BlockSenderDialog.js","Components/Popup/ClearHistoryDialog.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/InputPasswordDialog.js","Components/Popup/LeaveChatDialog.js","Components/Popup/OpenGameDialog.js","Components/Popup/OpenUrlDialog.js","Components/Popup/RequestUrlDialog.js","Components/Popup/PinMessageDialog.js","Components/Additional/NotificationTimer.js","Components/Popup/UnpinMessageDialog.js","Components/Actions.js","Utils/Game.js","Components/MainPage.js"],"names":["Animator","constructor","duration","options","start","this","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","n","sin","PI","StickerPreview","React","Component","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","componentDidUpdate","prevProps","prevState","snapshot","componentDidMount","render","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","super","onClientUpdateMediaShortcut","update","event","onKeyDown","key","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleClose","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleClick","handleMute","handleFullScreen","progress","Number","replace","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","stopPropagation","preventDefault","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","style","left","oldTop","top","normalizePosition","handleLoadedData","target","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","hidden","clientUpdate","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","fileId","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","focus","mouseDownRoot","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleMouseDown","dragging","draggingTime","handleChange","value","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","setTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","file","FileStore","get","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleFocus","KeyboardManager","add","keyboardHandler","handleBlur","remove","KeyboardHandler","prevVideo","connectPlayer","window","addEventListener","on","componentWillUnmount","disconnectPlayer","removeEventListener","off","text","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","element","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","classNames","onMouseDown","onMouseMove","onClick","onDoubleClick","onFocus","onBlur","tabIndex","Hint","e","Close","onMouseEnter","onMouseLeave","width","Slider","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","ForwardTargetChat","chatId","selected","onSelect","t","shortTitle","getChatShortTitle","ChatTile","withTranslation","copy","a","navigator","clipboard","writeText","console","error","copyOld","successful","createElement","contentEditable","readOnly","all","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","select","execCommand","Error","removeChild","sprintf","args","postProcess","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","user_id","UserStore","getMyId","force","Promise","map","catch","chats","savedMessages","chatIds","chat_ids","store","getStore","loadChatsContent","messageIds","isSupergroup","getChatUsername","chat_id","message_id","for_album","for_comment","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","AppStore","invokeScheduledAction","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","size","height","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","forceUpdate","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","onFastUpdatingComplete","onUpdateChatTitle","shouldComponentUpdate","nextProps","nextState","ChatStore","showSavedMessages","isVerified","isChatVerified","title","defaultProps","DialogStatus","onUpdateUserStatus","chat","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","externalSubtitle","Chat","onTileSelect","showStatus","big","showTitle","isSavedMessages","isMeChat","ChatDetailsHeader","backButton","info","isPrivateChat","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","ListItem","button","alignItems","ListItemIcon","Checkbox","edge","checked","disableRipple","ListItemText","primary","Typography","variant","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","supergroupMembers","photoAndVideo","audio","url","voiceNote","groupsInCommon","hasMembers","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","index","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","scroll","filtersRef","item","membersFilter","filterRef","firstChild","offsetLeft","photoAndVideoFilter","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","ContextMenu","handleOpenMessage","messageId","openChat","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","handleOpenContextMenu","contextMenu","handleCloseContextMenu","thumbnailSize","prevPhoto","getSize","minithumbnail","nextContext","openMedia","miniSrc","data","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","Boolean","tileColor","abs","charCodeAt","draggable","alt","SharedLink","webPage","entity","getTitleFromUrl","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","longTextMaxLength","urlEntities","isValidEntity","showLinks","oneLinkText","offset","nonEmptyUrlEntities","entityText","substring","links","mail","typeUrl","SafeLink","getFormattedText","getFirstLetter","SharedVoiceNote","sender","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","SharedMediaContent","items","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","params","loading","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","sender_user_id","from_message_id","finally","currentParams","total_count","isValidMessage","incompleteResults","setItems","loadMessageContents","onLoadMigratedNext","handleOpen","popup","openUser","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","loadUsersContent","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","onOpen","User","userId","voice_note","ChatDetails","loadChatContents","getGroupChatMembers","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","getSnapshotBeforeUpdate","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isGroupChat","isMe","users","member","user","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","chatUrl","onScroll","List","wordWrap","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","getChatUserId","minHeight","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","SpeedDialIcon","openIcon","SharedMediaBase","getListClassName","getSearchListClassName","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","hasSearch","getHeader","searchMessages","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","DialogBadge","chatList","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","Status","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","prevMessageId","isMessageUnread","viewBox","Pending","Sent","Succeeded","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","leaveChat","dialog","isLastPinned","ApplicationStore","deleteChat","canDeleteChat","deleteChatTitle","getDeleteChatTitle","isSelected","getChatId","isUnread","isArchived","showOnline","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","overScanCount","getListRenderIds","getListRef","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","load","localStorage","getItem","JSON","parse","save","setItem","stringify","removeItem","clear","CacheStore","EventEmitter","reset","archiveChatIds","meChat","cacheContacts","contacts","cache","authorization_state","CacheManager","onClientUpdate","clearDataUrls","addTdLibListener","removeTdLibListener","saveInternal","files","dropCache","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","getCache","fileMap","userMap","basicGroupMap","supergroupMap","chatMap","blob","getBlob","basicGroup","values","entries","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","handleSettings","handleHelp","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","setInitQuery","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","openChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","chatListEquals","scrollToTop","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","_m","reorderChats","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","oldChatIds","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","offsetChat","log","shift","replaceChats","appendChats","newChats","dialogs","lastPinnedId","Array","_chats","_c","ids","Archive","innerListRef","TopChat","PureComponent","onDelete","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getSimpleMarkupEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","setStyleCSSText","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","animateItems","prevOffsets","doubleTransform","currentOffset","prevOffset","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","requests","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","filterId","Done","Suspense","fallback","autoplay","loop","stringData","Add","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","chat_filters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","inputProps","native_name","handleMuteFor","property","settings","mute_for","newSettings","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblockUser","unblockSender","senders","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","is_channel","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","selectedItems","array","newMap","newArray","newFocusedItem","selectedItemsMap","publicItems","publicChats","getUserIds","NewGroupParams","getTitle","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","newGroupParamsRef","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textInputRef","textError","validateUrl","urlError","onCancel","textRef","urlRef","prevOpen","display","flexDirection","autoComplete","ReplyTile","onClientUpdateBlob","THUMBNAIL_BLURRED_SIZE_40","Reply","onGetMessageResult","isDeletedMessage","closePinned","getReplyThumbnail","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","normalizeM","msStr","normalizeS","msToTime","s","ms","secs","mins","hrs","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setTyping","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendText","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","chatSelectOptions","switchInline","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","alert","handleEmojiSelect","native","setHints","setRecordingReadyState","getTextAndCaretPosition","_range","cloneRange","selectNodeContents","endOffset","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","searchUsernameOrHashtag","usernameOnly","searchResultUsernames","cancelDelayRunnable","searchPosition","lastText","lastUsernameOnly","resultStartPosition","resultLength","foundType","dogPosition","ch","lastPosition","closeHints","usersMap","usernameString","hasSpace","newResult","newResultsMap","inlineBots","object","isMeUser","isDeletedUser","showUsersResult","message_thread_id","notifyDataSetChanged","notify","openHints","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","Footer","onUpdateChatLastMessage","hasLastMessage","onUpdateChatIsBlocked","isBlocked","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","handleUnblock","handleStartBot","botStartMessage","botUserId","parameter","sendBotStartMessage","isBotChat","status","is_member","permissions","can_send_messages","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","pinned","requestUnpinMessage","handleSwitchBlocked","getChatSender","requestBlockSender","canClearHistory","unpinMessage","hasOnePinnedMessage","switchBlocked","canSwitchBlocked","Broom","AddMember","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","AnimatedItem","animate","scrollDown","containerRef","item1","item1Ref","item2","item2Ref","prevItem","AnimatedCounter","counter","prevCounter","reverse","counterStr","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessageBorder","drawRect","radius","getClipPath","barHeight","getBarHeight","getMarkHeight","getMarkTranslateY","getTrackTranslateY","trackHeight","getTrackHeight","markHeight","clipPathId","clipPath","markTranslateY","trackTranslateY","PinnedMessage","onClientUpdateCurrentPinnedMessage","scrollToMessageId","onUpdateMessageIsPinned","setPinnedState","is_pinned","animateText","textElement","text1Element","text2Element","currentMessageId","currentPrevMessageId","clientData","getClientData","currentPinned","lastPhoto","onClientUpdateSetChatClientData","nextThumbnail","nextMinithumbnail","clickedPinned","handleEditClick","prevPropsChatId","unpinned","prevMessage","prevContent","PlaylistEdit","Header","connectionState","getConnectionState","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","handleSearchChat","localize","str","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","getPageBlock","instantView","openInstantViewMedia","iv","getMediaFunc","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","HeaderPlayer","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","clearInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","requestPinMessage","handleEdit","isEmptySelection","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canPinMessages","isServiceMessage","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageInteractionInfo","interaction_info","interactionInfo","prevMessageIds","albumHistoryEquals","isOutgoing","onDateClick","views","view_count","forward_count","dateStr","dateHintStr","viewsStr","getViews","AlbumItem","getAlbumItem","inlineMeta","getWebPage","Photo","Video","Document","onClientUpdateMessageHighlighted","highlighted","onClientUpdateClearSelection","tagName","handleSelection","DayMeta","onClientUpdateLanguage","getFullYear","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","getInfo","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","scale","multiHeight","end","sum","calculate","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","croppedRatios","firstLine","secondLine","thirdLine","fourthLine","attempts","optimal","optimalDiff","maxHeight","attempt","minLineHeight","MAX_VALUE","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","lastHighlighted","oldEmojiMatches","emojiMatches","grouped","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","sender_name","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","PHOTO_DISPLAY_SIZE","showData","DocumentAlbum","lastSelected","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","MessageContext","createContext","KeyboardButton","handleCallbackQueryAnswer","via_bot_user_id","show_alert","game","LStore","getString","showAlert","ok","showSnackbar","showOpenGameAlert","is_verified","showOpenUrlAlert","ask","tryTelegraph","payload","game_short_name","short_name","passwordState","has_password","showInputPasswordAlert","password","onCloseDialog","onError","forward_text","button_id","skip_confirm","showRequestUrlAlert","buttonId","in_current_chat","inline","setText","openChatSelect","ArrowTopRight","ShareFilled","withMessage","MessageComponent","Consumer","KeyboardRow","row","ReplyMarkup","markup","rows","Provider","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","totalLength","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","updateMessageContent","handleUpdateMessageContentAndEditedOnce","updateMessageEdited","newEmojiMatches","getEmojiMatches","startMessageEditing","stopMessageEditing","mouseDown","mouseOut","openReply","isMetaBubble","getMessageStyle","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","Object","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateStartMessageEditing","history","scrollBottomAfterEditing","onClientUpdateStopMessageEditing","scrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insert","handleScrollBehavior","deleteHistory","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","replaceMessage","updateItemsInView","insertPrevious","loadIncompleteHistory","MAX_ITERATIONS","complete","isCompleteHistory","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","lastRequestKey","lastRequests","getRequest","insertNext","currentHistory","supergroupId","basicGroupChat","messagesMap","itemsInView","messageWrapper","mapEquals","inViewMap","updatePinnedMessage","scrollToNext","minId","maxId","pinnedMinId","pinnedMaxId","updateScrollDownVisibility","prevHistory","cancelUpdatePinnedMessage","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","types","handleScrollDownClick","lastReply","pop","separatorMessageId","scrollDownButtonRef","historyEquals","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","cancelLoadMessageContents","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","showMessageTitle","isFirst","isFirstUnread","senderEquals","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","showMessageDate","prevDate","getMonth","media_album_id","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","isNextFirstUnread","nextShowTitle","PinnedMessagesHeader","pinnedCount","selectedCount","PinnedMessages","onClientUpdateOpenPinned","opened","onClientUpdateClosePinned","handleUnpinAll","unpinAllTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","disableEnforceFocus","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","SelectChatPlaceholder","closeChatSelect","DialogDetails","onClientUpdateClearOpenChatOptions","chatOpenOptions","onClientUpdateChatSelect","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","wallpaperSrc","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","prevPropsFileId","getLocalFile","propsDisabled","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","formatString","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","prevInstantView","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","IV_PHOTO_SIZE","MediaInfo","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","getMediaMinithumbnail","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","MediaViewer","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","revoke","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","AlertDialog","BlockSenderDialog","reportSpam","handleReportSpamChange","handleDeleteChatChange","reportText","getChatLocation","address","ClearHistoryDialog","handleRevokeChange","canBeDeletedForAllUsers","DeleteMessagesDialog","formatPluralString","InputPasswordDialog","handleClickShowPassword","showPassword","getErrorMessage","passwordHint","password_hint","errorMessage","InputLabel","htmlFor","Input","endAdornment","InputAdornment","FormHelperText","LeaveChatDialog","getDeleteDialogText","OpenGameDialog","OpenUrlDialog","overflowWrap","RequestUrlDialog","value1","value2","handleValue1Change","handleValue2Change","bot_user_id","request_write_access","text1","entities1","option1","option2","text2","entities2","PinMessageDialog","NotificationTimer","handleTimer","seconds","expire","timerId","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","UnpinMessageDialog","Actions","pinMessage","openUrlAlert","openGameAlert","requestUrlAlert","inputPasswordAlert","requestBlockSenderAlert","onClientUpdateBlockSender","onClientUpdateInputPasswordAlert","onPassword","onClientUpdateOpenGameAlert","handleOpenGameContinue","onClientUpdateOpenUrlAlert","handleOpenUrlContinue","onClientUpdateRequestUrlAlert","onClientUpdateSnackbar","onClientUpdateAlert","onClientUpdateUnpinMessage","handleUnpinMessageContinue","onClientUpdatePinMessage","handlePinMessageContinue","onClientUpdateDeleteMessages","handleClearHistoryContinue","request","handleLeaveContinue","undo","getLeaveChatNotification","isChatMember","isCreator","handleDeleteMessagesContinue","clientUpdateType","addScheduledAction","persist","removeScheduledAction","pinMessageAction","unpinMessageAction","unpinAllMessages","handleAlertContinue","sharedPreferences","existing","addHash","encodeURIComponent","chars","Uint8Array","crypto","getRandomValues","curHash","openGameInBrowser","handleRequestUrlContinue","allow_write_access","handleInputPasswordContinue","handleBlockSenderContinue","blockSender","reason","reportChat","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/3.8b564064.chunk.js","sourcesContent":["/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nclass Animator {\r\n    constructor(duration, options = []) {\r\n        this.options = options;\r\n        this.duration = duration;\r\n    }\r\n\r\n    static outSine(n) {\r\n        return Math.sin((n * Math.PI) / 2);\r\n    }\r\n\r\n    start = () => {\r\n        this.stopped = false;\r\n        this.id = requestAnimationFrame(this.startInternal);\r\n    };\r\n\r\n    startInternal = timeStamp => {\r\n        const { startTime, duration } = this;\r\n\r\n        this.startTime = timeStamp;\r\n        this.endTime = startTime + duration;\r\n        this.draw(timeStamp);\r\n    };\r\n\r\n    draw = now => {\r\n        const { stopped, duration, startTime, options } = this;\r\n\r\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\r\n            this.stopped = true;\r\n        }\r\n\r\n        if (stopped) return;\r\n\r\n        const time = Math.min(now - startTime, duration);\r\n        const p = duration === 0 ? 1.0 : time / duration;\r\n        const val = Animator.outSine(p);\r\n\r\n        options.forEach(x => {\r\n            const { from, to, func } = x;\r\n            x.last = from + (to - from) * val;\r\n            func(x.last);\r\n        });\r\n\r\n        this.id = requestAnimationFrame(this.draw);\r\n    };\r\n\r\n    stop = () => {\r\n        this.stopped = true;\r\n        cancelAnimationFrame(this.id);\r\n    };\r\n}\r\n\r\nexport default Animator;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickerPreview.css';\r\n\r\nclass StickerPreview extends React.Component {\r\n    state = {\r\n        emoji: null,\r\n        prevPropsSticker: null\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { sticker } = props;\r\n        const { prevPropsSticker } = state;\r\n\r\n        if (sticker && prevPropsSticker) {\r\n            return {\r\n                prevPropsSticker: sticker,\r\n                emoji: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { sticker } = this.props;\r\n\r\n        if (sticker && sticker !== prevProps.sticker) {\r\n            this.loadStickerEmojis(sticker);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { sticker } = this.props;\r\n\r\n        if (sticker) {\r\n            this.loadStickerEmojis(sticker);\r\n        }\r\n    }\r\n\r\n    loadStickerEmojis = sticker => {\r\n        const { sticker: file } = sticker;\r\n        const { id } = file;\r\n\r\n        TdLibController.send({\r\n            '@type': 'getStickerEmojis',\r\n            sticker: { '@type': 'inputFileId', id }\r\n        }).then(result => {\r\n            if (this.props.sticker === sticker) {\r\n                this.setState({\r\n                    emoji: result.emojis.join(' ')\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { sticker } = this.props;\r\n        const { emoji } = this.state;\r\n\r\n        if (!sticker) return null;\r\n\r\n        return (\r\n            <div className='sticker-preview'>\r\n                <div className='sticker-preview-emoji'>{emoji}</div>\r\n                <Sticker\r\n                    sticker={sticker}\r\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\r\n                    source={StickerSourceEnum.PREVIEW}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nStickerPreview.propTypes = {\r\n    sticker: PropTypes.object\r\n};\r\n\r\nexport default StickerPreview;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\r\n    'Smile'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { getDisplayName } from './Utils/HOC';\r\nimport { MAX_SNACK } from './Constants';\r\n\r\nfunction withSnackbarNotifications(WrappedComponent) {\r\n    class NotificationsWrapper extends React.Component {\r\n        render() {\r\n            return (\r\n                <SnackbarProvider maxSnack={MAX_SNACK}>\r\n                    <WrappedComponent {...this.props} />\r\n                </SnackbarProvider>\r\n            );\r\n        }\r\n    }\r\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\r\n\r\n    return NotificationsWrapper;\r\n}\r\n\r\nexport default withSnackbarNotifications;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport PauseIcon from '../../Assets/Icons/Pause';\r\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\r\nimport FullScreen from '../../Assets/Icons/FullScreen';\r\nimport Hint from './Hint';\r\nimport Player from './Player';\r\nimport Progress from './Progress';\r\nimport { clamp, getDurationString } from '../../Utils/Common';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport {\r\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\r\n    PLAYER_PLAYBACKRATE_MIN,\r\n    PLAYER_PLAYBACKRATE_STEP,\r\n    PLAYER_SEEK_STEP_BIG,\r\n    PLAYER_SEEK_STEP_SMALL,\r\n    PLAYER_VOLUME_MAX,\r\n    PLAYER_VOLUME_MIN,\r\n    PLAYER_VOLUME_STEP\r\n} from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './PipPlayer.css';\r\n\r\nclass PipPlayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.state = { };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\r\n        if (state.prevVideo !== video) {\r\n            return {\r\n                prevVideo: video,\r\n                duration,\r\n                currentTime,\r\n                volume,\r\n                play,\r\n                buffered,\r\n                waiting,\r\n                dragging: false,\r\n                hidden: false,\r\n                fullscreen: false\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { video } = this.props;\r\n        this.connectPlayer(video);\r\n        window.addEventListener('resize', this.onWindowResize);\r\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\r\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { video } = this.props;\r\n        this.disconnectPlayer(video);\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\r\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\r\n\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    onClientUpdateMediaShortcut = update => {\r\n        const { event } = update;\r\n        if (!event) return;\r\n\r\n        this.onKeyDown(event);\r\n    };\r\n\r\n    onKeyDown = event => {\r\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\r\n\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        let handled = false;\r\n        switch (code) {\r\n            case 'Escape': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleClose();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowLeft': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyJ': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowRight': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyL': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowUp': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Space':\r\n            case 'KeyK': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleClick();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyM': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleMute();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyF': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleFullScreen();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyI': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    // this.handlePictureInPicture();\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Digit0':\r\n            case 'Digit1':\r\n            case 'Digit2':\r\n            case 'Digit3':\r\n            case 'Digit4':\r\n            case 'Digit5':\r\n            case 'Digit6':\r\n            case 'Digit7':\r\n            case 'Digit8':\r\n            case 'Digit9': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\r\n                    this.handleSeekProgress(progress);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Home': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(0);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'End': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    this.handleSeek(video.duration - 1.0);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Comma': {\r\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\r\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'Period': {\r\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\r\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\r\n                    handled = true;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (handled) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    showMediaHint(text) {\r\n        const { fileId } = this.props;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaHint',\r\n            fileId,\r\n            text\r\n        });\r\n    }\r\n\r\n    handleVolume = volume => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\r\n\r\n        video.volume = volume;\r\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\r\n    };\r\n\r\n    handlePlaybackRate = rate => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\r\n\r\n        video.playbackRate = rate;\r\n        this.showMediaHint(`${rate}x`);\r\n    };\r\n\r\n    handleSeekProgress = progress => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(progress * video.duration);\r\n    };\r\n\r\n    handleSeek = currentTime => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        currentTime = clamp(currentTime, 0, video.duration || 0);\r\n\r\n        video.currentTime = currentTime;\r\n        this.setState({ currentTime });\r\n    };\r\n\r\n    onFullScreenChange = () => {\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\r\n        const fullscreen = fullscreenElement === fullscreenPlayer;\r\n\r\n        this.setState({\r\n            fullscreen\r\n        });\r\n    };\r\n\r\n    onWindowResize = () => {\r\n\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        if (fullscreenElement) return;\r\n\r\n        const player = document.getElementById('pip-player');\r\n\r\n        const oldLeft = parseInt(player.style.left, 10);\r\n        const oldTop = parseInt(player.style.top, 10);\r\n\r\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\r\n\r\n        if (oldLeft === left && oldTop === top) return;\r\n\r\n        // console.log('[pip] windowResize', left, top);\r\n        player.style.left = left + 'px';\r\n        player.style.top = top + 'px';\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { video } = this.props;\r\n\r\n        if (prevProps.video !== video) {\r\n            this.disconnectPlayer(prevProps.video)\r\n            this.connectPlayer(video);\r\n        }\r\n    }\r\n\r\n    connectPlayer(video) {\r\n        if (!video) return;\r\n\r\n        const pipPlayer = document.getElementById('pip-player');\r\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\r\n        pipPlayer.style.left = left + 'px';\r\n        pipPlayer.style.top = top + 'px';\r\n\r\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\r\n        pipPlayerWrapper.focus();\r\n\r\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\r\n\r\n        const container = document.getElementById('pip-player-container');\r\n        if (!container) return;\r\n\r\n        video.onloadedmetadata = this.handleLoadedMetadata;\r\n        video.onloadeddata = this.handleLoadedData;\r\n        video.oncanplay = this.handleCanPlay;\r\n        video.onplay = this.handlePlay;\r\n        video.onpause = this.handlePause;\r\n        video.onended = this.handleEnded;\r\n        video.ontimeupdate = this.handleTimeUpdate;\r\n        video.onvolumechange = this.handleVolumeChange;\r\n        video.onprogress = this.handleProgress;\r\n        video.onwaiting = this.handleWaiting;\r\n\r\n        container.innerHTML = '';\r\n        container.appendChild(video);\r\n    }\r\n\r\n    disconnectPlayer(video) {\r\n        if (!video) return;\r\n\r\n        video.onloadedmetadata = null;\r\n        video.onloadeddata = null;\r\n        video.oncanplay = null;\r\n        video.onplay = null;\r\n        video.onpause = null;\r\n        video.onended = null;\r\n        video.ontimeupdate = null;\r\n        video.onvolumechange = null;\r\n        video.onprogress = null;\r\n        video.onwaiting = null;\r\n    }\r\n\r\n    handleLoadedData = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n    };\r\n\r\n    handleLoadedMetadata = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { currentTime } = this.state;\r\n        const { duration, volume, buffered } = video;\r\n        // const currentTime = this.getCurrentTime();\r\n\r\n        this.setState({\r\n            duration,\r\n            // currentTime,\r\n            volume,\r\n            waiting: true,\r\n            buffered\r\n        }, () => {\r\n            if (!currentTime) return;\r\n\r\n            video.currentTime = currentTime;\r\n        });\r\n    };\r\n\r\n    handleCanPlay = event => {\r\n        const { target: video } = event;\r\n\r\n        this.setState({\r\n            waiting: false\r\n        }, () => {\r\n            if (!video) return;\r\n\r\n            const { play } = this.state;\r\n            if (play) {\r\n                video.play();\r\n            } else {\r\n                video.pause();\r\n            }\r\n        });\r\n    };\r\n\r\n    handlePlay = event => {\r\n        const { onPlay } = this.props;\r\n\r\n        this.setState({\r\n            play: true,\r\n            hidden: true\r\n        });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\r\n        onPlay && onPlay(event);\r\n    };\r\n\r\n    handlePause = event => {\r\n        const { onPause } = this.props;\r\n\r\n        this.setState({\r\n            play: false,\r\n            hidden: false\r\n        });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\r\n        onPause && onPause(event);\r\n    };\r\n\r\n    handleEnded = event => {\r\n        const { onEnded } = this.props;\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\r\n        onEnded && onEnded(event);\r\n\r\n        const { video } = this.props;\r\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\r\n    };\r\n\r\n    handleTimeUpdate = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { fileId } = this.props;\r\n        const { currentTime, duration, volume, buffered } = video;\r\n\r\n        this.setState({\r\n            duration,\r\n            currentTime,\r\n            volume,\r\n            buffered\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\r\n            fileId,\r\n            currentTime,\r\n            duration,\r\n            volume,\r\n            buffered\r\n        });\r\n\r\n        this.setCurrentTime({ currentTime, duration });\r\n    };\r\n\r\n    handleVolumeChange = event => {\r\n        const { onVolumeChange } = this.props;\r\n\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { volume } = video;\r\n\r\n        this.setState({\r\n            volume\r\n        });\r\n\r\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\r\n        onVolumeChange && onVolumeChange(event);\r\n    };\r\n\r\n    handleProgress = event => {\r\n        const { target: video } = event;\r\n        if (!video) return;\r\n\r\n        const { fileId } = this.props;\r\n\r\n        const { buffered } = video;\r\n\r\n        this.setState({\r\n            buffered\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaViewerProgress',\r\n            fileId,\r\n            buffered\r\n        });\r\n    };\r\n\r\n    handleWaiting = () => {\r\n        this.setState({ waiting: true });\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.startStopPlayer();\r\n    };\r\n\r\n    startStopPlayer = () => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        const { waiting } = this.state;\r\n        if (waiting) {\r\n            this.setState({\r\n                play: !this.state.play,\r\n                hidden: false\r\n            });\r\n        } else {\r\n            if (video.paused) {\r\n                video.play()\r\n            } else {\r\n                video.pause();\r\n            }\r\n        }\r\n    };\r\n\r\n    handlePlayerMouseDown = event => {\r\n        const pip = document.getElementById('pip-player-wrapper');\r\n        if (pip) pip.focus();\r\n\r\n        this.mouseDownRoot = true;\r\n        event.preventDefault();\r\n\r\n        if (event.nativeEvent.which !== 1) return;\r\n\r\n        this.offsetX = event.nativeEvent.offsetX;\r\n        this.offsetY = event.nativeEvent.offsetY;\r\n\r\n        document.onmousemove = this.handleMouseMove;\r\n        document.onmouseup = this.handleMouseUp;\r\n\r\n        this.setState({\r\n            windowDragging: true\r\n        });\r\n    };\r\n\r\n    handleMouseUp = event => {\r\n        event.preventDefault();\r\n\r\n        document.onmousemove = null;\r\n        document.onmouseup = null;\r\n\r\n        this.setState({\r\n            windowDragging: false\r\n        });\r\n    };\r\n\r\n    normalizePosition(left, top, checkGlue = true) {\r\n        const player = document.getElementById('pip-player');\r\n        const playerWidth = player ? player.clientWidth : 300;\r\n        const playerHeight = player ? player.clientHeight : 300;\r\n\r\n        const { clientWidth: documentWidth } = document.documentElement;\r\n        const { clientHeight: documentHeight } = document.documentElement;\r\n\r\n        if (checkGlue && this.glueLeft) {\r\n            left = 0;\r\n        } else if (checkGlue && this.glueRight) {\r\n            left = documentWidth - playerWidth;\r\n        } else {\r\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\r\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\r\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\r\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\r\n            left = clamp(left, 0, documentWidth - playerWidth);\r\n        }\r\n\r\n        if (checkGlue && this.glueTop) {\r\n            top = 0;\r\n        } else if (checkGlue && this.glueBottom) {\r\n            top = documentHeight - playerHeight;\r\n        } else {\r\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\r\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\r\n            top = clamp(top, 0, documentHeight - playerHeight);\r\n        }\r\n\r\n        this.glueLeft = left === 0;\r\n        this.glueRight = left === documentWidth - playerWidth;\r\n        this.glueTop = top === 0;\r\n        this.glueBottom = top === documentHeight - playerHeight;\r\n\r\n        PlayerStore.pipParams = { left, top };\r\n\r\n        return { left, top };\r\n    }\r\n\r\n    handleMouseMove = event => {\r\n        event.preventDefault();\r\n\r\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\r\n\r\n        const player = document.getElementById('pip-player');\r\n        player.style.left = left + 'px';\r\n        player.style.top = top + 'px';\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        event.stopPropagation();\r\n\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        this.setState({\r\n            dragging: true,\r\n            draggingTime: video.currentTime\r\n        });\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        this.setState({\r\n            draggingTime: value * video.duration\r\n        });\r\n    };\r\n\r\n    handleChangeCommitted = () => {\r\n        const { dragging, draggingTime } = this.state;\r\n        if (!dragging) return;\r\n\r\n        this.setState({\r\n            dragging: false,\r\n            currentTime: draggingTime,\r\n            draggingTime: 0\r\n        }, () => {\r\n            const { video } = this.props;\r\n            if (!video) return;\r\n\r\n            if (Number.isFinite(draggingTime)) {\r\n                video.currentTime = draggingTime;\r\n            }\r\n        });\r\n    };\r\n\r\n    handlePanelEnter = () => {\r\n        this.panelEnter = true;\r\n    };\r\n\r\n    handlePanelLeave = () => {\r\n        this.panelEnter = false;\r\n    };\r\n\r\n    handleMouseOver = event => {\r\n        this.mouseDownRoot = false;\r\n        const { hidden } = this.state;\r\n\r\n        if (hidden) {\r\n            this.setState({\r\n                hidden: false\r\n            });\r\n        }\r\n\r\n        clearTimeout(this.mouseOverTimeout);\r\n        this.mouseOverTimeout = setTimeout(() => {\r\n            if (this.panelEnter) return;\r\n            if (!this.state.play) return;\r\n            if (!this.state.duration) return;\r\n\r\n            this.setState({\r\n                hidden: true\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePictureInPicture',\r\n            videoInfo: null\r\n        });\r\n    };\r\n\r\n    handleVolumeSliderChange = (event, volume) => {\r\n        if (volume === this.state.volume) return;\r\n\r\n        this.setState({\r\n            volume\r\n        }, () => {\r\n            const { video } = this.props;\r\n            if (!video) return;\r\n\r\n            video.volume = volume;\r\n        });\r\n    };\r\n\r\n    handleVolumeSliderChangeCommitted = event => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        document.activeElement.blur();\r\n    };\r\n\r\n    handleMute = () => {\r\n        const { video } = this.props;\r\n        if (!video) return;\r\n\r\n        if (video.volume === 0) {\r\n            video.volume = this.prevVolume || 0.5;\r\n        } else {\r\n            this.prevVolume = video.volume;\r\n            video.volume = 0;\r\n        }\r\n    }\r\n\r\n    handleFullScreen = event => {\r\n        event && event.stopPropagation();\r\n\r\n        const root = document.getElementById('pip-player-wrapper');\r\n        if (!root) return;\r\n\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n        if (fullscreenElement) {\r\n            this.exitFullscreen();\r\n            return;\r\n        }\r\n\r\n        this.requestFullscreen(root);\r\n    };\r\n\r\n    requestFullscreen(element) {\r\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\r\n\r\n        method && method.call(element);\r\n    }\r\n\r\n    exitFullscreen() {\r\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\r\n\r\n        method && method.call(document);\r\n    }\r\n\r\n    getCurrentTime = () => {\r\n        const { fileId } = this.props;\r\n\r\n        const file = FileStore.get(fileId);\r\n        if (!file) return;\r\n\r\n        const { remote } = file;\r\n        if (!remote) return;\r\n\r\n        const { unique_id } = remote;\r\n        if (!unique_id) return;\r\n\r\n        return PlayerStore.getCurrentTime(unique_id);\r\n    };\r\n\r\n    setCurrentTime = currentTime => {\r\n        const { fileId } = this.props;\r\n\r\n        const file = FileStore.get(fileId);\r\n        if (!file) return;\r\n\r\n        const { remote } = file;\r\n        if (!remote) return;\r\n\r\n        const { unique_id } = remote;\r\n        if (!unique_id) return;\r\n\r\n        if (!currentTime) {\r\n            PlayerStore.clearCurrentTime(unique_id);\r\n        } else {\r\n            PlayerStore.setCurrentTime(unique_id, currentTime);\r\n        }\r\n    };\r\n\r\n    handlePanelDoubleClick = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleClickRoot = event => {\r\n        event.stopPropagation();\r\n\r\n        const { mouseDownRoot } = this;\r\n        if (!mouseDownRoot) return;\r\n\r\n        this.startStopPlayer();\r\n    }\r\n\r\n    handleDoubleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { mouseDownRoot } = this;\r\n        if (!mouseDownRoot) return;\r\n\r\n        this.handleFullScreen(event);\r\n    };\r\n\r\n    handleFocus = () => {\r\n        KeyboardManager.add(this.keyboardHandler);\r\n\r\n    };\r\n\r\n    handleBlur = () => {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    };\r\n\r\n    render() {\r\n        const { fileId } = this.props;\r\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\r\n\r\n        const time = dragging ? draggingTime : currentTime;\r\n        const value = duration > 0 ? time / duration : 0;\r\n        const bufferedTime = Player.getBufferedTime(time, buffered);\r\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\r\n\r\n        const timeString = getDurationString(Math.floor(time) || 0);\r\n        const durationString = getDurationString(Math.floor(duration) || 0);\r\n\r\n        const pictureInPictureEnabled = true;\r\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\r\n\r\n        return (\r\n            <div\r\n                id='pip-player'\r\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\r\n                onMouseDown={this.handlePlayerMouseDown}\r\n                onMouseMove={this.handleMouseOver}\r\n                onClick={this.handleClickRoot}\r\n                onDoubleClick={this.handleDoubleClick}>\r\n                <div\r\n                    id='pip-player-wrapper'\r\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\r\n                    onFocus={this.handleFocus}\r\n                    onBlur={this.handleBlur}\r\n                    tabIndex={0}>\r\n                    <div id='pip-player-container'/>\r\n                    <Hint fileId={fileId}/>\r\n\r\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\r\n                        <CloseIcon/>\r\n                    </button>\r\n                    <div\r\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\r\n                        onClick={e => e.stopPropagation()}\r\n                        onMouseDown={e => e.stopPropagation()}\r\n                        onDoubleClick={this.handlePanelDoubleClick}\r\n                        onMouseEnter={this.handlePanelEnter}\r\n                        onMouseLeave={this.handlePanelLeave}>\r\n                        <div className='player-slider'>\r\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\r\n                            <Slider\r\n                                value={value}\r\n                                min={0}\r\n                                max={1}\r\n                                step={0.001}\r\n                                classes={{\r\n                                    root: 'player-slider-root',\r\n                                    rail: 'player-slider-rail',\r\n                                    track: 'player-slider-track',\r\n                                    thumb: 'player-slider-thumb',\r\n                                    active: 'player-slider-active'\r\n                                }}\r\n                                onChange={this.handleChange}\r\n                                onChangeCommitted={this.handleChangeCommitted}\r\n                                onMouseDown={this.handleMouseDown}\r\n                            />\r\n                        </div>\r\n                        <div className='player-controls'>\r\n                            <button className='player-button' onClick={this.handleClick}>\r\n                                {play ? <PauseIcon/> : <PlayIcon/>}\r\n                            </button>\r\n                            <div className='player-time'>\r\n                                {`${timeString} / ${durationString}`}\r\n                            </div>\r\n                            <div className='player-volume'>\r\n                                <Slider\r\n                                    value={volume}\r\n                                    min={0}\r\n                                    max={1}\r\n                                    step={0.001}\r\n                                    classes={{\r\n                                        root: 'player-volume-root',\r\n                                        rail: 'player-volume-rail',\r\n                                        track: 'player-volume-track',\r\n                                        thumb: 'player-volume-thumb',\r\n                                        active: 'player-volume-active'\r\n                                    }}\r\n                                    onChange={this.handleVolumeSliderChange}\r\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\r\n                                />\r\n                            </div>\r\n                            <button className='player-button' onClick={this.handleMute}>\r\n                                {Player.getVolumeIcon(volume)}\r\n                            </button>\r\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\r\n                                <FullScreen/>\r\n                            </button>\r\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\r\n                            {/*    <PictureInPictureIcon/>*/}\r\n                            {/*</button>*/}\r\n                        </div>\r\n                    </div>\r\n                    <Progress waiting={waiting}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nPipPlayer.propTypes = {\r\n\r\n};\r\n\r\nexport default PipPlayer;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ChatTile from './ChatTile';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './ForwardTargetChat.css';\r\n\r\nclass ForwardTargetChat extends React.Component {\r\n    render() {\r\n        const { chatId, selected, onSelect, t } = this.props;\r\n\r\n        const shortTitle = getChatShortTitle(chatId, true, t);\r\n\r\n        return (\r\n            <div\r\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\r\n                onClick={onSelect}>\r\n                <div className='forward-target-chat-tile'>\r\n                    <div className='forward-target-chat-tile-wrapper'>\r\n                        <ChatTile chatId={chatId} />\r\n                    </div>\r\n                    {selected && <div className='forward-target-chat-selection' />}\r\n                    <div\r\n                        className={classNames(\r\n                            'forward-target-chat-mark',\r\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\r\n                        )}\r\n                    />\r\n                    <div className='forward-target-chat-mark-icon' />\r\n                </div>\r\n                <div className='forward-target-chat-title'>{shortTitle}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nForwardTargetChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    selected: PropTypes.bool,\r\n    onSelect: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(ForwardTargetChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport async function copy(text) {\r\n    try {\r\n        if (navigator.clipboard) {\r\n            await navigator.clipboard.writeText(text);\r\n            return true;\r\n        }\r\n    } catch (e) {\r\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\r\n    }\r\n\r\n    return copyOld(text);\r\n}\r\n\r\nfunction copyOld(text) {\r\n    let element;\r\n    let successful;\r\n    try {\r\n        element = document.createElement('textarea');\r\n        element.contentEditable = true;\r\n        element.readOnly = true;\r\n        element.value = text;\r\n        element.style.all = 'unset';\r\n        element.style.position = 'fixed';\r\n        element.style.top = 0;\r\n        element.style.clip = 'rect(0, 0, 0, 0)';\r\n        element.style.whiteSpace = 'pre';\r\n        element.style.webkitUserSelect = 'text';\r\n        element.style.MozUserSelect = 'text';\r\n        element.style.msUserSelect = 'text';\r\n        element.style.userSelect = 'text';\r\n\r\n        document.body.appendChild(element);\r\n\r\n        element.focus();\r\n        element.select();\r\n\r\n        successful = document.execCommand('copy');\r\n        if (!successful) {\r\n            throw new Error();\r\n        }\r\n        return true;\r\n    } catch {\r\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\r\n    } finally {\r\n        if (element) {\r\n            document.body.removeChild(element);\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport OptionStore from '../Stores/OptionStore';\r\n\r\nexport function sprintf(t, key, ...args) {\r\n    return t(key, { postProcess: 'sprintf', sprintf: args });\r\n}\r\n\r\nlet cyrillicInput = null;\r\n\r\nfunction getCyrillicInputMap() {\r\n    return new Map([\r\n        ['q', 'й'],\r\n        ['w', 'ц'],\r\n        ['e', 'у'],\r\n        ['r', 'к'],\r\n        ['t', 'е'],\r\n        ['y', 'н'],\r\n        ['u', 'г'],\r\n        ['i', 'ш'],\r\n        ['o', 'щ'],\r\n        ['p', 'з'],\r\n        ['[', 'х'],\r\n        [']', 'ъ'],\r\n        ['a', 'ф'],\r\n        ['s', 'ы'],\r\n        ['d', 'в'],\r\n        ['f', 'а'],\r\n        ['g', 'п'],\r\n        ['h', 'р'],\r\n        ['j', 'о'],\r\n        ['k', 'л'],\r\n        ['l', 'д'],\r\n        [';', 'ж'],\r\n        [\"'\", 'э'],\r\n        ['\\\\', 'ё'],\r\n        ['z', 'я'],\r\n        ['x', 'ч'],\r\n        ['c', 'с'],\r\n        ['v', 'м'],\r\n        ['b', 'и'],\r\n        ['n', 'т'],\r\n        ['m', 'ь'],\r\n        [',', 'б'],\r\n        ['.', 'ю']\r\n    ]);\r\n}\r\n\r\nfunction isCyrillicPackId(packId) {\r\n    if (!packId) return false;\r\n\r\n    const { value } = packId;\r\n    if (!value) return false;\r\n\r\n    return value.value === 'ru';\r\n}\r\n\r\nfunction getCyrillicInput(input) {\r\n    if (!input) return null;\r\n    if (!input.length) return null;\r\n\r\n    const currentPackId = OptionStore.get('language_pack_id');\r\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\r\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\r\n    if (!hasCyrillicPackId) return null;\r\n\r\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\r\n\r\n    let output = '';\r\n    for (let i = 0; i < input.length; i++) {\r\n        if (cyrillicInput.has(input[i])) {\r\n            output += cyrillicInput.get(input[i]);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return output === '' ? null : output;\r\n}\r\n\r\nlet latinInput = null;\r\n\r\nfunction getLatinInputMap() {\r\n    return new Map([\r\n        ['й', 'q'],\r\n        ['ц', 'w'],\r\n        ['у', 'e'],\r\n        ['к', 'r'],\r\n        ['е', 't'],\r\n        ['н', 'y'],\r\n        ['г', 'u'],\r\n        ['ш', 'i'],\r\n        ['щ', 'o'],\r\n        ['з', 'p'],\r\n        ['х', '['],\r\n        ['ъ', ']'],\r\n        ['ф', 'a'],\r\n        ['ы', 's'],\r\n        ['в', 'd'],\r\n        ['а', 'f'],\r\n        ['п', 'g'],\r\n        ['р', 'h'],\r\n        ['о', 'j'],\r\n        ['л', 'k'],\r\n        ['д', 'l'],\r\n        ['ж', ';'],\r\n        ['э', \"'\"],\r\n        ['ё', '\\\\'],\r\n        ['я', 'z'],\r\n        ['ч', 'x'],\r\n        ['с', 'c'],\r\n        ['м', 'v'],\r\n        ['и', 'b'],\r\n        ['т', 'n'],\r\n        ['ь', 'm'],\r\n        ['б', ','],\r\n        ['ю', '.']\r\n    ]);\r\n}\r\n\r\nfunction getLatinInput(input) {\r\n    if (!input) return null;\r\n    if (!input.length) return null;\r\n\r\n    latinInput = latinInput || getLatinInputMap();\r\n\r\n    let output = '';\r\n    for (let i = 0; i < input.length; i++) {\r\n        if (latinInput.has(input[i])) {\r\n            output += latinInput.get(input[i]);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return output === '' ? null : output;\r\n}\r\n\r\nexport { getCyrillicInput, getLatinInput };\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { withSnackbar } from 'notistack';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\r\nimport { copy } from '../../Utils/Text';\r\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\r\nimport { clearSelection, forward } from '../../Actions/Client';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ForwardDialog.css';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\n\r\nclass ForwardDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatIds: [],\r\n            savedMessages: null\r\n        };\r\n\r\n        this.searchRef = React.createRef();\r\n        this.messageRef = React.createRef();\r\n\r\n        this.targetChats = new Map();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        this.setSearchFocus();\r\n    }\r\n\r\n    loadContent = async () => {\r\n        this.getPublicMessageLink();\r\n\r\n        const promises = [];\r\n        const getChatsPromise = TdLibController.send({\r\n            '@type': 'getChats',\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: 100\r\n        });\r\n        promises.push(getChatsPromise);\r\n\r\n        const savedMessagesPromise = TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: true\r\n        });\r\n        promises.push(savedMessagesPromise);\r\n\r\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\r\n\r\n        this.setState({\r\n            chatIds: chats.chat_ids,\r\n            savedMessages: savedMessages\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chats.chat_ids);\r\n    };\r\n\r\n    getPublicMessageLink = async () => {\r\n        const { chatId, messageIds } = this.props;\r\n        if (!chatId) return;\r\n        if (!messageIds) return;\r\n        if (messageIds.length > 1) return;\r\n        if (!isSupergroup(chatId)) return;\r\n        if (!getChatUsername(chatId)) return;\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getMessageLink',\r\n            chat_id: chatId,\r\n            message_id: messageIds[0],\r\n            for_album: false,\r\n            for_comment: false\r\n        });\r\n\r\n        this.setState({\r\n            publicMessageLink: result\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        forward(null);\r\n    };\r\n\r\n    handleCopyLink = () => {\r\n        const { t } = this.props;\r\n        const { publicMessageLink } = this.state;\r\n\r\n        if (!publicMessageLink) return;\r\n        if (!publicMessageLink.link) return;\r\n\r\n        copy(publicMessageLink.link);\r\n\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    getForwardPhotoSize = (chatId, messageIds) => {\r\n        if (messageIds.length !== 1) return null;\r\n\r\n        const message = MessageStore.get(chatId, messageIds[0]);\r\n        if (!message) return null;\r\n\r\n        const { can_be_forwarded, content } = message;\r\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\r\n            const { photo } = content;\r\n            if (!photo) return null;\r\n\r\n            const { sizes } = photo;\r\n            if (sizes && sizes.length) {\r\n                return sizes[sizes.length - 1];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    handleSend = () => {\r\n        this.handleClose();\r\n        clearSelection();\r\n\r\n        const { chatId, messageIds, inputMessageContent } = this.props;\r\n        if (!chatId && !messageIds && !inputMessageContent) return;\r\n\r\n        const text = this.getInnerText(this.messageRef.current);\r\n\r\n        this.targetChats.forEach(async targetChatId => {\r\n            if (inputMessageContent) {\r\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n                if (text) {\r\n                    if ('caption' in inputMessageContent) {\r\n                        inputMessageContent.caption = {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        };\r\n                    } else {\r\n                        TdLibController.send({\r\n                            '@type': 'sendMessage',\r\n                            chat_id: targetChatId,\r\n                            reply_to_message_id: 0,\r\n                            disable_notifications: false,\r\n                            from_background: false,\r\n                            reply_markup: null,\r\n                            input_message_content: {\r\n                                '@type': 'inputMessageText',\r\n                                text: {\r\n                                    '@type': 'formattedText',\r\n                                    text,\r\n                                    entities: null\r\n                                },\r\n                                disable_web_page_preview: false,\r\n                                clear_draft: false\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: inputMessageContent\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            const size = this.getForwardPhotoSize(chatId, messageIds);\r\n            if (size) {\r\n                const { width, height, photo } = size;\r\n\r\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: {\r\n                        '@type': 'inputMessagePhoto',\r\n                        photo: {\r\n                            '@type': 'inputFileId',\r\n                            id: photo.id\r\n                        },\r\n                        thumbnail: null,\r\n                        added_sticker_file_ids: [],\r\n                        width: width,\r\n                        height: height,\r\n                        caption: {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        },\r\n                        ttl: 0\r\n                    }\r\n                });\r\n\r\n                return;\r\n            }\r\n\r\n            if (text) {\r\n                await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n                TdLibController.send({\r\n                    '@type': 'sendMessage',\r\n                    chat_id: targetChatId,\r\n                    reply_to_message_id: 0,\r\n                    disable_notifications: false,\r\n                    from_background: false,\r\n                    reply_markup: null,\r\n                    input_message_content: {\r\n                        '@type': 'inputMessageText',\r\n                        text: {\r\n                            '@type': 'formattedText',\r\n                            text,\r\n                            entities: null\r\n                        },\r\n                        disable_web_page_preview: false,\r\n                        clear_draft: false\r\n                    }\r\n                });\r\n            }\r\n\r\n            TdLibController.send({\r\n                '@type': 'forwardMessages',\r\n                chat_id: targetChatId,\r\n                from_chat_id: chatId,\r\n                message_ids: messageIds,\r\n                disable_notifications: false,\r\n                from_background: false,\r\n                as_album: false\r\n            });\r\n        });\r\n    };\r\n\r\n    handleChangeSelection = chatId => {\r\n        if (this.targetChats.has(chatId)) {\r\n            this.targetChats.delete(chatId);\r\n        } else {\r\n            this.targetChats.set(chatId, chatId);\r\n        }\r\n\r\n        // console.log(this.targetChats);\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    getInnerText = element => {\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        return innerText;\r\n    };\r\n\r\n    handleSearchKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    handleSearchKeyUp = async () => {\r\n        const { chatIds, savedMessages } = this.state;\r\n\r\n        const element = this.searchRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n\r\n        const innerText = this.getInnerText(element).trim();\r\n        if (!innerText) {\r\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\r\n            return;\r\n        }\r\n\r\n        const latinText = getLatinInput(innerText);\r\n        const cyrillicText = getCyrillicInput(innerText);\r\n\r\n        const chatsSource = savedMessages\r\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\r\n            : chatIds;\r\n\r\n        const searchResults = chatsSource.filter(\r\n            x =>\r\n                this.hasSearchText(x, innerText) ||\r\n                (latinText && this.hasSearchText(x, latinText)) ||\r\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\r\n        );\r\n\r\n        this.setState({ searchText: innerText, searchResults });\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatsOnServer',\r\n            query: innerText,\r\n            limit: 100\r\n        });\r\n\r\n        if (this.state.searchText !== innerText) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            globalSearchResults: result.chat_ids\r\n        });\r\n    };\r\n\r\n    handleSearchPaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleMessageKeyUp = () => {\r\n        const element = this.messageRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    };\r\n\r\n    handleMessagePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    hasSearchText = (chatId, searchText) => {\r\n        const { t } = this.props;\r\n        const { savedMessages } = this.state;\r\n\r\n        if (savedMessages && chatId === savedMessages.id) {\r\n            const title = getChatTitle(chatId, true, t) || '';\r\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        const title1 = getChatTitle(chatId, false, t) || '';\r\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n            return true;\r\n        }\r\n\r\n        const username = getChatUsername(chatId) || '';\r\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    setSearchFocus = () => {\r\n        setTimeout(() => {\r\n            if (this.searchRef.current) {\r\n                const element = this.searchRef.current;\r\n\r\n                element.focus();\r\n            }\r\n        }, 100);\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            chatIds,\r\n            searchText,\r\n            searchResults,\r\n            globalSearchResults,\r\n            savedMessages,\r\n            publicMessageLink\r\n        } = this.state;\r\n\r\n        const chatsSource = savedMessages\r\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\r\n            : chatIds;\r\n\r\n        const chats = chatsSource.map(x => (\r\n            <ForwardTargetChat\r\n                key={x}\r\n                chatId={x}\r\n                selected={this.targetChats.has(x)}\r\n                onSelect={() => this.handleChangeSelection(x)}\r\n            />\r\n        ));\r\n\r\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\r\n        const filteredResults = (globalSearchResults || []).filter(\r\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\r\n        );\r\n\r\n        const foundChats = (searchResults || [])\r\n            .concat(filteredResults)\r\n            .map(x => (\r\n                <ForwardTargetChat\r\n                    key={x}\r\n                    chatId={x}\r\n                    selected={this.targetChats.has(x)}\r\n                    onSelect={() => this.handleChangeSelection(x)}\r\n                />\r\n            ));\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='forward-dialog-title'\r\n                aria-describedby='forward-dialog-description'\r\n                className='forward-dialog'>\r\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\r\n                <div\r\n                    ref={this.searchRef}\r\n                    id='forward-dialog-search'\r\n                    className='scrollbars-hidden'\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    placeholder={t('Search')}\r\n                    onKeyDown={this.handleSearchKeyDown}\r\n                    onKeyUp={this.handleSearchKeyUp}\r\n                    onPaste={this.handleSearchPaste}\r\n                />\r\n                <div className='forward-dialog-content'>\r\n                    <div className='forward-dialog-list'>{chats}</div>\r\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\r\n                </div>\r\n                {this.targetChats.size > 0 && (\r\n                    <div\r\n                        ref={this.messageRef}\r\n                        id='forward-dialog-message'\r\n                        contentEditable\r\n                        suppressContentEditableWarning\r\n                        placeholder={t('ShareComment')}\r\n                        onKeyUp={this.handleMessageKeyUp}\r\n                        onPaste={this.handleMessagePaste}\r\n                    />\r\n                )}\r\n                <DialogActions>\r\n                    <Button onClick={this.handleClose} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    {this.targetChats.size > 0 && (\r\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\r\n                            {t('Send')}\r\n                        </Button>\r\n                    )}\r\n                    {!this.targetChats.size && publicMessageLink && (\r\n                        <Button onClick={this.handleCopyLink} color='primary'>\r\n                            {t('CopyLink')}\r\n                        </Button>\r\n                    )}\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nForwardDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageIds: PropTypes.array,\r\n    inputMessageContent: PropTypes.object\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(ForwardDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\r\n    'Document2'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\r\n    'SharedMedia'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\r\n    'Verified'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\r\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './DialogTitle.css';\r\n\r\nclass DialogTitle extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\r\n    }\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (update.chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, showSavedMessages } = this.props;\r\n\r\n        const isVerified = isChatVerified(chatId);\r\n        const title = getChatTitle(chatId, showSavedMessages, t);\r\n\r\n        return (\r\n            <div className='dialog-title'>\r\n                <span className='dialog-title-span'>{title}</span>\r\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogTitle.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    showSavedMessages: PropTypes.bool\r\n};\r\n\r\nDialogTitle.defaultProps = {\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(DialogTitle);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport './DialogStatus.css';\r\n\r\nclass DialogStatus extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            subtitle: getChatSubtitleWithoutTyping(chatId),\r\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            const { chatId } = props;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                subtitle: getChatSubtitleWithoutTyping(chatId),\r\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId } = this.props;\r\n        const { subtitle, isAccent } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.subtitle !== subtitle) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isAccent !== isAccent) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    onUpdateUserStatus = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        let updateSubtitle = false;\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\r\n                if (fullInfo && fullInfo.members) {\r\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\r\n                    if (member) {\r\n                        updateSubtitle = true;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypePrivate': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    updateSubtitle = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    updateSubtitle = true;\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (updateSubtitle) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    updateSubtitle = chatId => {\r\n        this.setState({\r\n            subtitle: getChatSubtitleWithoutTyping(chatId),\r\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\r\n        });\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (\r\n            type &&\r\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\r\n            type.user_id === update.user_id\r\n        ) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { type } = chat;\r\n        if (!type) return;\r\n\r\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\r\n            this.updateSubtitle(chatId);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { subtitle: externalSubtitle } = this.props;\r\n        const { subtitle, isAccent } = this.state;\r\n\r\n        return (\r\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\r\n                {externalSubtitle ? externalSubtitle + ', ' : null}\r\n                {subtitle}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogStatus;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport DialogStatus from './DialogStatus';\r\nimport { isMeChat } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './Chat.css';\r\n\r\nclass Chat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = this.props;\r\n        this.state = {\r\n            chat: ChatStore.get(chatId)\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.chatId !== this.props.chatId;\r\n    }\r\n\r\n    handleClick = () => {\r\n        const { chatId, onSelect } = this.props;\r\n        if (!onSelect) return;\r\n\r\n        onSelect(chatId);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\r\n\r\n        const isSavedMessages = isMeChat(chatId);\r\n\r\n        return (\r\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\r\n                <div className='chat-wrapper'>\r\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\r\n                    {showTitle && (\r\n                        <div className='chat-inner-wrapper'>\r\n                            <div className='tile-first-row'>\r\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\r\n                            </div>\r\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\r\n                                <div className='tile-second-row'>\r\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    subtitle: PropTypes.string,\r\n    showSavedMessages: PropTypes.bool,\r\n    showStatus: PropTypes.bool,\r\n    showTitle: PropTypes.bool,\r\n    onSelect: PropTypes.func,\r\n    onTileSelect: PropTypes.func\r\n};\r\n\r\nChat.defaultProps = {\r\n    showSavedMessages: true,\r\n    showStatus: true,\r\n    showTitle: true\r\n};\r\n\r\nexport default Chat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\r\n    'Back'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\r\nimport './ChatDetailsHeader.css';\r\n\r\nclass ChatDetailsHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, t, backButton, onClick, onClose } = this.props;\r\n\r\n        let info = t('ChatInfo');\r\n        if (isPrivateChat(chatId)) {\r\n            info = t('Info');\r\n        } else if (isChannelChat(chatId)) {\r\n            info = t('ChannelInfo');\r\n        }\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                {backButton && (\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                )}\r\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\r\n                    <span className='header-status-content'>{info}</span>\r\n                </div>\r\n                {!backButton && (\r\n                    <IconButton className='header-right-button' onClick={onClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(ChatDetailsHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { isChatMuted } from '../../Utils/Chat';\r\nimport { debounce } from '../../Utils/Common';\r\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\r\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport NotificationStore from '../../Stores/NotificationStore';\r\n\r\nclass Notifications extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId } = props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            isMuted: isChatMuted(chatId)\r\n        };\r\n\r\n        this.debouncedSetChatNotificationSettings = debounce(\r\n            this.setChatNotificationSettings,\r\n            NOTIFICATION_DEBOUNCE_DELAY_MS\r\n        );\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            const { chatId } = props;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                isMuted: isChatMuted(chatId)\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\r\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\r\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    onUpdateChatNotificationSettings = update => {\r\n        const { chat_id } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (!chat_id) return;\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.setState({ isMuted: isChatMuted(chatId) });\r\n    };\r\n\r\n    onUpdateScopeNotificationSettings = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        switch (update.scope['@type']) {\r\n            case 'notificationSettingsScopeGroupChats': {\r\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\r\n                    this.setState({ isMuted: isChatMuted(chatId) });\r\n                }\r\n                break;\r\n            }\r\n            case 'notificationSettingsScopePrivateChats': {\r\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\r\n                    this.setState({ isMuted: isChatMuted(chatId) });\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleSetChatNotifications = () => {\r\n        this.setState({ isMuted: !this.state.isMuted });\r\n        this.debouncedSetChatNotificationSettings();\r\n    };\r\n\r\n    setChatNotificationSettings = () => {\r\n        const { chatId } = this.props;\r\n        const { isMuted } = this.state;\r\n\r\n        toggleChatNotificationSettings(chatId, isMuted);\r\n    };\r\n}\r\n\r\nexport default Notifications;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Notifications from '../ColumnMiddle/Notifications';\r\nimport './NotificationsListItem.css';\r\n\r\nclass NotificationsListItem extends Notifications {\r\n    render() {\r\n        const { t } = this.props;\r\n        const { isMuted } = this.state;\r\n\r\n        return (\r\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\r\n                <ListItemIcon>\r\n                    <Checkbox\r\n                        className='notifications-checkbox'\r\n                        edge='start'\r\n                        checked={!isMuted}\r\n                        color='primary'\r\n                        tabIndex={-1}\r\n                        disableRipple\r\n                        onChange={this.handleSetChatNotifications}\r\n                    />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                    primary={\r\n                        <Typography variant='inherit' noWrap>\r\n                            {t('Notifications')}\r\n                        </Typography>\r\n                    }\r\n                    secondary={!isMuted ? t('NotificationsOn') : t('NotificationsOff')}\r\n                />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(NotificationsListItem);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Animator from '../../../Utils/Animatior';\r\nimport { clamp, throttle } from '../../../Utils/Common';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './SharedMediaTabs.css';\r\n\r\nclass SharedMediaTabs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.filterRef = new Map();\r\n        this.filtersRef = React.createRef();\r\n        this.filterSelectionRef = React.createRef();\r\n\r\n        this.state = { }\r\n\r\n        this.onWindowResize = throttle(this.onWindowResize, 250);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n\r\n        if (chatId !== state.prevChatId) {\r\n            const media = MessageStore.getMedia(props.chatId);\r\n\r\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\r\n            const photoAndVideo = media ? media.photoAndVideo : [];\r\n            const document = media ? media.document : [];\r\n            const audio = media ? media.audio : [];\r\n            const url = media ? media.url : [];\r\n            const voiceNote = media ? media.voiceNote : [];\r\n            const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n            let selectedIndex = -1;\r\n            if (members.length > 0) {\r\n                selectedIndex = 0;\r\n            } else if (photoAndVideo.length > 0) {\r\n                selectedIndex = 1;\r\n            } else if (document.length > 0) {\r\n                selectedIndex = 2;\r\n            } else if (audio.length > 0) {\r\n                selectedIndex = 3;\r\n            } else if (url.length > 0) {\r\n                selectedIndex = 4;\r\n            } else if (voiceNote.length > 0) {\r\n                selectedIndex = 5;\r\n            } else if (groupsInCommon.length > 0) {\r\n                selectedIndex = 6;\r\n            }\r\n\r\n            return {\r\n                prevChatId: props.chatId,\r\n                selectedIndex,\r\n                members,\r\n                photoAndVideo,\r\n                document,\r\n                audio,\r\n                url,\r\n                voiceNote,\r\n                groupsInCommon,\r\n                isSmallWidth: false\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.observeResize();\r\n        this.setSelection();\r\n\r\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.unobserveResize();\r\n        this.observeResize();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unobserveResize();\r\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    hasObserver = () => {\r\n        return 'ResizeObserver' in window;\r\n    };\r\n\r\n    observeResize() {\r\n        if (!this.hasObserver()) return;\r\n        const filters = this.filtersRef.current;\r\n        if (!filters) return;\r\n\r\n        const observer = new ResizeObserver(this.onWindowResize);\r\n        observer.observe(filters);\r\n\r\n        this.resizeObserver = { observer, filters }\r\n    }\r\n\r\n    unobserveResize() {\r\n        if (!this.hasObserver()) return;\r\n        if (!this.resizeObserver) return;\r\n\r\n        const { observer, filters } = this.resizeObserver;\r\n        if (!observer) return;\r\n        if (!filters) return;\r\n\r\n        observer.unobserve(filters);\r\n    }\r\n\r\n    onWindowResize = () => {\r\n        this.setSelection(true);\r\n    };\r\n\r\n    setMediaState = (media, selectedIndex) => {\r\n        const { chatId } = this.props;\r\n\r\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || (media.fullInfo && media.fullInfo.members) || [] : [];\r\n        const photoAndVideo = media ? media.photoAndVideo : [];\r\n        const document = media ? media.document : [];\r\n        const audio = media ? media.audio : [];\r\n        const url = media ? media.url : [];\r\n        const voiceNote = media ? media.voiceNote : [];\r\n        const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n        const hasMembers = members.length > 0;\r\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\r\n        const hasDocument = document.length > 0;\r\n        const hasAudio = audio.length > 0;\r\n        const hasUrl = url.length > 0;\r\n        const hasVoiceNote = voiceNote.length > 0;\r\n        const hasGroupsInCommon = groupsInCommon.length > 0;\r\n\r\n        const replaceSelectedIndex =\r\n            selectedIndex === -1\r\n            || selectedIndex === 0 && !hasMembers\r\n            || selectedIndex === 1 && !hasPhotoAndVideo\r\n            || selectedIndex === 2 && !hasDocument\r\n            || selectedIndex === 3 && !hasAudio\r\n            || selectedIndex === 4 && !hasUrl\r\n            || selectedIndex === 5 && !hasVoiceNote\r\n            || selectedIndex === 6 && !hasGroupsInCommon;\r\n        if (replaceSelectedIndex) {\r\n            if (hasMembers) {\r\n                selectedIndex = 0;\r\n            } else if (hasPhotoAndVideo) {\r\n                selectedIndex = 1;\r\n            } else if (hasDocument) {\r\n                selectedIndex = 2;\r\n            } else if (hasAudio) {\r\n                selectedIndex = 3;\r\n            } else if (hasUrl) {\r\n                selectedIndex = 4;\r\n            } else if (hasVoiceNote) {\r\n                selectedIndex = 5;\r\n            } else if (hasGroupsInCommon) {\r\n                selectedIndex = 6;\r\n            }\r\n\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaTab',\r\n                chatId,\r\n                index: selectedIndex\r\n            });\r\n        }\r\n\r\n        this.setState({\r\n            selectedIndex,\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection();\r\n        });\r\n    }\r\n\r\n    onClientUpdateChatMedia = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chatId, media } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onClientUpdateMediaTab = update => {\r\n        const { chatId, index } = update;\r\n        if (chatId !== this.props.chatId) return;\r\n\r\n        this.setState({\r\n            selectedIndex: index\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection();\r\n        });\r\n    };\r\n\r\n    setSelection = (transition = true) => {\r\n        const { selectedIndex, isSmallWidth } = this.state;\r\n        if (selectedIndex === -1) return;\r\n\r\n        const padding = 3;\r\n\r\n        const scroll = this.filtersRef.current;\r\n\r\n        let item = null;\r\n        let left = 0;\r\n        const membersFilter = this.filterRef.get('members');\r\n        if (selectedIndex === 0 && membersFilter) {\r\n            item = membersFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\r\n        if (selectedIndex === 1 && photoAndVideoFilter) {\r\n            item = photoAndVideoFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const documentFilter = this.filterRef.get('document');\r\n        if (selectedIndex === 2 && documentFilter) {\r\n            item = documentFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const audioFilter = this.filterRef.get('audio');\r\n        if (selectedIndex === 3 && audioFilter) {\r\n            item = audioFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const urlFilter = this.filterRef.get('url');\r\n        if (selectedIndex === 4 && urlFilter) {\r\n            item = urlFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\r\n        if (selectedIndex === 5 && voiceNoteFilter) {\r\n            item = voiceNoteFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\r\n        if (selectedIndex === 6 && groupsInCommonFilter) {\r\n            item = groupsInCommonFilter.firstChild;\r\n            left = item.offsetLeft;\r\n        }\r\n\r\n        if (!item) return;\r\n\r\n        const filterSelection = this.filterSelectionRef.current;\r\n        if (filterSelection) {\r\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\r\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\r\n        }\r\n\r\n        if (item && transition){\r\n            const { animator } = this;\r\n\r\n            if (animator) {\r\n                animator.stop();\r\n            }\r\n\r\n            this.animator = new Animator(250, [\r\n                {\r\n                    from: scroll.scrollLeft,\r\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\r\n                    func: left => (scroll.scrollLeft = left)\r\n                }\r\n            ]);\r\n\r\n            setTimeout(() => {\r\n                if (!this.animator) return;\r\n\r\n                this.animator.start();\r\n            }, 0);\r\n\r\n\r\n            // item.scrollIntoView();\r\n        }\r\n    };\r\n\r\n    handleFilterClick = (event, id) => {\r\n        if (event && event.button !== 0) return;\r\n        const { chatId, onClick } = this.props;\r\n\r\n        onClick && onClick(event);\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTab',\r\n            chatId,\r\n            index: id\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { selectedIndex, members, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\r\n\r\n        const tabsCount =\r\n            (members.length > 0 ? 1 : 0) +\r\n            (photoAndVideo.length > 0 ? 1 : 0) +\r\n            (document.length > 0 ? 1 : 0) +\r\n            (audio.length > 0 ? 1 : 0) +\r\n            (url.length > 0 ? 1 : 0) +\r\n            (voiceNote.length > 0 ? 1 : 0) +\r\n            (groupsInCommon.length > 0 ? 1 : 0);\r\n\r\n        const hasSharedMedia =\r\n            members.length > 0\r\n            || photoAndVideo.length > 0\r\n            || document.length > 0\r\n            || audio.length > 0\r\n            || url.length > 0\r\n            || voiceNote.length > 0\r\n            || groupsInCommon.length > 0;\r\n\r\n        if (!hasSharedMedia) {\r\n            return null;\r\n        }\r\n\r\n        this.filterRef = new Map();\r\n        return (\r\n            <div className={classNames('tabs', 'shared-media-tabs')}>\r\n                <div className='tabs-bottom-border'/>\r\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\r\n                    {members.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('members', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 0})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 0)}>\r\n                            <span>{t('GroupMembers')}</span>\r\n                        </div>\r\n                    )}\r\n                    {photoAndVideo.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\r\n                            <span>{t('SharedMediaTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {document.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('document', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\r\n                            <span>{t('SharedFilesTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {audio.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('audio', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\r\n                            <span>{t('SharedMusicTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {url.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('url', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\r\n                            <span>{t('SharedLinksTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {voiceNote.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('voiceNote', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\r\n                            <span>{t('SharedVoiceTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    {groupsInCommon.length > 0 && (\r\n                        <div\r\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\r\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\r\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\r\n                            <span>{t('SharedGroupsTab2')}</span>\r\n                        </div>\r\n                    )}\r\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nSharedMediaTabs.propTypes = {\r\n    chatId: PropTypes.number,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SharedMediaTabs);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\r\n    'Delete'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\r\n    'Share'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\r\nimport DeleteIcon from '../../../Assets/Icons/Delete';\r\nimport ShareIcon from '../../../Assets/Icons/Share';\r\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './ContextMenu.css';\r\n\r\nclass ContextMenu extends React.Component {\r\n    handleOpenMessage = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        openChat(chatId, messageId);\r\n    };\r\n\r\n    handleForward = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        forwardMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleDelete = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        deleteMessages(chatId, [messageId]);\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\r\n\r\n        return (\r\n            <Popover\r\n                open={open}\r\n                onClose={onClose}\r\n                anchorReference='anchorPosition'\r\n                anchorPosition={anchorPosition}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right'\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left'\r\n                }}\r\n                onMouseDown={e => e.stopPropagation()}\r\n                onClick={e => e.stopPropagation()}>\r\n                <MenuList>\r\n                    {showOpenMessage && (\r\n                        <MenuItem onClick={this.handleOpenMessage}>\r\n                            <ListItemIcon>\r\n                                <ChatBubbleOutlineOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('GoToMessage')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {can_be_forwarded && (\r\n                        <MenuItem onClick={this.handleForward}>\r\n                            <ListItemIcon>\r\n                                <ShareIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Forward')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\r\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    )}\r\n                </MenuList>\r\n            </Popover>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nContextMenu.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    anchorPosition: PropTypes.object.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    showOpenMessage: PropTypes.bool\r\n};\r\n\r\nexport default withTranslation()(ContextMenu);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContextMenu from './ContextMenu';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { getSize } from '../../../Utils/Common';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './SharedPhoto.css';\r\n\r\nclass SharedPhoto extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { photo, size, thumbnailSize } = props;\r\n        const { prevPhoto } = state;\r\n        if (photo !== prevPhoto) {\r\n            return {\r\n                prevPhoto: photo,\r\n\r\n                contextMenu: false,\r\n                left: 0,\r\n                top: 0,\r\n\r\n                photoSize: getSize(photo.sizes, size),\r\n                thumbSize: getSize(photo.sizes, thumbnailSize),\r\n                minithumbnail: photo.minithumbnail\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (photo !== nextProps.photo) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    onClientUpdatePhotoBlob = update => {\r\n        const { photoSize, thumbSize } = this.state;\r\n        const { fileId } = update;\r\n\r\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\r\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\r\n\r\n        if (!photoSize) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\r\n        const src = getSrc(photoSize.photo);\r\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\r\n                        {src !== thumbSrc && (\r\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedPhoto.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    photo: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func,\r\n\r\n    size: PropTypes.number,\r\n    thumbnailSize: PropTypes.number,\r\n    style: PropTypes.object\r\n};\r\n\r\nSharedPhoto.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\r\n};\r\n\r\nexport default SharedPhoto;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ContextMenu from './ContextMenu';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport { getMedia } from '../../../Utils/Media';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedDocument.css';\r\n\r\nclass SharedDocument extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { date } = message;\r\n\r\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\r\n            day: 'numeric',\r\n            month: 'short',\r\n            year: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n            hour12: false\r\n        });\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\r\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedDocument.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    showOpenMessage: PropTypes.bool\r\n};\r\n\r\nexport default withTranslation()(SharedDocument);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { hasVideoNote } from '../../../Utils/Message';\r\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './SharedLinkTile.css';\r\n\r\nclass SharedLinkTile extends React.Component {\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\r\n    }\r\n\r\n    onClientUpdatePhotoBlob = update => {\r\n        const { thumbnail } = this.props;\r\n        if (!thumbnail) return;\r\n\r\n        const file = thumbnail.file || thumbnail.photo;\r\n        if (!file) return;\r\n\r\n        if (update.fileId === file.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\r\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\r\n        const isVideoNote = hasVideoNote(chatId, messageId);\r\n        const hasSrc = Boolean(src || miniSrc);\r\n\r\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\r\n\r\n        return (\r\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\r\n                {hasSrc? (\r\n                    <img\r\n                        className={classNames(\r\n                            'shared-link-tile-photo',\r\n                            { 'shared-link-tile-photo-round': isVideoNote },\r\n                            { 'media-blurred': src && isBlurred },\r\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\r\n                        )}\r\n                        draggable={false}\r\n                        src={src || miniSrc}\r\n                        alt=''\r\n                    />\r\n                ) : (\r\n                    <span>{title}</span>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSharedLinkTile.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    minithumbnail: PropTypes.object,\r\n    thumbnail: PropTypes.object,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default SharedLinkTile;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContextMenu from './ContextMenu';\r\nimport SafeLink from '../../Additional/SafeLink';\r\nimport SharedLinkTile from './SharedLinkTile';\r\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\r\nimport { getFormattedText, substring } from '../../../Utils/Message';\r\nimport punycode from '../../../Utils/Punycode';\r\nimport { PHOTO_SIZE } from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedLink.css';\r\n\r\nclass SharedLink extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (webPage !== nextProps.webPage) {\r\n            return true;\r\n        }\r\n\r\n        if (caption !== nextProps.caption) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    static isValidEntity(entity) {\r\n        if (!entity) return false;\r\n\r\n        const { type } = entity;\r\n        if (!type) return false;\r\n\r\n        return (\r\n            type['@type'] === 'textEntityTypeUrl' ||\r\n            type['@type'] === 'textEntityTypeTextUrl' ||\r\n            type['@type'] === 'textEntityTypeEmailAddress'\r\n        );\r\n    }\r\n\r\n    getTitleFromUrl(url) {\r\n        try {\r\n            url = url.startsWith('http') ? url : 'http://' + url;\r\n            const decodedUrl = decodeURI(url);\r\n\r\n            const hostname = new URL(decodedUrl).hostname.split('.');\r\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\r\n\r\n            return punycode.ToUnicode(domain);\r\n        } catch (error) {\r\n            console.error('url: ' + url + '\\n' + error);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        let thumbnail = null;\r\n        let minithumbnail = null;\r\n        let content = null;\r\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\r\n            title: '',\r\n            description: {\r\n                '@type': 'formattedText',\r\n                text: '',\r\n                entities: []\r\n            },\r\n            photo: null,\r\n            animation: null,\r\n            audio: null,\r\n            document: null,\r\n            sticker: null,\r\n            video: null,\r\n            video_note: null,\r\n            url: ''\r\n        };\r\n\r\n        if (animation) {\r\n            minithumbnail = animation.minithumbnail;\r\n            thumbnail = animation.thumbnail;\r\n        } else if (audio) {\r\n            minithumbnail = audio.album_cover_minithumbnail;\r\n            thumbnail = audio.album_cover_thumbnail;\r\n        } else if (document) {\r\n            minithumbnail = document.minithumbnail;\r\n            thumbnail = document.thumbnail;\r\n        } else if (sticker) {\r\n            minithumbnail = sticker.minithumbnail;\r\n            thumbnail = sticker.thumbnail;\r\n        } else if (video) {\r\n            minithumbnail = video.minithumbnail;\r\n            thumbnail = video.thumbnail;\r\n        } else if (videoNote) {\r\n            minithumbnail = videoNote.minithumbnail;\r\n            thumbnail = videoNote.thumbnail;\r\n        }\r\n\r\n        if (!thumbnail && !minithumbnail && photo) {\r\n            minithumbnail = photo.minithumbnail;\r\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\r\n        }\r\n\r\n        let { text, caption } = message.content;\r\n        text = text || caption;\r\n        if (text) {\r\n            const { entities } = text;\r\n            if (entities && entities.length > 0) {\r\n                const longTextMaxLength = 40;\r\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\r\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\r\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\r\n\r\n                const nonEmptyUrlEntities = urlEntities\r\n                    .filter(x => {\r\n                        let entityText = substring(text.text, x.offset, x.offset + x.length).trim();\r\n                        entityText = entityText.replace(/\\u200B/g,'');\r\n\r\n                        return entityText.length > 0;\r\n                    });\r\n\r\n                const links = nonEmptyUrlEntities.map((x, i) => {\r\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\r\n                        url = entityText;\r\n                        let mail = false;\r\n\r\n                        switch (x.type['@type']) {\r\n                            case 'textEntityTypeTextUrl': {\r\n                                const { url: typeUrl } = x.type;\r\n                                if (typeUrl) {\r\n                                    url = typeUrl;\r\n                                }\r\n                                break;\r\n                            }\r\n                            case 'textEntityTypeUrl': {\r\n                                break;\r\n                            }\r\n                            case 'textEntityTypeEmailAddress':\r\n                                mail = true;\r\n                                break;\r\n                        }\r\n\r\n                        title = title || this.getTitleFromUrl(url) || ' ';\r\n\r\n                        return (\r\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\r\n                                {entityText}\r\n                            </SafeLink>\r\n                        );\r\n                    });\r\n\r\n                if (showLinks) {\r\n                    let d = (nonEmptyUrlEntities.length > 0 && nonEmptyUrlEntities[0].offset > 0 ? text.text.substring(0, nonEmptyUrlEntities[0].offset) : text.text) || description.text || '';\r\n                    d = d.trim();\r\n                    content = (\r\n                        <>\r\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\r\n                            <div>{links}</div>\r\n                        </>);\r\n                } else {\r\n                    let d = description.text || '';\r\n                    d = d.trim();\r\n                    content = (\r\n                        <>\r\n                            {d && <div className='web-page-description'>{d}</div>}\r\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\r\n                        </>);\r\n                }\r\n\r\n                if (webPage) {\r\n                    title = title || this.getTitleFromUrl(url);\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\r\n                    <SharedLinkTile\r\n                        chatId={chatId}\r\n                        messageId={messageId}\r\n                        minithumbnail={minithumbnail}\r\n                        thumbnail={thumbnail}\r\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\r\n                    />\r\n                    <div className='shared-link-content'>\r\n                        {title && <div className='web-page-title'>{title}</div>}\r\n                        {content}\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedLink.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    webPage: PropTypes.object,\r\n    caption: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func,\r\n};\r\n\r\nexport default SharedLink;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AudioAction from '../../Message/Media/AudioAction';\r\nimport ContextMenu from './ContextMenu';\r\nimport MediaStatus from '../../Message/Media/MediaStatus';\r\nimport MessageAuthor from '../../Message/MessageAuthor';\r\nimport VoiceNoteTile from '../VoiceNoteTile';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './SharedVoiceNote.css';\r\n\r\nclass SharedVoiceNote extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (voiceNote !== nextProps.voiceNote) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        if (!voiceNote) return null;\r\n\r\n        const { date, sender } = message;\r\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\r\n            day: 'numeric',\r\n            month: 'short',\r\n            year: 'numeric',\r\n            hour: 'numeric',\r\n            minute: 'numeric',\r\n            hour12: false\r\n        });\r\n\r\n        const { duration, voice: file } = voiceNote;\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\r\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\r\n                    <div className='voice-note-content'>\r\n                        <div className='document-title'><MessageAuthor sender={sender} messageId={messageId} /></div>\r\n                        <div className='voice-note-meta'>\r\n                            <AudioAction\r\n                                chatId={chatId}\r\n                                messageId={messageId}\r\n                                duration={duration}\r\n                                file={file}\r\n                                date={dateString}\r\n                            />\r\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nSharedVoiceNote.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    voiceNote: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SharedVoiceNote);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ContextMenu from './ContextMenu';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { getDurationString } from '../../../Utils/Common';\r\nimport { isBlurredThumbnail } from '../../../Utils/Media';\r\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport './SharedVideo.css';\r\n\r\nclass SharedVideo extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, messageId, video, showOpenMessage } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        if (chatId !== nextProps.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (messageId !== nextProps.messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (video !== nextProps.video) {\r\n            return true;\r\n        }\r\n\r\n        if (showOpenMessage !== nextProps.showOpenMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (contextMenu !== nextState.contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        if (left !== nextState.left) {\r\n            return true;\r\n        }\r\n\r\n        if (top !== nextState.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    onClientUpdateVideoThumbnailBlob = update => {\r\n        const { thumbnail } = this.props.video;\r\n        const { fileId } = update;\r\n\r\n        if (!thumbnail) return;\r\n\r\n        const { file } = thumbnail;\r\n        if (file && file.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\r\n        const { minithumbnail, thumbnail, duration } = this.props.video;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\r\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\r\n\r\n        return (\r\n            <>\r\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='shared-video-wrapper'>\r\n                        <div\r\n                            className={classNames('shared-video-content', {\r\n                                'media-blurred': isBlurred,\r\n                                'media-mini-blurred': !thumbSrc && isBlurred\r\n                            })}\r\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\r\n                        />\r\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\r\n                    </div>\r\n                </div>\r\n                <ContextMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    showOpenMessage={showOpenMessage}\r\n                    onClose={this.handleCloseContextMenu}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedVideo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    video: PropTypes.object,\r\n    showOpenMessage: PropTypes.bool,\r\n    openMedia: PropTypes.func,\r\n\r\n    size: PropTypes.number,\r\n    thumbnailSize: PropTypes.number,\r\n    style: PropTypes.object\r\n};\r\n\r\nSharedVideo.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\r\n};\r\n\r\nexport default SharedVideo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport User from '../../Tile/User';\r\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\r\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\r\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\r\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\r\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\r\nimport { loadChatsContent, loadMessageContents, loadUsersContent } from '../../../Utils/File';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport { openChat, openUser } from '../../../Actions/Client';\r\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './SharedMediaContent.css';\r\nimport Chat from '../../Tile/Chat';\r\n\r\nconst overScanCount = 5;\r\n\r\nclass SharedMediaContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        this.state = {\r\n            scrollTop: 0\r\n        }\r\n\r\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\r\n    }\r\n\r\n    static getItemHeight(item) {\r\n        if (!item) return undefined;\r\n\r\n        switch (item['@type']) {\r\n            case 'message': {\r\n                const { content } = item;\r\n                switch (content['@type']) {\r\n                    case 'messagePhoto': {\r\n                        return undefined;\r\n                    }\r\n                    case 'messageVideo': {\r\n                        return undefined;\r\n                    }\r\n                    case 'messageDocument': {\r\n                        return 78;\r\n                    }\r\n                    case 'messageAudio': {\r\n                        return 94;\r\n                    }\r\n                    case 'messageVoiceNote': {\r\n                        return 74;\r\n                    }\r\n                    default: {\r\n                        return undefined;\r\n                    }\r\n                }\r\n            }\r\n            case 'chat': {\r\n                return 74;\r\n            }\r\n            case 'user': {\r\n                return 74;\r\n            }\r\n            default: {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    static getRowHeight(selectedIndex) {\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return 74;\r\n            }\r\n            case 1: {\r\n                return undefined;\r\n            }\r\n            case 2: {\r\n                return 78;\r\n            }\r\n            case 3: {\r\n                return 94;\r\n            }\r\n            case 4: {\r\n                return undefined;\r\n            }\r\n            case 5: {\r\n                return 74;\r\n            }\r\n            case 6: {\r\n                return 74;\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\r\n        const migratedChatId = -1;\r\n\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                const { user_id: id } = item;\r\n                return (\r\n                    <ListItem\r\n                        button\r\n                        key={`user_id=${id}`}\r\n                        className='groups-in-common-item'>\r\n                        <User userId={id} onSelect={onOpen}/>\r\n                    </ListItem>\r\n                );\r\n            }\r\n            case 1: {\r\n                const { chat_id, id, content } = item;\r\n                if (content['@type'] === 'messageVideo') {\r\n                    return (\r\n                        <SharedVideo\r\n                            key={`chat_id=${chat_id}_message_id=${id}`}\r\n                            chatId={chat_id}\r\n                            messageId={id}\r\n                            video={content.video}\r\n                            openMedia={onOpen}\r\n                            showOpenMessage={chat_id !== migratedChatId}\r\n                        />\r\n                    );\r\n                }\r\n\r\n                return (\r\n                    <SharedPhoto\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        photo={content.photo}\r\n                        openMedia={onOpen}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 2: {\r\n                const { chat_id, id } = item;\r\n                return (\r\n                    <SharedDocument\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 3: {\r\n                const { chat_id, id, content } = item;\r\n                return (\r\n                    <SharedDocument\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 4: {\r\n                const { chat_id, id, content } = item;\r\n                return (\r\n                    <SharedLink\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        webPage={content.web_page}\r\n                        caption={content.caption}\r\n                        openMedia={onOpen}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 5: {\r\n                const { chat_id, id, content } = item;\r\n                return (\r\n                    <SharedVoiceNote\r\n                        key={`chat_id=${chat_id}_message_id=${id}`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        voiceNote={content.voice_note}\r\n                        openMedia={onOpen}\r\n                        showOpenMessage={chat_id !== migratedChatId}\r\n                    />\r\n                );\r\n            }\r\n            case 6: {\r\n                const { id } = item;\r\n                return (\r\n                    <ListItem\r\n                        button\r\n                        key={`chat_id=${id}`}\r\n                        className='groups-in-common-item'>\r\n                        <Chat chatId={id} onSelect={onOpen} />\r\n                    </ListItem>\r\n                );\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    static isValidMessage(selectedIndex, message) {\r\n        if (!message) return false;\r\n\r\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\r\n    };\r\n\r\n    static isValidContent(selectedIndex, content) {\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return true;\r\n            }\r\n            case 1: {\r\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\r\n            }\r\n            case 2: {\r\n                return SharedMediaContent.isValidDocumentContent(content);\r\n            }\r\n            case 3: {\r\n                return SharedMediaContent.isValidAudioContent(content);\r\n            }\r\n            case 4: {\r\n                return SharedMediaContent.isValidUrlContent(content);\r\n            }\r\n            case 5: {\r\n                return SharedMediaContent.isValidVoiceNoteContent(content);\r\n            }\r\n            case 6: {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static isValidPhotoAndVideoContent(content) {\r\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\r\n    }\r\n\r\n    static isValidAudioContent(content) {\r\n        return content && content['@type'] === 'messageAudio';\r\n    }\r\n\r\n    static isValidDocumentContent(content) {\r\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\r\n    }\r\n\r\n    static isValidUrlContent(content) {\r\n        if (!content) return false;\r\n\r\n        const { web_page, text, caption } = content;\r\n        if (web_page) return true;\r\n        if (!text && !caption) return false;\r\n\r\n        const { entities } = text || caption;\r\n        if (!entities) return false;\r\n\r\n        return entities.find(\r\n            x =>\r\n                x.type['@type'] === 'textEntityTypeUrl' ||\r\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\r\n                x.type['@type'] === 'textEntityTypeEmailAddress'\r\n        );\r\n    }\r\n\r\n    static isValidVoiceNoteContent(content) {\r\n        return content && content['@type'] === 'messageVoiceNote';\r\n    }\r\n\r\n    static getFilter(selectedIndex) {\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return null;\r\n            }\r\n            case 1: {\r\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\r\n            }\r\n            case 2: {\r\n                return { '@type': 'searchMessagesFilterDocument' };\r\n            }\r\n            case 3: {\r\n                return { '@type': 'searchMessagesFilterAudio' };\r\n            }\r\n            case 4: {\r\n                return { '@type': 'searchMessagesFilterUrl' };\r\n            }\r\n            case 5: {\r\n                return { '@type': 'searchMessagesFilterVoiceNote' };\r\n            }\r\n            case 6: {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    static getSource(selectedIndex, media) {\r\n        if (!media) {\r\n            return [];\r\n        }\r\n\r\n        switch (selectedIndex) {\r\n            case 0: {\r\n                return (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [];\r\n            }\r\n            case 1: {\r\n                return media.photoAndVideo || [];\r\n            }\r\n            case 2: {\r\n                return media.document || [];\r\n            }\r\n            case 3: {\r\n                return media.audio || [];\r\n            }\r\n            case 4: {\r\n                return media.url || [];\r\n            }\r\n            case 5: {\r\n                return media.voiceNote || [];\r\n            }\r\n            case 6: {\r\n                return media.groupsInCommon || [];\r\n            }\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n\r\n        if (chatId !== state.prevChatId) {\r\n            const media = MessageStore.getMedia(props.chatId);\r\n\r\n            const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\r\n            const photoAndVideo = media ? media.photoAndVideo : [];\r\n            const document = media ? media.document : [];\r\n            const audio = media ? media.audio : [];\r\n            const url = media ? media.url : [];\r\n            const voiceNote = media ? media.voiceNote : [];\r\n            const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n            let selectedIndex = -1;\r\n            if (members.length > 0) {\r\n                selectedIndex = 0;\r\n            } else if (photoAndVideo.length > 0) {\r\n                selectedIndex = 1;\r\n            } else if (document.length > 0) {\r\n                selectedIndex = 2;\r\n            } else if (audio.length > 0) {\r\n                selectedIndex = 3;\r\n            } else if (url.length > 0) {\r\n                selectedIndex = 4;\r\n            } else if (voiceNote.length > 0) {\r\n                selectedIndex = 5;\r\n            } else if (groupsInCommon.length > 0) {\r\n                selectedIndex = 6;\r\n            }\r\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\r\n\r\n            return {\r\n                prevChatId: props.chatId,\r\n                selectedIndex,\r\n                renderIds: new Map(),\r\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\r\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\r\n                members,\r\n                photoAndVideo,\r\n                document,\r\n                audio,\r\n                url,\r\n                voiceNote,\r\n                groupsInCommon,\r\n                isSmallWidth: false,\r\n                params: {\r\n                    loading: false,\r\n                    completed: false,\r\n                    migrateCompleted: false,\r\n                    filter: SharedMediaContent.getFilter(selectedIndex)\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.onWindowResize);\r\n\r\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.onWindowResize);\r\n\r\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\r\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        const { items, selectedIndex } = this.state;\r\n        if (!items.some(x => x.id === message_id)) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onWindowResize = event => {\r\n        const { items, scrollTop } = this.state;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const offsetTop = list.offsetTop;\r\n        const viewportHeight = list.offsetParent.offsetHeight;\r\n\r\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\r\n\r\n        this.setState({ ...renderIds });\r\n    };\r\n\r\n    onUpdateMessageSend = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    setMediaState = (media, selectedIndex) => {\r\n        const { scrollTop } = this.state;\r\n\r\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\r\n        const photoAndVideo = media ? media.photoAndVideo : [];\r\n        const document = media ? media.document : [];\r\n        const audio = media ? media.audio : [];\r\n        const url = media ? media.url : [];\r\n        const voiceNote = media ? media.voiceNote : [];\r\n        const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n        const hasMembers = members.length > 0;\r\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\r\n        const hasDocument = document.length > 0;\r\n        const hasAudio = audio.length > 0;\r\n        const hasUrl = url.length > 0;\r\n        const hasVoiceNote = voiceNote.length > 0;\r\n        const hasGroupsInCommon = groupsInCommon.length > 0;\r\n\r\n        const replaceSelectedIndex =\r\n            selectedIndex === -1\r\n            || selectedIndex === 0 && !hasMembers\r\n            || selectedIndex === 1 && !hasPhotoAndVideo\r\n            || selectedIndex === 2 && !hasDocument\r\n            || selectedIndex === 3 && !hasAudio\r\n            || selectedIndex === 4 && !hasUrl\r\n            || selectedIndex === 5 && !hasVoiceNote\r\n            || selectedIndex === 6 && !hasGroupsInCommon;\r\n        if (replaceSelectedIndex) {\r\n            if (hasMembers) {\r\n                selectedIndex = 0;\r\n            } else if (hasPhotoAndVideo) {\r\n                selectedIndex = 1;\r\n            } else if (hasDocument) {\r\n                selectedIndex = 2;\r\n            } else if (hasAudio) {\r\n                selectedIndex = 3;\r\n            } else if (hasUrl) {\r\n                selectedIndex = 4;\r\n            } else if (hasVoiceNote) {\r\n                selectedIndex = 5;\r\n            } else if (hasGroupsInCommon) {\r\n                selectedIndex = 6;\r\n            }\r\n        }\r\n\r\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\r\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const offsetTop = list.offsetTop;\r\n        const viewportHeight = list.offsetParent.offsetHeight;\r\n\r\n        this.setState({\r\n            selectedIndex,\r\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\r\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\r\n            items,\r\n            params: {\r\n                loading: false,\r\n                completed: false,\r\n                migrateCompleted: false,\r\n                filter: SharedMediaContent.getFilter(selectedIndex)\r\n            },\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\r\n            const { items } = this.state;\r\n\r\n            const store = FileStore.getStore();\r\n            switch (this.state.selectedIndex) {\r\n                case 0: {\r\n                    loadUsersContent(store, items.map(x => x.user_id));\r\n                    break;\r\n                }\r\n                case 1:\r\n                case 2:\r\n                case 3:\r\n                case 4:\r\n                case 5: {\r\n                    loadMessageContents(store, items);\r\n                    break;\r\n                }\r\n                case 6: {\r\n                    loadChatsContent(store, items);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // this.unobserveResize();\r\n        // this.observeResize();\r\n    }\r\n\r\n    onClientUpdateMediaTab = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { chatId, index: selectedIndex } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        const media = MessageStore.getMedia(currentChatId);\r\n\r\n        const members = media ? (media.supergroupMembers && media.supergroupMembers.members) || media.fullInfo.members || [] : [];\r\n        const photoAndVideo = media ? media.photoAndVideo : [];\r\n        const document = media ? media.document : [];\r\n        const audio = media ? media.audio : [];\r\n        const url = media ? media.url : [];\r\n        const voiceNote = media ? media.voiceNote : [];\r\n        const groupsInCommon = media ? media.groupsInCommon : [];\r\n\r\n        let source = [];\r\n        if (selectedIndex === 0) {\r\n            source = members;\r\n        } else if (selectedIndex === 1) {\r\n            source = photoAndVideo;\r\n        } else if (selectedIndex === 2) {\r\n            source = document;\r\n        } else if (selectedIndex === 3) {\r\n            source = audio;\r\n        } else if (selectedIndex === 4) {\r\n            source = url;\r\n        } else if (selectedIndex === 5) {\r\n            source = voiceNote;\r\n        } else if (selectedIndex === 6) {\r\n            source = groupsInCommon;\r\n        }\r\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\r\n\r\n        this.setState({\r\n            selectedIndex,\r\n            renderIds: new Map(),\r\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\r\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon,\r\n            params: {\r\n                loading: false,\r\n                completed: false,\r\n                migrateCompleted: false,\r\n                filter: SharedMediaContent.getFilter(selectedIndex)\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatMedia = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { selectedIndex } = this.state;\r\n\r\n        const { chatId } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        this.setMediaState(media, selectedIndex);\r\n    };\r\n\r\n    handleScroll = (event, container) => {\r\n        const { params } = this.state;\r\n\r\n        if (params && !params.completed) {\r\n            this.onLoadNext(params);\r\n        } else {\r\n            // this.onLoadMigratedNext(params);\r\n        }\r\n    };\r\n\r\n    handleVirtScroll = (event, container) => {\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        this.setScrollPosition(container.scrollTop);\r\n    };\r\n\r\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\r\n        const { rowHeight } = this.state;\r\n\r\n        const itemTop = index * rowHeight;\r\n        const itemBottom = (index + 1) * rowHeight;\r\n\r\n        return (\r\n            itemTop > scrollTop - overScanCount * rowHeight &&\r\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\r\n        );\r\n    };\r\n\r\n    getRenderIds(source, viewportHeight, scrollTop) {\r\n        const renderIds = new Map();\r\n        const renderIdsList = [];\r\n        source.forEach((item, index) => {\r\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\r\n                renderIds.set(index, index);\r\n                renderIdsList.push(index);\r\n            }\r\n        });\r\n\r\n        return { renderIds, renderIdsList };\r\n    }\r\n\r\n    setScrollPosition = scrollTop => {\r\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const offsetTop = list.offsetTop;\r\n        const viewportHeight = list.offsetParent.offsetHeight;\r\n\r\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\r\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\r\n\r\n            this.setState({\r\n                scrollTop,\r\n                ...renderIds\r\n            });\r\n        }\r\n    };\r\n\r\n    onLoadNext = async (params, loadIncomplete = true) => {\r\n        const { chatId } = this.props;\r\n        const { items, selectedIndex } = this.state;\r\n        const { completed, filter, loading, messages: lastMessages } = params;\r\n\r\n        if (selectedIndex === 0) return;\r\n        if (selectedIndex === 6) return;\r\n        if (!filter) return;\r\n        if (loading) return;\r\n        if (completed) return;\r\n\r\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        if (lastMessages) {\r\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\r\n        }\r\n        params.loading = true;\r\n        params.requestId = new Date();\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\r\n            filter\r\n        });\r\n\r\n        const { params: currentParams } = this.state;\r\n        if (!currentParams || currentParams.requestId !== params.requestId) {\r\n            return;\r\n        }\r\n\r\n        const { messages } = result;\r\n        params.messages = messages;\r\n        params.completed = messages.length === 0 || messages.total_count === 0;\r\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        MessageStore.setItems(result.messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n\r\n        this.setState({ items: params.items });\r\n\r\n        if (params.completed) {\r\n            this.onLoadMigratedNext(params, true);\r\n        } else if (incompleteResults) {\r\n            this.onLoadNext(params, false);\r\n        }\r\n    };\r\n\r\n    onLoadMigratedNext(params, loadIncomplete) {\r\n\r\n    }\r\n\r\n    handleOpen = item => {\r\n        const { popup } = this.props;\r\n\r\n        switch (item['@type']) {\r\n            case 'message': {\r\n                const { chat_id, id } = item;\r\n\r\n                openMedia(chat_id, id, false);\r\n                break;\r\n            }\r\n            case 'chat': {\r\n                const { id } = item;\r\n                openChat(id);\r\n\r\n                if (popup) {\r\n                    TdLibController.clientUpdate({\r\n                        '@type': 'clientUpdateDialogChatId',\r\n                        chatId: 0\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            case 'chatMember': {\r\n                const { user_id } = item;\r\n                openUser(user_id, true);\r\n\r\n                if (popup) {\r\n                    TdLibController.clientUpdate({\r\n                        '@type': 'clientUpdateDialogChatId',\r\n                        chatId: 0\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            selectedIndex,\r\n            items = [],\r\n            renderIds,\r\n            members,\r\n            photoAndVideo,\r\n            document,\r\n            audio,\r\n            url,\r\n            voiceNote,\r\n            groupsInCommon\r\n        } = this.state;\r\n\r\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\r\n\r\n        const hasItems = members && members.length > 0\r\n            || photoAndVideo && photoAndVideo.length > 0\r\n            || document && document.length > 0\r\n            || audio && audio.length > 0\r\n            || url && url.length > 0\r\n            || voiceNote && voiceNote.length > 0\r\n            || groupsInCommon && groupsInCommon.length > 0;\r\n        if (!hasItems) {\r\n            return (<div ref={this.listRef}/>);\r\n        }\r\n\r\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\r\n            let contentHeight = 0;\r\n            const controls = items.map((x, index) => {\r\n                const { chat_id, id } = x;\r\n                const itemHeight = SharedMediaContent.getItemHeight(x);\r\n                if (!itemHeight) {\r\n                    return null;\r\n                }\r\n                contentHeight += itemHeight;\r\n\r\n                return ((!renderIds.size || renderIds.has(index)) && (\r\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\r\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\r\n                    </div>\r\n                ));\r\n            });\r\n\r\n            return (\r\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\r\n                    {controls}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\r\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSharedMediaContent.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default SharedMediaContent;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport HeadsetIcon from '@material-ui/icons/Headset';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\r\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport User from '../Tile/User';\r\nimport Chat from '../Tile/Chat';\r\nimport ChatDetailsHeader from './ChatDetailsHeader';\r\nimport NotificationsListItem from './NotificationsListItem';\r\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\r\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\r\nimport { copy } from '../../Utils/Text';\r\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\r\nimport {\r\n    getChatUsername,\r\n    getChatPhoneNumber,\r\n    getChatBio,\r\n    isGroupChat,\r\n    getGroupChatMembers,\r\n    getChatFullInfo,\r\n    isPrivateChat,\r\n    isMeChat, isChannelChat\r\n} from '../../Utils/Chat';\r\nimport { getUserStatusOrder } from '../../Utils/User';\r\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\r\nimport { formatPhoneNumber } from '../../Utils/Phone';\r\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MoreListItem.css';\r\nimport './ChatDetails.css';\r\n\r\nclass ChatDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n        this.dividerRef = React.createRef();\r\n        this.mediaRef = React.createRef();\r\n\r\n        const { chatId } = this.props;\r\n\r\n        this.members = new Map();\r\n        this.state = {\r\n            prevChatId: chatId\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId) {\r\n            return {\r\n                prevChatId: props.chatId\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { chatId } = this.props;\r\n\r\n        const { current: list } = this.listRef;\r\n        const { scrollTop, scrollHeight, offsetHeight } = list;\r\n        const snapshot = {\r\n            scrollTop,\r\n            scrollHeight,\r\n            offsetHeight\r\n        };\r\n\r\n        // console.log(\r\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\r\n        // );\r\n\r\n        return snapshot;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, theme, counters, migratedCounters } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.counters !== counters) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.migratedCounters !== migratedCounters) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId } = this.props;\r\n        if (prevProps.chatId !== chatId) {\r\n            this.loadContent();\r\n        }\r\n\r\n        const { current: list } = this.listRef;\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\r\n        if (prevProps.chatId === chatId) {\r\n            list.scrollTop = scrollTop;\r\n        } else {\r\n            list.scrollTop = 0;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n    }\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\r\n            chat.type.basic_group_id === update.basic_group_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            chat.type['@type'] === 'chatTypeSupergroup' &&\r\n            chat.type.supergroup_id === update.supergroup_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        if (!chat) return;\r\n\r\n        if (\r\n            chat.type &&\r\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\r\n            chat.type.user_id === update.user_id\r\n        ) {\r\n            this.forceUpdate(); // update bio\r\n        }\r\n    };\r\n\r\n    onUpdateUserStatus = update => {\r\n        if (this.members.has(update.user_id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    loadContent = () => {\r\n        this.loadChatContents();\r\n    };\r\n\r\n    loadChatContents = () => {\r\n        const { chatId, popup } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadChatsContent(store, [chatId]);\r\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\r\n        loadUsersContent(store, members);\r\n\r\n        if (popup) {\r\n            getChatFullInfo(chatId);\r\n        }\r\n    };\r\n\r\n    handleUsernameHint = () => {\r\n        const { t, chatId } = this.props;\r\n        const username = getChatUsername(chatId);\r\n        if (!username) return;\r\n\r\n        const telegramUrlOption = OptionStore.get('t_me_url');\r\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\r\n\r\n        copy(usernameLink + username);\r\n\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => {\r\n                        closeSnackbar(snackKey);\r\n                    }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handlePhoneHint = () => {\r\n        const { t, chatId } = this.props;\r\n        const phoneNumber = getChatPhoneNumber(chatId);\r\n        if (!phoneNumber) return;\r\n\r\n        copy(formatPhoneNumber(phoneNumber));\r\n\r\n        this.handleScheduledAction(t('PhoneCopied'));\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        this.listRef.current.scrollTop = 0;\r\n    };\r\n\r\n    handleOpenViewer = () => {\r\n        const { chatId, popup } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.photo) return;\r\n\r\n        setProfileMediaViewerContent({ chatId });\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    handleOpenChat = () => {\r\n        const { chatId, popup } = this.props;\r\n\r\n        openChat(chatId, null, false);\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    handleOpenUser = userId => {\r\n        openUser(userId, true);\r\n    };\r\n\r\n    getContentHeight = () => {\r\n        if (!this.listRef) return 0;\r\n\r\n        return this.listRef.current.clientHeight;\r\n    };\r\n\r\n    handleTabClick = event => {\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const { current: divider } = this.dividerRef;\r\n        if (!divider) return;\r\n        if (divider.offsetTop === list.scrollTop) return;\r\n\r\n        if (list.scrollTop < divider.offsetTop) {\r\n            list.scrollTo({\r\n                top: divider.offsetTop,\r\n                behavior: 'smooth'\r\n            });\r\n        } else {\r\n            list.scrollTop = divider.offsetTop + 70;\r\n            setTimeout(() => {\r\n                list.scrollTo({\r\n                    top: divider.offsetTop,\r\n                    behavior: 'smooth'\r\n                });\r\n            }, 0);\r\n        }\r\n        // requestAnimationFrame(() => {\r\n        //     list.scrollTo({\r\n        //         top: divider.offsetTop,\r\n        //         behavior: 'smooth'\r\n        //     });\r\n        // });\r\n    };\r\n\r\n    handleScroll = event => {\r\n        if (!this.listRef) return;\r\n        if (!this.mediaRef) return;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (!list) return;\r\n\r\n        const { current: media } = this.mediaRef;\r\n        if (!media) return;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            media.handleScroll(event);\r\n        }\r\n\r\n        media.handleVirtScroll(event, list);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            backButton,\r\n            className,\r\n            chatId,\r\n            onClose,\r\n            popup,\r\n            t\r\n        } = this.props;\r\n\r\n        let { counters, migratedCounters } = this.props;\r\n        counters = counters || [0, 0, 0, 0, 0, 0];\r\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\r\n\r\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\r\n            (el, i) => el + migratedCounters[i]\r\n        );\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) {\r\n            return (\r\n                <div className='chat-details'>\r\n                    <ChatDetailsHeader onClose={onClose} />\r\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let groupInCommonCount = 0;\r\n        if (isPrivateChat(chatId)) {\r\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\r\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\r\n        }\r\n\r\n        const username = getChatUsername(chatId);\r\n        const phoneNumber = getChatPhoneNumber(chatId);\r\n        let bio = getChatBio(chatId);\r\n        const isGroup = isGroupChat(chatId);\r\n        const isMe = isMeChat(chatId);\r\n\r\n        const members = getGroupChatMembers(chatId);\r\n        const users = [];\r\n        this.members = new Map();\r\n        members.forEach(member => {\r\n            const user = UserStore.get(member.user_id);\r\n            if (user) {\r\n                this.members.set(user.id, user.id);\r\n                users.push(user);\r\n            }\r\n        });\r\n\r\n        const sortedUsers = users.sort((x, y) => {\r\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\r\n        });\r\n        const items = sortedUsers.map(user => (\r\n            <ListItem button className='list-item' key={user.id}>\r\n                <User userId={user.id} onSelect={this.handleOpenUser} />\r\n            </ListItem>\r\n        ));\r\n\r\n        const { photo } = chat;\r\n\r\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\r\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\r\n            if (bioEntities.length > 0) {\r\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\r\n            }\r\n        }\r\n\r\n        let openChatTitle = t('SendMessage');\r\n        if (isChannelChat(chatId)) {\r\n            openChatTitle = t('OpenChannel');\r\n        } else if (isGroupChat(chatId)) {\r\n            openChatTitle = t('OpenGroup');\r\n        }\r\n\r\n        let chatUrl = ''\r\n        if (username) {\r\n            if (isPrivateChat(chatId)) {\r\n                chatUrl = username;\r\n            } else {\r\n                const tMeUrl = OptionStore.get('t_me_url')\r\n                    .value\r\n                    .toLowerCase()\r\n                    .replace('https://', '')\r\n                    .replace('http://', '');\r\n\r\n                chatUrl = tMeUrl + username;\r\n            }\r\n        }\r\n\r\n        const content = (\r\n            <>\r\n                <ChatDetailsHeader\r\n                    chatId={chatId}\r\n                    backButton={backButton}\r\n                    onClose={onClose}\r\n                    onClick={this.handleHeaderClick}\r\n                />\r\n                <div\r\n                    ref={this.listRef}\r\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\r\n                    onScroll={this.handleScroll}>\r\n                    <div className='chat-details-info'>\r\n                        <Chat\r\n                            chatId={chatId}\r\n                            big={true}\r\n                            showStatus={true}\r\n                            showSavedMessages={!popup}\r\n                            onTileSelect={photo ? this.handleOpenViewer : null}\r\n                        />\r\n                        {!isMe && (\r\n                            <List className='chat-details-items'>\r\n                                {bio && (\r\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\r\n                                        <ListItemIcon>\r\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={bio}\r\n                                            secondary={isPrivateChat(chatId) ? t('Bio') : t('DescriptionPlaceholder')}\r\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {username && (\r\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\r\n                                        <ListItemIcon>\r\n                                            <AlternateEmailIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography variant='inherit' noWrap>\r\n                                                    {chatUrl}\r\n                                                </Typography>\r\n                                            }\r\n                                            secondary={isPrivateChat(chatId) ? t('Username') : t('InviteLink')}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                                {phoneNumber && (\r\n                                    <>\r\n                                        <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\r\n                                            <ListItemIcon>\r\n                                                <CallIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText\r\n                                                primary={\r\n                                                    <Typography variant='inherit' noWrap>\r\n                                                        {formatPhoneNumber(phoneNumber)}\r\n                                                    </Typography>\r\n                                                }\r\n                                                secondary={t('Phone')}\r\n                                            />\r\n                                        </ListItem>\r\n                                    </>\r\n                                )}\r\n                                <NotificationsListItem chatId={chatId} />\r\n                                {popup && (\r\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\r\n                                        <ListItemText\r\n                                            primary={\r\n                                                <Typography color='primary' variant='inherit' noWrap>\r\n                                                    {openChatTitle.toUpperCase()}\r\n                                                </Typography>\r\n                                            }\r\n                                            style={{ paddingLeft: 40 }}\r\n                                        />\r\n                                    </ListItem>\r\n                                )}\r\n                            </List>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div ref={this.dividerRef}/>\r\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\r\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\r\n    }\r\n}\r\n\r\nChatDetails.propTypes = {\r\n    chatId: PropTypes.number,\r\n    popup: PropTypes.bool,\r\n    onClose: PropTypes.func,\r\n    onOpenGroupInCommon: PropTypes.func,\r\n    onOpenSharedDocuments: PropTypes.func,\r\n    onOpenSharedMedia: PropTypes.func,\r\n    onOpenSharedLinks: PropTypes.func,\r\n    onOpenSharedPhotos: PropTypes.func,\r\n    onOpenSharedVideos: PropTypes.func,\r\n    onOpenSharedVoiceNotes: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withSnackbar,\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ChatDetails);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport './GroupsInCommonHeader.css';\r\n\r\nclass GroupsInCommonHeader extends React.Component {\r\n    render() {\r\n        const { onClose } = this.props;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <IconButton className='header-left-button' onClick={onClose}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-status grow cursor-pointer'>\r\n                    <span className='header-status-content'>Groups in common</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGroupsInCommonHeader.propTypes = {\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default GroupsInCommonHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Chat from '../Tile/Chat';\r\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { openChat } from '../../Actions/Client';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './GroupsInCommon.css';\r\n\r\nclass GroupsInCommon extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatIds: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId } = this.props;\r\n\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'getGroupsInCommon',\r\n            user_id: userId,\r\n            offset_chat_id: 0,\r\n            limit: 100\r\n        }).then(result => {\r\n            const store = FileStore.getStore();\r\n            loadChatsContent(store, result.chat_ids);\r\n\r\n            this.setState({ chatIds: result.chat_ids });\r\n        });\r\n    }\r\n\r\n    handleSelect = chatId => {\r\n        const { popup } = this.props;\r\n\r\n        openChat(chatId);\r\n\r\n        if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { minHeight, onClose, popup } = this.props;\r\n        const { chatIds } = this.state;\r\n\r\n        const chats = chatIds.map(x => (\r\n            <ListItem button key={x}>\r\n                <Chat chatId={x} onSelect={this.handleSelect} />\r\n            </ListItem>\r\n        ));\r\n\r\n        const content = (\r\n            <>\r\n                <GroupsInCommonHeader onClose={onClose} />\r\n                <div className='groups-in-common-list' style={{ minHeight }}>\r\n                    {chats}\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\r\n    }\r\n}\r\n\r\nGroupsInCommon.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nGroupsInCommon.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default GroupsInCommon;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\r\n    'Search'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport SearchIcon from '../../../Assets/Icons/Search';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\r\nimport './SharedMediaHeader.css';\r\n\r\nclass SharedMediaHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n\r\n        this.state = {\r\n            openSearch: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { openSearch } = this.state;\r\n\r\n        if (openSearch && openSearch !== prevProps.openSearch) {\r\n            setTimeout(() => {\r\n                if (this.searchInputRef.current) {\r\n                    this.searchInputRef.current.focus();\r\n                }\r\n            }, ANIMATION_DURATION_200MS);\r\n        }\r\n    }\r\n\r\n    handleSearch = () => {\r\n        if (this.searchInputRef.current) {\r\n            const innerText = this.searchInputRef.current.innerText;\r\n            if (innerText) {\r\n                this.searchInputRef.current.innerText = '';\r\n\r\n                const { onSearch } = this.props;\r\n                if (!onSearch) return;\r\n\r\n                onSearch('');\r\n                return;\r\n            }\r\n        }\r\n\r\n        const { onCloseSearch } = this.props;\r\n        const { openSearch } = this.state;\r\n\r\n        this.setState({ openSearch: !openSearch });\r\n\r\n        if (onCloseSearch) {\r\n            onCloseSearch();\r\n        }\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        }\r\n    };\r\n\r\n    handleKeyUp = () => {\r\n        const element = this.searchInputRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        const { onSearch } = this.props;\r\n        if (!onSearch) return;\r\n\r\n        onSearch(innerText);\r\n    };\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t, title, onClick, onClose, onSearch } = this.props;\r\n        const { openSearch } = this.state;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                {!openSearch ? (\r\n                    <>\r\n                        <IconButton className='header-left-button' onClick={onClose}>\r\n                            <ArrowBackIcon />\r\n                        </IconButton>\r\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\r\n                            <span className='header-status-content'>{title}</span>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <div className='header-search-input grow'>\r\n                            <div\r\n                                id='header-search-inputbox'\r\n                                ref={this.searchInputRef}\r\n                                placeholder={t('Search')}\r\n                                contentEditable\r\n                                suppressContentEditableWarning\r\n                                onKeyDown={this.handleKeyDown}\r\n                                onKeyUp={this.handleKeyUp}\r\n                                onPaste={this.handlePaste}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n                {Boolean(onSearch) && (\r\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\r\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\r\n                    </IconButton>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSharedMediaHeader.propTypes = {\r\n    title: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n    onClose: PropTypes.func,\r\n    onCloseSearch: PropTypes.func,\r\n    onSearch: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(SharedMediaHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\r\nimport SharedMediaHeader from './SharedMediaHeader';\r\nimport { between, insertByOrder } from '../../../Utils/Common';\r\nimport { loadMessageContents } from '../../../Utils/File';\r\nimport { messageComparatorDesc } from '../../../Utils/Message';\r\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './SharedMediaBase.css';\r\n\r\nclass SharedMediaBase extends React.Component {\r\n    getListClassName() {\r\n        return null;\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return null;\r\n    }\r\n\r\n    constructor(props) {\r\n        if (new.target === SharedMediaBase) {\r\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\r\n        }\r\n\r\n        // console.log('SharedMediaBase.ctor');\r\n\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n\r\n        this.state = {\r\n            items: [],\r\n            migratedItems: [],\r\n            searchItems: [],\r\n            searchMigratedItems: []\r\n        };\r\n    }\r\n\r\n    hasSearch() {\r\n        return true;\r\n    }\r\n\r\n    isValidContent(content) {\r\n        throw new Error('Virtual method isValidContent is not implemented');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, id } = message;\r\n\r\n        return (\r\n            <SharedDocument\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n\r\n    getSearchFilter() {\r\n        throw new Error('Virtual method getSearchFilter is not implemented');\r\n    }\r\n\r\n    getHeader() {\r\n        throw new Error('Virtual method getHeader is not implemented');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { chat_id, message_id, old_content, new_content } = update;\r\n\r\n        const message = MessageStore.get(chat_id, message_id);\r\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\r\n\r\n        if (chat_id === chatId) {\r\n            if (!items.length) return;\r\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\r\n\r\n            const index = items.findIndex(x => x.id === message_id);\r\n            if (this.isValidContent(new_content)) {\r\n                if (index === -1) {\r\n                    // add new document\r\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\r\n                } else {\r\n                    // replace document\r\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\r\n                }\r\n            } else {\r\n                if (index === -1) {\r\n                } else {\r\n                    // remove none document\r\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\r\n                }\r\n            }\r\n        } else if (chat_id === migratedChatId) {\r\n            if (!migratedItems.length) return;\r\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\r\n\r\n            const index = migratedItems.findIndex(x => x.id === message_id);\r\n            if (this.isValidContent(new_content)) {\r\n                if (index === -1) {\r\n                    // add new document\r\n                    this.setState({\r\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\r\n                    });\r\n                } else {\r\n                    // replace document\r\n                    this.setState({\r\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\r\n                    });\r\n                }\r\n            } else {\r\n                if (index === -1) {\r\n                } else {\r\n                    // remove none document\r\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { message } = update;\r\n        const { chat_id } = message;\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (!this.isValidMessage(message)) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, [message]);\r\n\r\n        if (chat_id === chatId) {\r\n            this.setState({ items: [message].concat(items) });\r\n        } else if (chat_id === migratedChatId) {\r\n            this.setState({ migratedItems: [message].concat(migratedItems) });\r\n        }\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId, migratedChatId } = this.props;\r\n        const { items, migratedItems } = this.state;\r\n\r\n        const { chat_id, message_ids } = update;\r\n\r\n        const map = new Map(message_ids.map(x => [x, x]));\r\n        const callback = () => {\r\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\r\n                this.onLoadNext(this.params);\r\n            }\r\n        };\r\n\r\n        if (chat_id === chatId) {\r\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\r\n        } else if (chat_id === migratedChatId) {\r\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\r\n        }\r\n    };\r\n\r\n    loadContent = () => {\r\n        this.params = {\r\n            loading: false,\r\n            completed: false,\r\n            migrateCompleted: false,\r\n            items: [],\r\n            migratedItems: [],\r\n            filter: this.getSearchFilter()\r\n        };\r\n        this.onLoadNext(this.params);\r\n    };\r\n\r\n    onLoadNext = async (params, loadIncomplete = true) => {\r\n        const { chatId } = this.props;\r\n        const { completed, filter, items, loading } = params;\r\n\r\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\r\n\r\n        if (loading) return;\r\n        if (completed) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\r\n            filter\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.completed = messages.length === 0 || messages.total_count === 0;\r\n        params.items = items.concat(messages.filter(this.isValidMessage));\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        MessageStore.setItems(result.messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n\r\n        this.setState({ items: params.items });\r\n\r\n        if (params.completed) {\r\n            this.onLoadMigratedNext(params, true);\r\n        } else if (incompleteResults) {\r\n            this.onLoadNext(params, false);\r\n        }\r\n    };\r\n\r\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\r\n        const { migratedChatId } = this.props;\r\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\r\n\r\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\r\n\r\n        if (!migratedChatId) return;\r\n        if (loading) return;\r\n        if (migrateCompleted) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: migratedChatId,\r\n            query: '',\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\r\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (params.migrateCompleted) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ migratedItems: params.migratedItems });\r\n\r\n        if (incompleteResults) {\r\n            this.onLoadMigratedNext(params, false);\r\n        }\r\n    };\r\n\r\n    handleScroll = () => {\r\n        if (!this.listRef) return;\r\n\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        const { params } = this;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (params && !params.completed) {\r\n                this.onLoadNext(params);\r\n            } else {\r\n                this.onLoadMigratedNext(params);\r\n            }\r\n        }\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        list.scrollTop = 0;\r\n    };\r\n\r\n    handleSearchScroll = () => {\r\n        if (!this.searchListRef) return;\r\n\r\n        const list = this.searchListRef.current;\r\n        if (!list) return;\r\n\r\n        const { searchParams } = this;\r\n        if (!searchParams) return;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (!searchParams.completed) {\r\n                this.onSearchNext(searchParams);\r\n            } else {\r\n                this.onSearchMigratedNext(searchParams);\r\n            }\r\n        }\r\n    };\r\n\r\n    onSearchNext = async (params, loadIncomplete = true) => {\r\n        const { chatId } = this.props;\r\n        const { completed, filter, items, loading, query } = params;\r\n\r\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\r\n\r\n        if (completed) return;\r\n        if (loading) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: chatId,\r\n            query,\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.items = items.concat(messages.filter(this.isValidMessage));\r\n        params.completed = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (this.searchParams !== params) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\r\n\r\n        if (params.completed) {\r\n            this.onSearchMigratedNext(params, true);\r\n        } else if (incompleteResults) {\r\n            this.onSearchNext(params, false);\r\n        }\r\n    };\r\n\r\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\r\n        const { migratedChatId } = this.props;\r\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\r\n\r\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\r\n\r\n        if (!migratedChatId) return;\r\n        if (loading) return;\r\n        if (migrateCompleted) return;\r\n\r\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: migratedChatId,\r\n            query,\r\n            sender_user_id: 0,\r\n            from_message_id: fromMessageId,\r\n            offset: 0,\r\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\r\n            filter\r\n        }).finally(() => {\r\n            params.loading = false;\r\n        });\r\n\r\n        const { messages } = result;\r\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\r\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\r\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\r\n\r\n        if (this.searchParams !== params) return;\r\n\r\n        MessageStore.setItems(messages);\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, messages);\r\n\r\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\r\n\r\n        if (incompleteResults) {\r\n            this.onSearchMigratedNext(params, false);\r\n        }\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text ? text.trim() : '';\r\n        if (!query) {\r\n            this.handleCloseSearch();\r\n            return;\r\n        }\r\n\r\n        this.searchParams = {\r\n            query,\r\n            completed: false,\r\n            migrateCompleted: false,\r\n            items: [],\r\n            migratedItems: [],\r\n            filter: this.getSearchFilter()\r\n        };\r\n        this.onSearchNext(this.searchParams, true);\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.searchParams = null;\r\n        this.setState({ searchItems: [], searchMigratedItems: [] });\r\n    };\r\n\r\n    isValidMessage = message => {\r\n        if (!message) return false;\r\n\r\n        return this.isValidContent(message.content);\r\n    };\r\n\r\n    render() {\r\n        const { minHeight, onClose, popup } = this.props;\r\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\r\n        const { searchParams } = this;\r\n\r\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\r\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\r\n\r\n        return (\r\n            <>\r\n                <SharedMediaHeader\r\n                    title={this.getHeader()}\r\n                    onClick={this.handleHeaderClick}\r\n                    onClose={onClose}\r\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\r\n                    onCloseSearch={this.handleCloseSearch}\r\n                />\r\n                <div\r\n                    ref={this.listRef}\r\n                    className={classNames('shared-media-list', this.getListClassName())}\r\n                    onScroll={this.handleScroll}\r\n                    style={{ minHeight: popup ? minHeight : null }}>\r\n                    {messages}\r\n                </div>\r\n                {Boolean(searchParams) && (\r\n                    <div\r\n                        ref={this.searchListRef}\r\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\r\n                        onScroll={this.handleSearchScroll}>\r\n                        {searchMessages}\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSharedMediaBase.propTypes = {};\r\n\r\nexport default SharedMediaBase;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport './SharedAudios.css';\r\n\r\nclass SharedAudios extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageAudio';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterAudio' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('AudioTitle');\r\n    }\r\n}\r\n\r\nSharedAudios.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedAudios.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedAudios);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport './SharedDocuments.css';\r\n\r\nclass SharedDocuments extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageDocument';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterDocument' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('DocumentsTitle');\r\n    }\r\n}\r\n\r\nSharedDocuments.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedDocuments.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedDocuments);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedLinks.css';\r\n\r\nclass SharedLinks extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        if (!content) return false;\r\n\r\n        const { web_page, text } = content;\r\n        if (web_page) return true;\r\n        if (!text) return false;\r\n\r\n        const { entities } = text;\r\n        if (!entities) return false;\r\n\r\n        return entities.find(\r\n            x =>\r\n                x.type['@type'] === 'textEntityTypeUrl' ||\r\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\r\n                x.type['@type'] === 'textEntityTypeEmailAddress'\r\n        );\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterUrl' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('LinksTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedLink\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                webPage={content.web_page}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedLinks.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedLinks.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedLinks);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport './SharedMediaHeader.css';\r\n\r\nclass SharedMediaHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { close } = this.props;\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <IconButton className='header-left-button' onClick={close}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-status grow cursor-pointer'>\r\n                    <span className='header-status-content'>Shared Media</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SharedMediaHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport SharedMediaHeader from './SharedMediaHeader';\r\nimport './SharedMedia.css';\r\n\r\nclass SharedMedia extends React.Component {\r\n    state = {\r\n        value: 0\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, popup } = this.props;\r\n        const { value } = this.state;\r\n\r\n        const content = (\r\n            <>\r\n                <SharedMediaHeader close={onClose} />\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={this.handleChange}\r\n                    indicatorColor='primary'\r\n                    textColor='primary'\r\n                    scrollable\r\n                    scrollButtons='off'\r\n                    fullWidth>\r\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\r\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\r\n                </Tabs>\r\n            </>\r\n        );\r\n\r\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\r\n    }\r\n}\r\n\r\nSharedMedia.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedMedia.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default SharedMedia;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedPhotos.css';\r\n\r\nclass SharedPhotos extends SharedMediaBase {\r\n    getListClassName() {\r\n        return 'shared-photos-list';\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return 'shared-photos-search-list';\r\n    }\r\n\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messagePhoto';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterPhoto' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('PhotosTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedPhoto\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                photo={content.photo}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedPhotos.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedPhotos.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedPhotos);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedVideos.css';\r\n\r\nclass SharedVideos extends SharedMediaBase {\r\n    getListClassName() {\r\n        return 'shared-photos-list';\r\n    }\r\n\r\n    getSearchListClassName() {\r\n        return 'shared-photos-search-list';\r\n    }\r\n\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageVideo';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterVideo' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('VideosTitle');\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedVideo\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                video={content.video}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedVideos.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedVideos.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedVideos);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SharedMediaBase from './SharedMediaBase';\r\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\r\nimport { openMedia } from '../../../Utils/Message';\r\nimport './SharedVoiceNotes.css';\r\n\r\nclass SharedVoiceNotes extends SharedMediaBase {\r\n    isValidContent(content) {\r\n        return content && content['@type'] === 'messageVoiceNote';\r\n    }\r\n\r\n    getSearchFilter() {\r\n        return { '@type': 'searchMessagesFilterVoiceNote' };\r\n    }\r\n\r\n    getHeader() {\r\n        const { t } = this.props;\r\n\r\n        return t('VoiceTitle');\r\n    }\r\n\r\n    hasSearch() {\r\n        return false;\r\n    }\r\n\r\n    getItemTemplate(message) {\r\n        const { migratedChatId } = this.props;\r\n        const { chat_id, content, id } = message;\r\n\r\n        return (\r\n            <SharedVoiceNote\r\n                key={`chat_id=${chat_id}_message_id=${id}`}\r\n                chatId={chat_id}\r\n                messageId={id}\r\n                voiceNote={content.voice_note}\r\n                openMedia={() => openMedia(chat_id, id, false)}\r\n                showOpenMessage={chat_id !== migratedChatId}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nSharedVoiceNotes.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    migratedChatId: PropTypes.number,\r\n    onClose: PropTypes.func.isRequired,\r\n    popup: PropTypes.bool,\r\n    minHeight: PropTypes.number\r\n};\r\n\r\nSharedVoiceNotes.defaultProps = {\r\n    popup: false,\r\n    minHeight: 0\r\n};\r\n\r\nexport default withTranslation()(SharedVoiceNotes);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatDetails from './ChatDetails';\r\nimport GroupsInCommon from './GroupsInCommon';\r\nimport SharedAudios from './SharedMedia/SharedAudios';\r\nimport SharedDocuments from './SharedMedia/SharedDocuments';\r\nimport SharedLinks from './SharedMedia/SharedLinks';\r\nimport SharedMedia from './SharedMedia';\r\nimport SharedPhotos from './SharedMedia/SharedPhotos';\r\nimport SharedVideos from './SharedMedia/SharedVideos';\r\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\r\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\r\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\r\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ChatInfo.css';\r\n\r\nclass ChatInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.detailsRef = React.createRef();\r\n\r\n        const { popup } = props;\r\n        const { chatId, dialogChatId } = AppStore;\r\n\r\n        this.state = {\r\n            chatId: popup ? dialogChatId : chatId,\r\n            migratedChatId: 0,\r\n            userChatId: null,\r\n            openGroupInCommon: false,\r\n            openSharedAudios: false,\r\n            openSharedDocuments: false,\r\n            openSharedLinks: false,\r\n            openSharedMedia: false,\r\n            openSharedPhotos: false,\r\n            openSharedVideos: false,\r\n            openSharedVoiceNotes: false,\r\n            counters: null,\r\n            migratedCounters: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent(this.state.chatId);\r\n\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId } = this.state;\r\n        if (chatId !== prevState.chatId) {\r\n            this.loadContent(chatId);\r\n        }\r\n    }\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { popup } = this.props;\r\n        if (popup) return;\r\n\r\n        this.handleCloseChatDetails();\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { popup } = this.props;\r\n        const { chatId } = this.state;\r\n\r\n        if (popup) return;\r\n        if (chatId === update.nextChatId) return;\r\n\r\n        this.sharedAudios = null;\r\n        this.sharedDocuments = null;\r\n        this.sharedLinks = null;\r\n        this.sharedPhotos = null;\r\n        this.sharedVideos = null;\r\n        this.sharedVoiceNotes = null;\r\n\r\n        this.setState({\r\n            chatId: update.nextChatId,\r\n            migratedChatId: 0,\r\n            userChatId: null,\r\n            openGroupInCommon: false,\r\n            openSharedAudios: false,\r\n            openSharedDocuments: false,\r\n            openSharedLinks: false,\r\n            openSharedMedia: false,\r\n            openSharedPhotos: false,\r\n            openSharedVideos: false,\r\n            openSharedVoiceNotes: false,\r\n            counters: ChatStore.getCounters(update.nextChatId),\r\n            migratedCounters: null\r\n        });\r\n\r\n        if (!update.nextChatId) {\r\n            this.handleCloseChatDetails();\r\n        }\r\n    };\r\n\r\n    loadContent = chatId => {\r\n        this.loadChatCounters(chatId);\r\n        this.loadMigratedCounters(chatId);\r\n\r\n        const photo = getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n        loadProfileMediaViewerContent(chatId, [photo]);\r\n    };\r\n\r\n    loadChatCounters = async chatId => {\r\n        const counters = await getChatCounters(chatId);\r\n        ChatStore.setCounters(chatId, counters);\r\n\r\n        if (chatId !== this.state.chatId) return;\r\n\r\n        this.setState({ counters });\r\n    };\r\n\r\n    loadMigratedCounters = async chatId => {\r\n        if (!isSupergroup(chatId)) return;\r\n\r\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\r\n        if (!fullInfo) return;\r\n\r\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\r\n        if (!basic_group_id) return;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createBasicGroupChat',\r\n            basic_group_id,\r\n            force: true\r\n        });\r\n\r\n        if (!chat) return;\r\n\r\n        const counters = await getChatCounters(chat.id);\r\n        ChatStore.setCounters(chat.id, counters);\r\n\r\n        if (this.state.chatId !== chatId) return;\r\n\r\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\r\n    };\r\n\r\n    handleOpenSharedMedia = () => {\r\n        this.setState({ openSharedMedia: true });\r\n    };\r\n\r\n    handleCloseSharedMedia = () => {\r\n        this.setState({ openSharedMedia: false });\r\n    };\r\n\r\n    handleOpenGroupInCommon = () => {\r\n        this.setState({ openGroupInCommon: true });\r\n    };\r\n\r\n    handleCloseGroupsInCommon = () => {\r\n        this.setState({ openGroupInCommon: false });\r\n    };\r\n\r\n    handleCloseChatDetails = () => {\r\n        const { popup } = this.props;\r\n        const { userChatId } = this.state;\r\n\r\n        if (userChatId) {\r\n            this.setState({ userChatId: null });\r\n        } else if (popup) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateDialogChatId',\r\n                chatId: 0\r\n            });\r\n        } else {\r\n            changeChatDetailsVisibility(false);\r\n        }\r\n    };\r\n\r\n    handleOpenSharedDocuments = () => {\r\n        this.setState({ openSharedDocuments: true });\r\n    };\r\n\r\n    handleCloseSharedDocuments = () => {\r\n        this.setState({ openSharedDocuments: false });\r\n    };\r\n\r\n    handleOpenSharedAudios = () => {\r\n        this.setState({ openSharedAudios: true });\r\n    };\r\n\r\n    handleCloseSharedAudios = () => {\r\n        this.setState({ openSharedAudios: false });\r\n    };\r\n\r\n    handleOpenSharedVoiceNotes = () => {\r\n        this.setState({ openSharedVoiceNotes: true });\r\n    };\r\n\r\n    handleCloseSharedVoiceNotes = () => {\r\n        this.setState({ openSharedVoiceNotes: false });\r\n    };\r\n\r\n    handleOpenSharedLinks = () => {\r\n        this.setState({ openSharedLinks: true });\r\n    };\r\n\r\n    handleCloseSharedLinks = () => {\r\n        this.setState({ openSharedLinks: false });\r\n    };\r\n\r\n    handleOpenSharedPhotos = () => {\r\n        this.setState({ openSharedPhotos: true });\r\n    };\r\n\r\n    handleCloseSharedPhotos = () => {\r\n        this.setState({ openSharedPhotos: false });\r\n    };\r\n\r\n    handleOpenSharedVideos = () => {\r\n        this.setState({ openSharedVideos: true });\r\n    };\r\n\r\n    handleCloseSharedVideos = () => {\r\n        this.setState({ openSharedVideos: false });\r\n    };\r\n\r\n    render() {\r\n        const { className, popup } = this.props;\r\n        const {\r\n            chatId,\r\n            counters,\r\n            migratedChatId,\r\n            migratedCounters,\r\n            userChatId,\r\n            openSharedAudios,\r\n            openSharedDocuments,\r\n            openSharedLinks,\r\n            openSharedMedia,\r\n            openSharedPhotos,\r\n            openSharedVideos,\r\n            openSharedVoiceNotes,\r\n            openGroupInCommon\r\n        } = this.state;\r\n\r\n        const currentChatId = chatId || userChatId;\r\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\r\n\r\n        let content = null;\r\n        if (openSharedMedia) {\r\n            content = (\r\n                <SharedMedia\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedMedia}\r\n                />\r\n            );\r\n        } else if (openSharedAudios) {\r\n            this.sharedAudios = this.sharedAudios || (\r\n                <SharedAudios\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedAudios}\r\n                />\r\n            );\r\n\r\n            content = this.sharedAudios;\r\n        } else if (openSharedDocuments) {\r\n            this.sharedDocuments = this.sharedDocuments || (\r\n                <SharedDocuments\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedDocuments}\r\n                />\r\n            );\r\n\r\n            content = this.sharedDocuments;\r\n        } else if (openSharedLinks) {\r\n            this.sharedLinks = this.sharedLinks || (\r\n                <SharedLinks\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedLinks}\r\n                />\r\n            );\r\n\r\n            content = this.sharedLinks;\r\n        } else if (openSharedPhotos) {\r\n            this.sharedPhotos = this.sharedPhotos || (\r\n                <SharedPhotos\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedPhotos}\r\n                />\r\n            );\r\n\r\n            content = this.sharedPhotos;\r\n        } else if (openSharedVideos) {\r\n            this.sharedVideos = this.sharedVideos || (\r\n                <SharedVideos\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedVideos}\r\n                />\r\n            );\r\n\r\n            content = this.sharedVideos;\r\n        } else if (openSharedVoiceNotes) {\r\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\r\n                <SharedVoiceNotes\r\n                    chatId={currentChatId}\r\n                    migratedChatId={migratedChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseSharedVoiceNotes}\r\n                />\r\n            );\r\n\r\n            content = this.sharedVoiceNotes;\r\n        } else if (openGroupInCommon) {\r\n            content = (\r\n                <GroupsInCommon\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    minHeight={minHeight}\r\n                    onClose={this.handleCloseGroupsInCommon}\r\n                />\r\n            );\r\n        } else {\r\n            content = (\r\n                <ChatDetails\r\n                    ref={this.detailsRef}\r\n                    chatId={currentChatId}\r\n                    popup={popup}\r\n                    backButton={userChatId === chatId}\r\n                    counters={counters}\r\n                    migratedCounters={migratedCounters}\r\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\r\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\r\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\r\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\r\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\r\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\r\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\r\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\r\n                    onClose={this.handleCloseChatDetails}\r\n                />\r\n            );\r\n        }\r\n\r\n        return popup ? (\r\n            <>{content}</>\r\n        ) : (\r\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\r\n        );\r\n    }\r\n}\r\n\r\nChatInfo.propTypes = {\r\n    className: PropTypes.string,\r\n    classes: PropTypes.object,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nChatInfo.defaultProps = {\r\n    className: null,\r\n    classes: null,\r\n    popup: false\r\n};\r\n\r\nexport default ChatInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport {\r\n    getChatTypingString,\r\n    getChatDraft,\r\n    getLastMessageSenderName,\r\n    getLastMessageContent,\r\n    showChatDraft, isPrivateChat\r\n} from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './DialogContent.css';\r\n\r\nclass DialogContent extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateUserChatAction', this.onUpdate);\r\n        UserStore.on('updateUser', this.onUpdateUser);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateUserChatAction', this.onUpdate);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUser = update => {\r\n        const { chatId } = this.props;\r\n        const { user } = update;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (isPrivateChat(chatId)) return;\r\n\r\n        const { last_message } = chat;\r\n        if (!last_message) return;\r\n\r\n        const { sender } = last_message;\r\n        if (sender.user_id !== user.id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\r\n\r\n        let contentControl = null;\r\n        const typingString = getChatTypingString(chatId);\r\n        if (typingString) {\r\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\r\n        }\r\n\r\n        if (!contentControl) {\r\n            const draft = getChatDraft(chatId);\r\n            if (showChatDraft(chatId)) {\r\n                const text = draft.text || '\\u00A0';\r\n\r\n                contentControl = (\r\n                    <>\r\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\r\n                        {text}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n\r\n        if (!contentControl) {\r\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\r\n            const senderName = getLastMessageSenderName(chat, t);\r\n            contentControl = (\r\n                <>\r\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\r\n                    {content}\r\n                </>\r\n            );\r\n        }\r\n\r\n        return <div className='dialog-content'>{contentControl}</div>;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(DialogContent);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\r\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\r\n        <path\r\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\r\n            strokeWidth='1.66'\r\n            strokeLinecap='round'\r\n            strokeLinejoin='round'\r\n        />\r\n    </g>,\r\n    'Pin'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport PinIcon from '../../Assets/Icons/Pin';\r\nimport {\r\n    isChatMuted,\r\n    isChatPinned,\r\n    showChatUnreadCount,\r\n    showChatUnreadMentionCount\r\n} from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport NotificationStore from '../../Stores/NotificationStore';\r\nimport './DialogBadge.css';\r\n\r\nclass DialogBadge extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, chatList } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatList !== chatList) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\r\n        ChatStore.on('updateChatPosition', this.onUpdate);\r\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\r\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\r\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\r\n        ChatStore.off('updateChatPosition', this.onUpdate);\r\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\r\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\r\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (update.chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateScopeNotificationSettings = update => {\r\n        const { chatId } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        switch (update.scope['@type']) {\r\n            case 'notificationSettingsScopeGroupChats': {\r\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'notificationSettingsScopePrivateChats': {\r\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (this.clearHistory) return null;\r\n\r\n        const { chatId, chatList } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { unread_count } = chat;\r\n        const isPinned = isChatPinned(chatId, chatList);\r\n\r\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\r\n        const showUnreadCount = showChatUnreadCount(chatId);\r\n        const isMuted = isChatMuted(chatId);\r\n\r\n        return (\r\n            <>\r\n                {showUnreadMentionCount && (\r\n                    <div className='dialog-badge'>\r\n                        <div className='dialog-badge-mention'>@</div>\r\n                    </div>\r\n                )}\r\n                {showUnreadCount && (\r\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\r\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\r\n                    </div>\r\n                )}\r\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\r\n                    <div className='dialog-badge-pinned'>\r\n                        <PinIcon className='dialog-badge-pinned-icon' />\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogBadge;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\r\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\r\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\r\n        </g>\r\n    </g>,\r\n    'Error'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\r\n        <g transform='translate(-3.000000, 0.000000)'>\r\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\r\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\r\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\r\n        </g>\r\n    </g>,\r\n    'Pending'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path\r\n        transform='translate(-4.000000, -2.000000)'\r\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\r\n    />,\r\n    'Sent'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path\r\n        transform='translate(-1.000000, -2.000000)'\r\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\r\n    />,\r\n    'Succeeded'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ErrorIcon from '../../Assets/Icons/Error';\r\nimport PendingIcon from '../../Assets/Icons/Pending';\r\nimport SentIcon from '../../Assets/Icons/Sent';\r\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\r\nimport { isMessageUnread } from '../../Utils/Message';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Status.css';\r\n\r\nclass Status extends React.Component {\r\n    state = {};\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId } = props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const sendingState = message ? message.sending_state : null;\r\n\r\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n                sendingState,\r\n                unread: isMessageUnread(chatId, messageId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\r\n\r\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\r\n\r\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\r\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\r\n    }\r\n\r\n    onUpdateMessageSend = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { old_message_id, message } = update;\r\n\r\n        if (messageId !== old_message_id) return;\r\n        if (!message) return;\r\n\r\n        const { chat_id, id, sending_state } = message;\r\n        if (chatId !== chat_id) return;\r\n\r\n        this.newMessageId = id;\r\n        this.setState({ sendingState: sending_state });\r\n    };\r\n\r\n    onUpdateChatReadOutbox = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { chat_id, last_read_outbox_message_id } = update;\r\n        const { newMessageId } = this;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\r\n            this.setState({ sendingState: null, unread: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { sendingState, unread } = this.state;\r\n        if (!unread) {\r\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\r\n        }\r\n\r\n        if (sendingState) {\r\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\r\n                <ErrorIcon\r\n                    className='status'\r\n                    viewBox='0 0 14 14'\r\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\r\n                />\r\n            ) : (\r\n                <PendingIcon\r\n                    className='status'\r\n                    viewBox='0 0 14 14'\r\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\r\n                />\r\n            );\r\n        }\r\n\r\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\r\n    }\r\n}\r\n\r\nStatus.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number\r\n};\r\n\r\nexport default Status;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Status from '../Message/Status';\r\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './DialogMeta.css';\r\n\r\nclass DialogMeta extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t } = this.props;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\r\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\r\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\r\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.clearHistory = update.inProgress;\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdate = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        if (this.clearHistory) return null;\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const isMe = isMeChat(chatId);\r\n\r\n        const { last_message } = chat;\r\n        if (!last_message) return null;\r\n\r\n        const date = getLastMessageDate(chat);\r\n        if (!date) return null;\r\n\r\n        const { id, is_outgoing } = last_message;\r\n\r\n        return (\r\n            <div className='dialog-meta'>\r\n                {is_outgoing && !isMe && (\r\n                    <>\r\n                        <Status chatId={chatId} messageId={id} />\r\n                        <span> </span>\r\n                    </>\r\n                )}\r\n                {date}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(DialogMeta);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\r\n    'Archive'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\r\n    'Unarchive'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\r\n    'Pin2'\r\n);\r\n\r\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\r\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\r\n// <title>Combined Shape</title>\r\n// <desc>Created with Sketch.</desc>\r\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\r\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\r\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\r\n// </g>\r\n// </g>\r\n// </svg>\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g fill='none' stroke='currentColor' strokeWidth='2' strokeLinecap='round' strokeLinejoin='round' transform='translate(4.000000, 3.000000)'>\r\n        <path d='M4.13956059,4.53516651 L12,13 L1.61342192,13 C1.33727955,13 1.11342192,12.7761424 1.11342192,12.5 C1.11342192,12.3775429 1.15836121,12.2593436 1.23971726,12.1678181 L4.21231156,8.8236495 C4.39586848,8.61714796 4.48580955,8.343905 4.46079545,8.06874991 C4.3180244,6.4982684 4.21094612,5.32040727 4.13956059,4.53516651 Z M14.1483713,1.77635684e-15 C14.4245137,1.77635684e-15 14.6483713,0.223857625 14.6483713,0.5 C14.6483713,0.645962444 14.5845899,0.784637202 14.473767,0.879628301 L12.3083351,2.73571273 C12.1106192,2.90518356 11.9868095,3.14509573 11.9632333,3.40443359 C11.817534,5.00712639 11.7082595,6.209146 11.6354098,7.0104924 L5,1.77635684e-15 L14.1483713,1.77635684e-15 Z M8,13 L8,19 M0,0 L16.5,17'/>\r\n    </g>,\r\n    'PinOff'\r\n);\r\n\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\r\n    'Mute'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\r\n    'Unmute'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\r\n    'User'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\r\n    'Group'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\r\n    'Message'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\r\n    'Unread'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ChatTile from './ChatTile';\r\nimport DialogContent from './DialogContent';\r\nimport DialogBadge from './DialogBadge';\r\nimport DialogTitle from './DialogTitle';\r\nimport DialogMeta from './DialogMeta';\r\nimport ArchiveIcon from '../../Assets/Icons/Archive';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\r\nimport PinIcon from '../../Assets/Icons/Pin2';\r\nimport UnpinIcon from '../../Assets/Icons/PinOff';\r\nimport MuteIcon from '../../Assets/Icons/Mute';\r\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\r\nimport UserIcon from '../../Assets/Icons/User';\r\nimport GroupIcon from '../../Assets/Icons/Group';\r\nimport MessageIcon from '../../Assets/Icons/Message';\r\nimport UnreadIcon from '../../Assets/Icons/Unread';\r\nimport {\r\n    canAddChatToList,\r\n    canDeleteChat,\r\n    getDeleteChatTitle,\r\n    getViewInfoTitle,\r\n    isChatArchived,\r\n    isChatMuted,\r\n    isChatPinned,\r\n    isChatSecret,\r\n    isChatUnread,\r\n    isMeChat,\r\n    isPrivateChat\r\n} from '../../Utils/Chat';\r\nimport {\r\n    addChatToList,\r\n    leaveChat,\r\n    toggleChatIsMarkedAsUnread,\r\n    toggleChatIsPinned,\r\n    toggleChatNotificationSettings\r\n} from '../../Actions/Chat';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { viewMessages } from '../../Actions/Message';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Dialog.css';\r\n\r\nclass Dialog extends Component {\r\n    static contextMenuId;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialog = React.createRef();\r\n\r\n        const chat = ChatStore.get(this.props.chatId);\r\n        this.state = {\r\n            chat,\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\r\n        const { contextMenu } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== t) {\r\n            // console.log('[vl] Dialog.shouldUpdate true t');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.hidden !== hidden) {\r\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.isLastPinned !== isLastPinned) {\r\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chatList !== chatList) {\r\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\r\n            // console.log('[vl] Dialog.shouldUpdate true style');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[vl] Dialog.shouldUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleSelect = event => {\r\n        if (event.button === 0) {\r\n            openChat(this.props.chatId);\r\n        }\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { chatId, chatList } = this.props;\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const contextMenuId = new Date();\r\n            Dialog.contextMenuId = contextMenuId;\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const isPinned = isChatPinned(chatId, chatList);\r\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\r\n            const canToggleArchive = canAddChatToList(chatId);\r\n            const canMute = !isMeChat(chatId);\r\n\r\n            if (Dialog.contextMenuId !== contextMenuId) {\r\n                return;\r\n            }\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                canTogglePin,\r\n                canToggleArchive,\r\n                canMute,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleMute = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\r\n    };\r\n\r\n    canPinChats = async chatId => {\r\n        const { chatList } = this.props;\r\n\r\n        const pinnedSumMaxOption = isChatArchived(chatId)\r\n            ? OptionStore.get('pinned_archived_chat_count_max')\r\n            : OptionStore.get('pinned_chat_count_max');\r\n        if (!pinnedSumMaxOption) return false;\r\n\r\n        const isSecret = isChatSecret(chatId);\r\n        const chats = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: chatList,\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: pinnedSumMaxOption.value + 10\r\n        });\r\n\r\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\r\n            if (isChatSecret(id) !== isSecret) return x;\r\n\r\n            const chat = ChatStore.get(id);\r\n\r\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\r\n        }, 0);\r\n\r\n        return pinnedSum < pinnedSumMaxOption.value;\r\n    };\r\n\r\n    handlePin = async event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId, chatList } = this.props;\r\n        const isPinned = isChatPinned(chatId, chatList);\r\n\r\n        if (!isPinned && !this.canPinChats(chatId)) return;\r\n\r\n        toggleChatIsPinned(chatId, chatList, !isPinned);\r\n    };\r\n\r\n    handleArchive = async event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n        if (!canAddChatToList(chatId)) return;\r\n\r\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\r\n    };\r\n\r\n    handleViewInfo = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        openChat(chatId, null, true);\r\n    };\r\n\r\n    handleRead = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const isUnread = isChatUnread(chatId);\r\n        if (isUnread) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (!chat) return;\r\n\r\n            const { is_marked_as_unread, last_message, unread_count } = chat;\r\n            if (unread_count > 0 && last_message) {\r\n                viewMessages(chatId, [last_message.id], true);\r\n            } else if (is_marked_as_unread) {\r\n                toggleChatIsMarkedAsUnread(chatId, false);\r\n            }\r\n        } else {\r\n            toggleChatIsMarkedAsUnread(chatId, true);\r\n        }\r\n    };\r\n\r\n    handleDeleteChat = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { chatId } = this.props;\r\n\r\n        leaveChat(chatId)\r\n    };\r\n\r\n    render() {\r\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\r\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\r\n\r\n        const deleteChat = canDeleteChat(chatId);\r\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\r\n\r\n        const isPinned = isChatPinned(chatId, chatList);\r\n        const currentChatId = ApplicationStore.getChatId();\r\n        const isSelected = currentChatId === chatId;\r\n        const isMuted = isChatMuted(chatId);\r\n        const isUnread = isChatUnread(chatId);\r\n        const isArchived = isChatArchived(chatId);\r\n        return (\r\n            <ListItem\r\n                button\r\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\r\n                onMouseDown={this.handleSelect}\r\n                onContextMenu={this.handleContextMenu}\r\n                style={style}\r\n                >\r\n                    <div className='dialog-wrapper'>\r\n                        <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\r\n                        <div className='dialog-inner-wrapper'>\r\n                            <div className='tile-first-row'>\r\n                                <DialogTitle chatId={chatId} />\r\n                                <DialogMeta chatId={chatId} />\r\n                            </div>\r\n                            <div className='tile-second-row'>\r\n                                <DialogContent chatId={chatId} />\r\n                                <DialogBadge chatId={chatId} chatList={chatList} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Popover\r\n                        open={contextMenu}\r\n                        onClose={this.handleCloseContextMenu}\r\n                        anchorReference='anchorPosition'\r\n                        anchorPosition={{ top, left }}\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'right'\r\n                        }}\r\n                        transformOrigin={{\r\n                            vertical: 'top',\r\n                            horizontal: 'left'\r\n                        }}\r\n                        onMouseDown={e => e.stopPropagation()}>\r\n                        <MenuList onClick={e => e.stopPropagation()}>\r\n                            {canToggleArchive && (\r\n                                <MenuItem onClick={this.handleArchive}>\r\n                                    {isArchived ? (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <UnarchiveIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('Unarchive')} />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <ArchiveIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('Archive')} />\r\n                                        </>\r\n                                    )}\r\n                                </MenuItem>\r\n                            )}\r\n                            {canTogglePin && (\r\n                                <MenuItem onClick={this.handlePin}>\r\n                                    {isPinned ? (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <UnpinIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('UnpinFromTop')} />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <PinIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('PinToTop')} />\r\n                                        </>\r\n                                    )}\r\n                                </MenuItem>\r\n                            )}\r\n                            <MenuItem onClick={this.handleViewInfo}>\r\n                                <ListItemIcon>\r\n                                    {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={getViewInfoTitle(chatId, t)} />\r\n                            </MenuItem>\r\n                            { canMute && (\r\n                                <MenuItem onClick={this.handleMute}>\r\n                                    {isMuted ? (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <UnmuteIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('ChatsUnmute')} />\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <ListItemIcon>\r\n                                                <MuteIcon />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText primary={t('ChatsMute')} />\r\n                                        </>\r\n                                    )}\r\n                                </MenuItem>\r\n                            )}\r\n                            <MenuItem onClick={this.handleRead}>\r\n                                {isUnread ? (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <MessageIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('MarkAsRead')} />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <UnreadIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('MarkAsUnread')} />\r\n                                    </>\r\n                                )}\r\n                            </MenuItem>\r\n                            {/*{clearHistory && (*/}\r\n                            {/*    <MenuItem onClick={this.handleClearHistory}>*/}\r\n                            {/*        <ListItemIcon>*/}\r\n                            {/*            <BroomIcon />*/}\r\n                            {/*        </ListItemIcon>*/}\r\n                            {/*        <ListItemText primary={t('ClearHistory')} />*/}\r\n                            {/*    </MenuItem>*/}\r\n                            {/*)}*/}\r\n                            {deleteChat && deleteChatTitle && (\r\n                                <MenuItem onClick={this.handleDeleteChat}>\r\n                                    <ListItemIcon>\r\n                                        <DeleteIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={deleteChatTitle} />\r\n                                </MenuItem>\r\n                            )}\r\n                        </MenuList>\r\n                    </Popover>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nDialog.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    chatList: PropTypes.object.isRequired,\r\n    hidden: PropTypes.bool,\r\n    showSavedMessages: PropTypes.bool,\r\n    isLastPinned: PropTypes.bool,\r\n    style: PropTypes.object\r\n};\r\n\r\nDialog.defaultProps = {\r\n    hidden: false,\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(Dialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getChatTitle } from '../../Utils/Chat';\r\nimport './DialogPlaceholder.css';\r\n\r\nclass DialogPlaceholder extends React.Component {\r\n    render() {\r\n        const { chatId, index, showTitle } = this.props;\r\n\r\n        let title = null;\r\n        if (showTitle) {\r\n            title = getChatTitle(chatId, true);\r\n        }\r\n\r\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\r\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\r\n\r\n        return (\r\n            <div className='dialog-placeholder'>\r\n                <div className='dialog-placeholder-wrapper'>\r\n                    <div className='dialog-placeholder-tile' />\r\n                    <div className='dialog-placeholder-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            {showTitle ? (\r\n                                title\r\n                            ) : (\r\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\r\n                            )}\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogPlaceholder.propTypes = {\r\n    index: PropTypes.number.isRequired,\r\n    showTitle: PropTypes.bool\r\n};\r\n\r\nexport default DialogPlaceholder;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './VirtualizedList.css';\r\n\r\nconst style = {\r\n    listWrapper: height => ({\r\n        height,\r\n        position: 'relative'\r\n    }),\r\n    item: (index, height) => ({\r\n        height,\r\n        left: 0,\r\n        right: 0,\r\n        top: height * index,\r\n        position: 'absolute'\r\n    })\r\n};\r\n\r\nexport class VirtualizedList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        this.state = {\r\n            scrollTop: 0,\r\n            renderIds: new Map(),\r\n            renderIdsList: [],\r\n            viewportHeight: 0\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.source !== this.props.source) {\r\n            this.setViewportHeight();\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return true;\r\n\r\n        // const { renderIds } = this.state;\r\n        // const { renderIds: nextRenderIds } = nextState;\r\n        //\r\n        // if (renderIds.size === nextRenderIds.size) {\r\n        //     renderIds.forEach((value, key) => {\r\n        //         if (!nextRenderIds.has(key)) {\r\n        //             return true;\r\n        //         }\r\n        //     });\r\n        //\r\n        //     return false;\r\n        // }\r\n        //\r\n        // return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.setViewportHeight, true);\r\n\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n        current.addEventListener('scroll', this.setScrollPosition, true);\r\n\r\n        this.setViewportHeight();\r\n    }\r\n\r\n    setViewportHeight = () => {\r\n        const { source } = this.props;\r\n        const { scrollTop } = this.state;\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n\r\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\r\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\r\n\r\n        // console.log('[vl] setViewportHeight');\r\n        this.setState({ viewportHeight, ...renderIds });\r\n    };\r\n\r\n    getRenderIds(source, viewportHeight, scrollTop) {\r\n        const renderIds = new Map();\r\n        const renderIdsList = [];\r\n        source.forEach((item, index) => {\r\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\r\n                renderIds.set(index, index);\r\n                renderIdsList.push(index);\r\n            }\r\n        });\r\n\r\n        return { renderIds, renderIdsList };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.setViewportHeight);\r\n\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n        current.removeEventListener('scroll', this.setScrollPosition);\r\n    }\r\n\r\n    getListRenderIds() {\r\n        const { renderIds } = this.state;\r\n\r\n        return renderIds;\r\n    }\r\n\r\n    setScrollPosition = event => {\r\n        const { source, rowHeight, onScroll } = this.props;\r\n        const { viewportHeight, scrollTop } = this.state;\r\n\r\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\r\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\r\n\r\n            this.setState({\r\n                scrollTop: event.target.scrollTop,\r\n                ...renderIds\r\n            });\r\n        }\r\n\r\n        if (onScroll) {\r\n            onScroll(event);\r\n        }\r\n    };\r\n\r\n    getListRef() {\r\n        return this.listRef;\r\n    }\r\n\r\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\r\n        const { overScanCount, rowHeight } = this.props;\r\n\r\n        const itemTop = index * rowHeight;\r\n        const itemBottom = (index + 1) * rowHeight;\r\n\r\n        return (\r\n            itemTop > scrollTop - overScanCount * rowHeight &&\r\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { className, source, renderItem, rowHeight } = this.props;\r\n        const { renderIds } = this.state;\r\n\r\n        const items = (source || []).map((item, index) => {\r\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\r\n        });\r\n\r\n        // console.log('[vl] render', source, renderIds);\r\n\r\n        return (\r\n            <div ref={this.listRef} className={classNames('vlist', className)}>\r\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\r\n                    {items}\r\n                </div>\r\n                {/*<div className='vlist-top-border'/>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nVirtualizedList.defaultProps = {\r\n    source: [],\r\n    rowHeight: 72,\r\n    overScanCount: 5\r\n};\r\n\r\nVirtualizedList.propTypes = {\r\n    renderItem: PropTypes.func,\r\n    onScroll: PropTypes.func,\r\n    rowHeight: PropTypes.number,\r\n    className: PropTypes.string,\r\n    source: PropTypes.array.isRequired,\r\n    overScanCount: PropTypes.number.isRequired\r\n};\r\n\r\nexport default VirtualizedList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport function findLastTextNode(element) {\r\n    if (element.nodeType === Node.TEXT_NODE) {\r\n        return element;\r\n    }\r\n\r\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\r\n        const textNode = findLastTextNode(element.childNodes[i]);\r\n        if (textNode) {\r\n            return textNode;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport function focusInput(element) {\r\n    if (!element) return;\r\n\r\n    const textNode = findLastTextNode(element);\r\n    if (textNode) {\r\n        const range = document.createRange();\r\n        range.setStart(textNode, textNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n    }\r\n\r\n    element.focus();\r\n}\r\n\r\nexport function scrollTop(element, behavior = 'smooth') {\r\n    if (!element) return;\r\n\r\n    element.scrollTop = Math.min(element.scrollTop, 50);\r\n    setTimeout(() => {\r\n        element.scrollTo({ top: 0, behavior });\r\n    }, 1);\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\r\n    'Channel'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\r\n    'Menu'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\r\n    'Help'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\r\n    'Settings'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nclass CacheManager {\r\n    async load(key) {\r\n        const value = localStorage.getItem(key);\r\n        if (!value) return null;\r\n\r\n        try {\r\n            return JSON.parse(value);\r\n        } catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async save(key, value) {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n\r\n    async remove(key) {\r\n        localStorage.removeItem(key);\r\n    }\r\n\r\n    async clear() {\r\n        localStorage.clear();\r\n    }\r\n}\r\n\r\nconst manager = new CacheManager();\r\nexport default manager;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport EventEmitter from './EventEmitter';\r\nimport { debounce } from '../Utils/Common';\r\nimport CacheManager from '../Workers/CacheManager';\r\nimport BasicGroupStore from './BasicGroupStore';\r\nimport ChatStore from './ChatStore';\r\nimport FileStore from './FileStore';\r\nimport MessageStore from './MessageStore';\r\nimport OptionStore from './OptionStore';\r\nimport SupergroupStore from './SupergroupStore';\r\nimport UserStore from './UserStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass CacheStore extends EventEmitter {\r\n    constructor() {\r\n        super();\r\n\r\n        this.cacheContacts = false;\r\n\r\n        this.reset();\r\n\r\n        this.addTdLibListener();\r\n\r\n        this.saveInternal = debounce(this.saveInternal, 2000);\r\n    }\r\n\r\n    reset = () => {\r\n        this.filters = null;\r\n        this.chatIds = [];\r\n        this.archiveChatIds = [];\r\n        this.meChat = null;\r\n        if (this.cacheContacts) {\r\n            this.contacts = null;\r\n        }\r\n\r\n        this.cache = null;\r\n    };\r\n\r\n    onUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'updateAuthorizationState': {\r\n                const { authorization_state } = update;\r\n                if (!authorization_state) break;\r\n\r\n                switch (authorization_state['@type']) {\r\n                    case 'authorizationStateClosed': {\r\n                        this.reset();\r\n                        this.clear();\r\n                        break;\r\n                    }\r\n                    case 'authorizationStateLoggingOut':\r\n                    case 'authorizationStateWaitCode':\r\n                    case 'authorizationStateWaitPhoneNumber':\r\n                    case 'authorizationStateWaitPassword':\r\n                    case 'authorizationStateWaitRegistration': {\r\n                        CacheManager.remove('cache');\r\n                        CacheManager.remove('files');\r\n                        if (this.cacheContacts) {\r\n                            CacheManager.remove('contacts');\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    onClientUpdate = update => {\r\n        switch (update['@type']) {\r\n            case 'clientUpdateDialogsReady': {\r\n                this.clearDataUrls();\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    addTdLibListener = () => {\r\n        TdLibController.on('update', this.onUpdate);\r\n        TdLibController.on('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    removeTdLibListener = () => {\r\n        TdLibController.off('update', this.onUpdate);\r\n        TdLibController.off('clientUpdate', this.onClientUpdate);\r\n    };\r\n\r\n    async load() {\r\n        // console.log('[cm] getChats start');\r\n        const promises = [];\r\n        promises.push(CacheManager.load('cache').catch(error => null));\r\n        promises.push(CacheManager.load('files').catch(error => null));\r\n        promises.push(CacheManager.load('filters').catch(error => null));\r\n        if (this.cacheContacts) {\r\n            promises.push(CacheManager.load('contacts').catch(error => null));\r\n        }\r\n        let [cache, files, filters, contacts] = await Promise.all(promises);\r\n\r\n        let dropCache = false;\r\n        if (cache && cache.chats) {\r\n            for (let i = 0; i < cache.chats.length; i++) {\r\n                const { last_message } = cache.chats[i];\r\n                if (last_message && last_message.sender_user_id) {\r\n                    dropCache = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (dropCache) {\r\n            cache = null;\r\n        }\r\n\r\n        this.cache = cache;\r\n        if (this.cache) {\r\n            this.cache.files = files || [];\r\n        }\r\n\r\n        if (this.cacheContacts) {\r\n            if (contacts) {\r\n                (contacts || []).forEach(x => {\r\n                    UserStore.set(x);\r\n                })\r\n\r\n                this.contacts = {\r\n                    '@type': 'users',\r\n                    user_ids: contacts.map(x => x.id),\r\n                    total_count: contacts.length\r\n                };\r\n            }\r\n        }\r\n\r\n        this.filters = filters;\r\n\r\n        if (this.cache) {\r\n            this.parseCache(this.cache);\r\n        }\r\n\r\n        // console.log('[cm] load', this.filters, filters);\r\n        return this.cache;\r\n    }\r\n\r\n    parseCache(cache) {\r\n        if (!cache) return;\r\n\r\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\r\n        // console.log('[cache] parseCache', cache);\r\n\r\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\r\n            FileStore.setDataUrl(id, url);\r\n        });\r\n\r\n        (users || []).forEach(x => {\r\n            UserStore.set(x);\r\n        });\r\n\r\n        (basicGroups || []).forEach(x => {\r\n            BasicGroupStore.set(x);\r\n        });\r\n\r\n        (supergroups || []).forEach(x => {\r\n            SupergroupStore.set(x);\r\n        });\r\n\r\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\r\n            if (x) {\r\n                delete x.OutputTypingManager;\r\n\r\n                ChatStore.set(x);\r\n                if (x.photo) {\r\n                    if (x.photo.small) FileStore.set(x.photo.small);\r\n                    if (x.photo.big) FileStore.set(x.photo.big);\r\n                }\r\n                if (x.position) {\r\n                    ChatStore.updateChatChatLists(x.id);\r\n                }\r\n                if (x.last_message) {\r\n                    MessageStore.set(x.last_message);\r\n                }\r\n            }\r\n        });\r\n\r\n        (options || []).forEach(([id, option]) => {\r\n            OptionStore.set(id, option);\r\n        });\r\n    }\r\n\r\n    async getCache(chatIds, archiveChatIds) {\r\n        const fileMap = new Map();\r\n        const userMap = new Map();\r\n        const basicGroupMap = new Map();\r\n        const supergroupMap = new Map();\r\n        const meChat = this.meChat;\r\n        const chats = chatIds.map(x => ChatStore.get(x));\r\n        const chatMap = new Map(chats.map(x => [x.id, x]));\r\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\r\n\r\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\r\n            const { photo, type, last_message } = x;\r\n            if (photo && photo.small) {\r\n                const { id } = photo.small;\r\n                if (id) {\r\n                    const blob = FileStore.getBlob(id);\r\n                    if (blob) {\r\n                        fileMap.set(id, blob);\r\n                    }\r\n                }\r\n            }\r\n\r\n            switch (type['@type']) {\r\n                case 'chatTypeBasicGroup': {\r\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n                    if (basicGroup) {\r\n                        basicGroupMap.set(basicGroup.id, basicGroup);\r\n                    }\r\n                }\r\n                case 'chatTypePrivate':\r\n                case 'chatTypeSecret': {\r\n                    const user = UserStore.get(type.user_id);\r\n                    if (user) {\r\n                        userMap.set(user.id, user);\r\n                    }\r\n                }\r\n                case 'chatTypeSupergroup': {\r\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\r\n                    if (supergroup) {\r\n                        supergroupMap.set(supergroup.id, supergroup);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (last_message) {\r\n                const { sender } = last_message;\r\n                switch (sender['@type']) {\r\n                    case 'messageSenderUser': {\r\n                        const user = UserStore.get(sender.user_id);\r\n                        if (user) {\r\n                            userMap.set(user.id, user);\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'messageSenderChat': {\r\n                        const chat = ChatStore.get(sender.chat_id);\r\n                        if (chat) {\r\n                            chatMap.set(chat.id, chat);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return {\r\n            date: new Date(),\r\n            meChat,\r\n            chats: [...chatMap.values()],\r\n            archiveChats,\r\n            users: [...userMap.values()],\r\n            basicGroups: [...basicGroupMap.values()],\r\n            supergroups: [...supergroupMap.values()],\r\n            files: [...fileMap.entries()],\r\n            options: [...OptionStore.items.entries()]\r\n        };\r\n    }\r\n\r\n    async save(filters, chatIds, archiveChatIds) {\r\n        this.chatIds = chatIds;\r\n        this.archiveChatIds = archiveChatIds;\r\n        this.meChat = this.meChat || await TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: false\r\n        });\r\n        if (this.cacheContacts) {\r\n            this.contacts = this.contacts || await TdLibController.send({\r\n                '@type': 'getContacts'\r\n            });\r\n        }\r\n        this.filters = filters;\r\n\r\n        this.saveInternal();\r\n    }\r\n\r\n    async saveInternal() {\r\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\r\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\r\n        const files = cache.files;\r\n        cache.files = [];\r\n        // console.log('[cm] save cache', cache);\r\n        await CacheManager.save('cache', cache);\r\n\r\n        const promises = [];\r\n        files.forEach(x => {\r\n            const [id, blob] = x;\r\n            promises.push(\r\n                new Promise((resolve, reject) => {\r\n                    const fileReader = new FileReader();\r\n                    fileReader.readAsDataURL(blob);\r\n                    fileReader.onload = e => {\r\n                        resolve({ id, url: e.target.result });\r\n                    };\r\n                    fileReader.onerror = e => {\r\n                        resolve(null);\r\n                    };\r\n                })\r\n            );\r\n        });\r\n        // console.log('[cm] save files start', files);\r\n        const results = await Promise.all(promises);\r\n        // console.log('[cm] save files', results);\r\n        await CacheManager.save('files', results);\r\n\r\n        if (this.cacheContacts) {\r\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\r\n            await CacheManager.save('contacts', contacts);\r\n        }\r\n\r\n        if (this.filters) {\r\n            await CacheManager.save('filters', this.filters);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        const promises = [];\r\n        promises.push(CacheManager.remove('cache').catch(error => null));\r\n        promises.push(CacheManager.remove('files').catch(error => null));\r\n        promises.push(CacheManager.remove('filters').catch(error => null));\r\n        promises.push(CacheManager.remove('contacts').catch(error => null));\r\n        promises.push(CacheManager.remove('register').catch(error => null));\r\n\r\n        Promise.all(promises)\r\n    }\r\n\r\n    clearDataUrls() {\r\n        if (this.cache) {\r\n            const { files } = this.cache;\r\n\r\n            files.forEach(({ id, url }) => {\r\n                FileStore.deleteDataUrl(id);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nconst store = new CacheStore();\r\nwindow.cache = store;\r\nexport default store;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport ChannelIcon from '../../Assets/Icons/Channel';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport ArchiveIcon from '../../Assets/Icons/Archive';\r\nimport SearchIcon from '../../Assets/Icons/Search';\r\nimport MenuIcon from '../../Assets/Icons/Menu';\r\nimport GroupIcon from '../../Assets/Icons/Group';\r\nimport HelpIcon from '../../Assets/Icons/Help';\r\nimport SavedIcon from '../../Assets/Icons/Saved';\r\nimport SettingsIcon from '../../Assets/Icons/Settings';\r\nimport UserIcon from '../../Assets/Icons/User';\r\nimport { isAuthorizationReady } from '../../Utils/Common';\r\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MainMenuButton.css';\r\n\r\nclass MainMenuButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            authorizationState: AppStore.getAuthorizationState(),\r\n            anchorEl: null,\r\n            isSmallWidth: AppStore.isSmallWidth\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        this.setState({ isSmallWidth });\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    handleMenuOpen = event => {\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleCheckUpdates = async () => {\r\n        this.handleMenuClose();\r\n\r\n        //await update();\r\n    };\r\n\r\n    handleNewChannel = event => {\r\n        this.handleMenuClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewChannel',\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleNewGroup = event => {\r\n        this.handleMenuClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewGroup',\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleContacts = event => {\r\n        this.handleMenuClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateContacts',\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleArchived = event => {\r\n        this.handleMenuClose();\r\n\r\n        openArchive();\r\n    };\r\n\r\n    handleSaved = async event => {\r\n        this.handleMenuClose();\r\n\r\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\r\n        if (!chat) {\r\n            chat = await TdLibController.send({\r\n                '@type': 'createPrivateChat',\r\n                user_id: UserStore.getMyId(),\r\n                force: false\r\n            });\r\n        }\r\n\r\n        if (!chat) return;\r\n\r\n        openChat(chat.id);\r\n    };\r\n\r\n    handleSettings = async event => {\r\n        this.handleMenuClose();\r\n\r\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\r\n        if (!chat) {\r\n            chat = await TdLibController.send({\r\n                '@type': 'createPrivateChat',\r\n                user_id: UserStore.getMyId(),\r\n                force: false\r\n            });\r\n        }\r\n\r\n        if (!chat) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSettings',\r\n            open: true,\r\n            chatId: chat.id\r\n        });\r\n    };\r\n\r\n    handleHelp = async event => {\r\n        this.handleMenuClose();\r\n        // unregister();\r\n    };\r\n\r\n    handleSearch = () => {\r\n        this.handleMenuClose();\r\n\r\n        searchChat(0);\r\n    };\r\n\r\n    render() {\r\n        const { t, timeout, popup, showClose, onClose } = this.props;\r\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\r\n\r\n        const mainMenuControl =\r\n            !showClose && isAuthorizationReady(authorizationState) ? (\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left'\r\n                    }}>\r\n                    <MenuItem onClick={this.handleNewChannel}>\r\n                        <ListItemIcon>\r\n                            <ChannelIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('NewChannel')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleNewGroup}>\r\n                        <ListItemIcon>\r\n                            <GroupIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('NewGroup')} />\r\n                    </MenuItem>\r\n                    { isSmallWidth && (\r\n                        <MenuItem onClick={this.handleSearch}>\r\n                            <ListItemIcon>\r\n                                <SearchIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Search')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    <MenuItem onClick={this.handleContacts}>\r\n                        <ListItemIcon>\r\n                            <UserIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Contacts')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleArchived}>\r\n                        <ListItemIcon>\r\n                            <ArchiveIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Archived')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleSaved}>\r\n                        <ListItemIcon>\r\n                            <SavedIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Saved')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleSettings}>\r\n                        <ListItemIcon>\r\n                            <SettingsIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Settings')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleHelp}>\r\n                        <ListItemIcon>\r\n                            <HelpIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('SettingsHelp')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n            ) : null;\r\n\r\n        const closeIcon = popup\r\n            ? <CloseIcon/>\r\n            : <ArrowBackIcon/>;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    className='header-left-button main-menu-button'\r\n                    aria-label='Menu'\r\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\r\n                    { timeout\r\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\r\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\r\n                    }\r\n\r\n                </IconButton>\r\n                {mainMenuControl}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(MainMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport SearchIcon from '../../../Assets/Icons/Search';\r\nimport './SearchInput.css';\r\n\r\nclass SearchInput extends React.Component {\r\n    handleKeyDown = event => {\r\n        if (event.keyCode === 13) {\r\n            event.preventDefault();\r\n        } else if (event.keyCode === 27) {\r\n            const { onChange, onClose } = this.props;\r\n\r\n            const element = event.target;\r\n            if (!element) return;\r\n\r\n            if (element.innerText) {\r\n                event.stopPropagation();\r\n                event.nativeEvent.stopImmediatePropagation();\r\n\r\n                element.innerText = null;\r\n                if (onChange) onChange(element.innerText);\r\n                return;\r\n            }\r\n\r\n            if (onClose) {\r\n                onClose(event);\r\n            }\r\n        } else if (event.keyCode === 8) {\r\n            const { onBackspace } = this.props;\r\n\r\n            const element = event.target;\r\n            if (!element) return;\r\n            if (element.innerText) return;\r\n\r\n            if (onBackspace) {\r\n                event.stopPropagation();\r\n                onBackspace();\r\n            }\r\n        }\r\n    };\r\n\r\n    handleKeyUp = event => {\r\n        const element = event.target;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    };\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleInput = event => {\r\n        const { onChange } = this.props;\r\n\r\n        const element = event.target;\r\n        if (!element) return;\r\n\r\n        if (onChange) {\r\n            onChange(element.innerText);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\r\n\r\n        return (\r\n            <div className='search-input'>\r\n                <div\r\n                    id='search-inputbox'\r\n                    ref={inputRef}\r\n                    placeholder={hint || t('Search')}\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    onKeyDown={this.handleKeyDown}\r\n                    onKeyUp={this.handleKeyUp}\r\n                    onPaste={this.handlePaste}\r\n                    onInput={this.handleInput}\r\n                    onFocus={onFocus}\r\n                />\r\n                {showIcon && <SearchIcon className='search-input-icon' />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearchInput.propTypes = {\r\n    inputRef: PropTypes.object,\r\n    hint: PropTypes.string,\r\n    showIcon: PropTypes.bool,\r\n    onBackspace: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    onFocus: PropTypes.func,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nSearchInput.defaultProps = {\r\n    showIcon: true\r\n}\r\n\r\nexport default withTranslation()(SearchInput);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MainMenuButton from './MainMenuButton';\r\nimport SearchInput from './Search/SearchInput';\r\nimport { isAuthorizationReady } from '../../Utils/Common';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport '../ColumnMiddle/Header.css';\r\n\r\nclass DialogsHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n\r\n        this.state = {\r\n            authorizationState: AppStore.getAuthorizationState(),\r\n            open: false\r\n        };\r\n    }\r\n\r\n    setInitQuery(query) {\r\n        const { onSearchTextChange } = this.props;\r\n\r\n        const searchInput = this.searchInputRef.current;\r\n        if (searchInput) {\r\n            searchInput.innerText = query;\r\n            if (searchInput.childNodes.length > 0) {\r\n                const range = document.createRange();\r\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\r\n                range.collapse(true);\r\n\r\n                const selection = window.getSelection();\r\n                selection.removeAllRanges();\r\n                selection.addRange(range);\r\n            }\r\n            searchInput.focus();\r\n            onSearchTextChange(query);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { openSearch } = this.props;\r\n\r\n        if (openSearch !== prevProps.openSearch) {\r\n            if (openSearch) {\r\n                this.focusInput();\r\n            } else {\r\n                const searchInput = this.searchInputRef.current;\r\n                if (searchInput) {\r\n                    searchInput.innerText = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    focusInput() {\r\n        const searchInput = this.searchInputRef.current;\r\n        if (searchInput) {\r\n            searchInput.focus();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.popup) {\r\n            this.focusInput();\r\n        }\r\n\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n    }\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    handleSearch = () => {\r\n        const { onSearch, openSearch } = this.props;\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        onSearch(!openSearch);\r\n    };\r\n\r\n    handleSearchTextChange = () => {\r\n        const { onSearchTextChange } = this.props;\r\n\r\n        const element = this.searchInputRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        onSearchTextChange(innerText);\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.handleSearch();\r\n    };\r\n\r\n    handleFocus = () => {\r\n        this.handleSearch();\r\n    };\r\n\r\n    render() {\r\n        const { openSearch, timeout, popup } = this.props;\r\n\r\n        let content = null;\r\n        let showBack = false;\r\n        if (openSearch) {\r\n            showBack = true;\r\n            content = (\r\n                <SearchInput\r\n                    inputRef={this.searchInputRef}\r\n                    onChange={this.handleSearchTextChange}\r\n                    onClose={this.handleCloseSearch}\r\n                />\r\n            );\r\n        } else {\r\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\r\n        }\r\n\r\n        return (\r\n            <div className='header-master'>\r\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\r\n                {content}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDialogsHeader.propTypes = {\r\n    openSearch: PropTypes.bool.isRequired,\r\n    onClick: PropTypes.func,\r\n    onSearch: PropTypes.func.isRequired,\r\n    onSearchTextChange: PropTypes.func.isRequired,\r\n    timeout: PropTypes.bool,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nexport default DialogsHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport Animator from '../../Utils/Animatior';\r\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\r\nimport { openChatList } from '../../Actions/Chat';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport FilterStore from '../../Stores/FilterStore';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport './Filters.css';\r\n\r\nclass Filters extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.filterRef = new Map();\r\n        this.filtersRef = React.createRef();\r\n        this.filterSelectionRef = React.createRef();\r\n\r\n        const { isSmallWidth } = AppStore;\r\n        const { filters, chatList } = FilterStore;\r\n\r\n        this.state = {\r\n            isSmallWidth,\r\n            filters,\r\n            chatList\r\n        };\r\n\r\n        this.onWindowResize = throttle(this.onWindowResize, 250);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.observeResize();\r\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\r\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\r\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\r\n\r\n        this.setSelection();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.unobserveResize();\r\n        this.observeResize();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unobserveResize();\r\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\r\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\r\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\r\n    }\r\n\r\n    hasObserver = () => {\r\n        return 'ResizeObserver' in window;\r\n    };\r\n\r\n    observeResize() {\r\n        if (!this.hasObserver()) return;\r\n        const filters = this.filtersRef.current;\r\n        if (!filters) return;\r\n\r\n        const observer = new ResizeObserver(this.onWindowResize);\r\n        observer.observe(filters);\r\n\r\n        this.resizeObserver = { observer, filters }\r\n    }\r\n\r\n    unobserveResize() {\r\n        if (!this.hasObserver()) return;\r\n        if (!this.resizeObserver) return;\r\n\r\n        const { observer, filters } = this.resizeObserver;\r\n        if (!observer) return;\r\n        if (!filters) return;\r\n\r\n        observer.unobserve(filters);\r\n    }\r\n\r\n    onClientUpdateLanguageChange = update => {\r\n        if (!this.hasObserver()) this.setSelection(false);\r\n    };\r\n\r\n    onClientUpdateCacheLoaded = update => {\r\n        const { filters } = this.state;\r\n        if (filters) return;\r\n\r\n        const { filters: cachedFilters } = CacheStore;\r\n        if (!cachedFilters) return;\r\n\r\n        this.setState({\r\n            filters: cachedFilters\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection(false);\r\n        });\r\n    };\r\n\r\n    onWindowResize = () => {\r\n        this.setSelection(true);\r\n    };\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        this.setState({\r\n            isSmallWidth\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection(false);\r\n        });\r\n    };\r\n\r\n    setSelection = (transition = true) => {\r\n        const { chatList, filters, isSmallWidth } = this.state;\r\n\r\n        const scroll = this.filtersRef.current;\r\n        const padding = 3;\r\n\r\n        let item = null;\r\n        let left = 9;\r\n        if (chatList['@type'] === 'chatListMain') {\r\n            const main = this.filterRef.get('chatListMain');\r\n            if (main){\r\n                item = main.firstChild;\r\n                left = item.offsetLeft;\r\n            }\r\n        } else if (chatList['@type'] === 'chatListFilter') {\r\n            for (let i = 0; i < filters.length; i++) {\r\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\r\n                if (filters[i].id === chatList.chat_filter_id) {\r\n                    item = filter.firstChild;\r\n                    left = item.offsetLeft;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (!item) return;\r\n\r\n        const filterSelection = this.filterSelectionRef.current;\r\n        if (filterSelection) {\r\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\r\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\r\n        }\r\n\r\n        if (item && transition){\r\n            const { animator } = this;\r\n\r\n            if (animator) {\r\n                animator.stop();\r\n            }\r\n\r\n            this.animator = new Animator(250, [\r\n                {\r\n                    from: scroll.scrollLeft,\r\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\r\n                    func: left => (scroll.scrollLeft = left)\r\n                }\r\n            ]);\r\n\r\n            setTimeout(() => {\r\n                if (!this.animator) return;\r\n\r\n                this.animator.start();\r\n            }, 0);\r\n\r\n\r\n            // item.scrollIntoView();\r\n        }\r\n    };\r\n\r\n    onUpdateChatFilters = update => {\r\n        const { chatList } = this.state;\r\n        const { filters } = FilterStore;\r\n\r\n        this.setState({\r\n            filters\r\n        }, () => {\r\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\r\n                this.handleMainClick();\r\n            } else {\r\n                if (!this.hasObserver()) this.setSelection();\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatList = update => {\r\n        const { chatList } = FilterStore;\r\n\r\n        this.setState({\r\n            chatList\r\n        }, () => {\r\n            if (!this.hasObserver()) this.setSelection();\r\n        });\r\n    };\r\n\r\n    handleMainClick = event => {\r\n        if (event && event.button !== 0) return;\r\n\r\n        openChatList({ '@type': 'chatListMain' });\r\n    };\r\n\r\n    handleFilterClick = (event, id) => {\r\n        if (event && event.button !== 0) return;\r\n\r\n        openChatList({ '@type': 'chatListFilter', chat_filter_id: id });\r\n    };\r\n\r\n    handleWheel = event => {\r\n        if (!event.deltaY) {\r\n            return;\r\n        }\r\n\r\n        event.currentTarget.scrollLeft += event.deltaY;\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { filters, chatList, isSmallWidth } = this.state;\r\n\r\n        if (!filters) return null;\r\n        if (!filters.length) return null;\r\n\r\n        this.filterRef = new Map();\r\n        return (\r\n            <div className='tabs'>\r\n                <div className='tabs-bottom-border'/>\r\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\r\n                    <div\r\n                        ref={r => this.filterRef.set('chatListMain', r)}\r\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\r\n                        onMouseDown={this.handleMainClick}\r\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\r\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\r\n                    </div>\r\n                    {filters.map(x => (\r\n                        <div\r\n                            key={x.id}\r\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\r\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\r\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\r\n                            title={isSmallWidth ? x.title : null}>\r\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\r\n                        </div>))}\r\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nFilters.propTypes = {\r\n\r\n};\r\n\r\nexport default withTranslation()(Filters);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '../Tile/Dialog';\r\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\r\nimport { scrollTop } from '../../Utils/DOM';\r\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\r\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './DialogsList.css';\r\nimport FilterStore from '../../Stores/FilterStore';\r\nimport DialogsHeader from './DialogsHeader';\r\nimport Filters from './Filters';\r\n\r\nclass DialogListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId, chatList, style, hidden } = this.props;\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatList !== chatList) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.hidden !== hidden) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            // console.log('[vl] UserListItem.shouldUpdate true style');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, chatList, hidden, style } = this.props;\r\n\r\n        return (\r\n            <div className='dialog-list-item' style={style}>\r\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass DialogsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        window._m = new Map();\r\n        this.hiddenChats = new Map();\r\n\r\n        this.listRef = React.createRef();\r\n\r\n        const { authorizationState } = AppStore;\r\n\r\n        this.state = {\r\n            authorizationState,\r\n            chats: null,\r\n            fistSliceLoaded: false,\r\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\r\n            params: {\r\n                loading: false,\r\n                completed: false\r\n            }\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\r\n        const { chats, chatList } = this.state;\r\n\r\n        if (nextProps.theme !== theme) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.open !== open) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.items !== items) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.cacheItems !== cacheItems) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showArchive !== showArchive) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.archiveTitle !== archiveTitle) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chats !== chats) {\r\n            return true;\r\n        }\r\n\r\n        // if (nextState.chatList !== chatList) {\r\n        //     return true;\r\n        // }\r\n\r\n        return false;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { current: list } = this.listRef;\r\n        if (!list) return { scrollTop: 0 };\r\n\r\n        return { scrollTop: list.scrollTop };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadFirstSlice();\r\n\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n\r\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\r\n\r\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\r\n\r\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n\r\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\r\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\r\n\r\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\r\n\r\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onClientUpdateChatList = update => {\r\n        const { chatList } = update;\r\n\r\n        if (chatListEquals(this.state.chatList, chatList)) {\r\n            this.scrollToTop();\r\n        } else {\r\n            this.setState({\r\n                chatList,\r\n                params: {\r\n                    loading: false,\r\n                    completed: false\r\n                }\r\n            }, () => {\r\n                this.loadFirstSlice();\r\n            });\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        // const { supegroup, prevSupergroup } = update;\r\n        //\r\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\r\n        //     return;\r\n        // }\r\n\r\n\r\n    };\r\n\r\n    onClientUpdateLeaveChat = update => {\r\n        const { inProgress, chatId } = update;\r\n\r\n        if (inProgress) {\r\n            this.hiddenChats.set(chatId, chatId);\r\n        } else {\r\n            this.hiddenChats.delete(chatId);\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        const { authorization_state: authorizationState } = update;\r\n\r\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\r\n    };\r\n\r\n    onFastUpdatingComplete = update => {\r\n        this.onLoadNext(true);\r\n    };\r\n\r\n    loadFirstSlice = async () => {\r\n        const { authorizationState } = this.state;\r\n        if (!isAuthorizationReady(authorizationState)) return;\r\n\r\n        await FileStore.initDB(() => this.onLoadNext(true));\r\n    };\r\n\r\n    saveCache = () => {\r\n        const { onSaveCache, type } = this.props;\r\n        const { chatList } = this.state;\r\n        if (type !== 'chatListMain') return;\r\n        if (chatList['@type'] !== 'chatListMain') return;\r\n\r\n        if (onSaveCache) onSaveCache();\r\n    };\r\n\r\n    onUpdateChatPosition = update => {\r\n        const { chatList } = this.state;\r\n        const { position } = update;\r\n\r\n        if (!chatListEquals(chatList, position.list)) {\r\n            return;\r\n        }\r\n\r\n        this.onUpdateChatOrder(update);\r\n    };\r\n\r\n    onUpdateChatOrder = update => {\r\n        const { chats, chatList, params } = this.state;\r\n        if (!chats) return;\r\n\r\n        const { loading } = params;\r\n        if (loading && !chats.length) return;\r\n\r\n        const { chat_id } = update;\r\n\r\n        const chat = ChatStore.get(chat_id);\r\n        if (!chat) {\r\n            return;\r\n        }\r\n\r\n        if (!hasChatList(chat_id, chatList)) {\r\n            return;\r\n        }\r\n\r\n        const order = getChatOrder(chat_id, chatList);\r\n        const currentIndex = chats.findIndex(x => x === chat_id);\r\n        if (currentIndex === -1 && order === '0') {\r\n            return;\r\n        }\r\n\r\n        const chatIds = [];\r\n        for (let i = 0; i < chats.length; i++) {\r\n            const chat = ChatStore.get(chats[i]);\r\n            const chatOrder = getChatOrder(chats[i], chatList);\r\n            if (chat && chatOrder !== '0') {\r\n                chatIds.push(chat.id);\r\n            }\r\n        }\r\n\r\n        const newChatIds = [];\r\n        if (order === '0') {\r\n            // unselect deleted chat\r\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\r\n                TdLibController.setChatId(0);\r\n                changeChatDetailsVisibility(false);\r\n            }\r\n        } else {\r\n            if (currentIndex === -1) {\r\n                if (loading) {\r\n                    console.error(`[vl] skip ${update['@type']}`, { id: chat_id, title: ChatStore.get(chat_id).title, chat: ChatStore.get(chat_id) });\r\n                    window._m.set(chat_id, chat_id);\r\n                    // TODO: check and add if within loaded part\r\n                } else {\r\n                    newChatIds.push(chat_id);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.reorderChats(chatIds, newChatIds, () => {\r\n            this.loadChatContents(newChatIds);\r\n            this.saveCache();\r\n        });\r\n    };\r\n\r\n    reorderChats(chatIds, newChatIds = [], callback) {\r\n        const { chatList } = this.state;\r\n\r\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\r\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\r\n        });\r\n\r\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        // console.log('[vl] reorderChats', orderedChatIds);\r\n        this.setState({ chats: orderedChatIds }, callback);\r\n    }\r\n\r\n    static isDifferentOrder(oldChatIds, newChatIds) {\r\n        if (oldChatIds.length === newChatIds.length) {\r\n            for (let i = 0; i < oldChatIds.length; i++) {\r\n                if (oldChatIds[i] !== newChatIds[i]) return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    handleScroll = () => {\r\n        // console.log('[vl] onScroll');\r\n        const { current } = this.listRef;\r\n        if (!current) return;\r\n\r\n        const list = current.getListRef().current;\r\n        if (!list) return;\r\n\r\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\r\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\r\n            this.onLoadPrev();\r\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\r\n            // console.log(`[vl] onScroll onLoadNext`);\r\n            this.onLoadNext();\r\n        }\r\n    };\r\n\r\n    onLoadPrev() {\r\n\r\n    }\r\n\r\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\r\n        const { type } = this.props;\r\n        const { chats, chatList, params } = this.state;\r\n\r\n        // console.log('[folders] onLoadNext', chatList, limit);\r\n        if (params.loading) {\r\n            // console.log('[folders] onLoadNext cancel loading', chatList);\r\n            return;\r\n        }\r\n\r\n        if (params.completed) {\r\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\r\n            return;\r\n        }\r\n\r\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\r\n        let offsetChatId = 0;\r\n        let offsetChat = null;\r\n        if (!replace && chats && chats.length > 0) {\r\n            offsetChat = ChatStore.get(chats[chats.length - 1]);\r\n            if (offsetChat) {\r\n                offsetOrder = getChatOrder(offsetChat.id, chatList);\r\n                offsetChatId = offsetChat.id;\r\n            }\r\n        }\r\n\r\n        if (type === 'chatListMain') console.log('[vl] GETCHATS start', type, offsetOrder, offsetChatId, offsetChat);\r\n        params.loading = true;\r\n        const result = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: chatList,\r\n            offset_chat_id: offsetChatId,\r\n            offset_order: offsetOrder,\r\n            limit: CHAT_SLICE_LIMIT\r\n        }).finally(() => {\r\n            params.loading = false;\r\n            if (replace) {\r\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\r\n            }\r\n        });\r\n        if (type === 'chatListMain') console.log('[vl] GETCHATS stop', replace, type, result);\r\n\r\n        if (params !== this.state.params) {\r\n            // console.log('[folders] onLoadNext cancel', chatList);\r\n            return;\r\n        }\r\n\r\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\r\n            result.chat_ids.shift();\r\n        }\r\n\r\n        params.completed = !result.chat_ids.length;\r\n\r\n        if (replace) {\r\n            this.replaceChats(result.chat_ids, () => {\r\n                this.loadChatContents(result.chat_ids);\r\n                this.saveCache();\r\n\r\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\r\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\r\n                }\r\n\r\n                const list = this.listRef.current.getListRef().current;\r\n                if (!list) return;\r\n                list.scrollTop = 0;\r\n            });\r\n        } else {\r\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\r\n            this.appendChats(result.chat_ids, () => {\r\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\r\n                this.loadChatContents(result.chat_ids);\r\n\r\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\r\n                    this.onLoadNext(false, limit - result.chat_ids.length);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    loadChatContents(chatIds) {\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chatIds);\r\n    }\r\n\r\n    appendChats(chatIds, callback) {\r\n        if (chatIds.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        const { chats } = this.state;\r\n\r\n        const newChats = (chats || []).concat(chatIds);\r\n        this.setState({ chats: newChats }, callback);\r\n    }\r\n\r\n    replaceChats(chats, callback) {\r\n        this.setState({ chats }, callback);\r\n    }\r\n\r\n    scrollToTop() {\r\n        const list = this.listRef.current.getListRef().current;\r\n\r\n        scrollTop(list);\r\n    }\r\n\r\n    renderItem = ({ index, style }, source) => {\r\n        const { chatList } = this.state;\r\n        const x = source[index];\r\n\r\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\r\n\r\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\r\n    };\r\n\r\n    render() {\r\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\r\n        const { chats, chatList } = this.state;\r\n\r\n        // console.log('[dl] render', type, open, chats, cacheChats);\r\n        if (!open) return null;\r\n\r\n        this.source = [];\r\n        let dialogs = null;\r\n        if (chats) {\r\n            let lastPinnedId = 0;\r\n            chats.forEach(x => {\r\n                if (isChatPinned(x, chatList)) {\r\n                    lastPinnedId = x;\r\n                }\r\n            });\r\n            this.source = chats;\r\n        } else if (cacheItems) {\r\n            let lastPinnedId = 0;\r\n            cacheItems.forEach(x => {\r\n                if (isChatPinned(x, chatList)) {\r\n                    lastPinnedId = x;\r\n                }\r\n            });\r\n            this.source = cacheItems.map(x => x.id);\r\n            // dialogs = cacheItems.map(x => (\r\n            //     <Dialog\r\n            //         key={x.id}\r\n            //         chatId={x.id}\r\n            //         isLastPinned={x === lastPinnedId}\r\n            //         hidden={this.hiddenChats.has(x.id)}\r\n            //     />\r\n            // ));\r\n        } else {\r\n            if (chatList['@type'] === 'chatListMain') {\r\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\r\n            }\r\n        }\r\n\r\n        window._chats = chats;\r\n        window._c = new Map((chats || []).map(i => [i, i]));\r\n        const ids = [];\r\n        window._m.forEach((value, key) => {\r\n            if (!window._c.has(key)) {\r\n                ids.push(key);\r\n            }\r\n        });\r\n        console.log('[vl] render', (chats || []).length, window._c.size, window._m.size, ids.length,\r\n            //ids.map(x => ChatStore.get(x))\r\n        );\r\n\r\n        return (\r\n            <VirtualizedList\r\n                ref={this.listRef}\r\n                className='dialogs-list'\r\n                source={this.source}\r\n                rowHeight={76}\r\n                overScanCount={20}\r\n                renderItem={x => this.renderItem(x, this.source)}\r\n                onScroll={this.handleScroll}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nDialogsList.propTypes = {\r\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\r\n    showArchive: PropTypes.bool,\r\n    archiveTitle: PropTypes.string,\r\n    cacheItems: PropTypes.array,\r\n    items: PropTypes.array\r\n};\r\n\r\nexport default DialogsList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport DialogsList from './DialogsList';\r\n\r\nclass Archive extends React.Component {\r\n    handleClick = () => {\r\n        const { innerListRef } = this.props;\r\n        if (!innerListRef) return;\r\n\r\n        const { current: list } = innerListRef;\r\n        if (!list) return;\r\n\r\n        list.scrollToTop();\r\n    };\r\n\r\n    render() {\r\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer' onClick={this.handleClick}>\r\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='dialogs-content'>\r\n                    <DialogsList\r\n                        type='chatListArchive'\r\n                        ref={innerListRef}\r\n                        cacheItems={cacheItems}\r\n                        open={true}\r\n                        items={items}\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nArchive.propTypes = {};\r\n\r\nexport default withTranslation()(Archive);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ChatTile from './ChatTile';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './TopChat.css';\r\n\r\nclass TopChat extends React.PureComponent {\r\n    state = {\r\n        contextMenu: false,\r\n        top: 0,\r\n        left: 0\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleDelete = event => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\r\n        const { contextMenu, top, left } = this.state;\r\n\r\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\r\n\r\n        return (\r\n            <>\r\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\r\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\r\n                    <div className='top-chat-title'>{shortTitle}</div>\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nTopChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func,\r\n    onDelete: PropTypes.func,\r\n    showSavedMessages: PropTypes.bool\r\n};\r\n\r\nTopChat.defaultProps = {\r\n    showSavedMessages: true\r\n};\r\n\r\nexport default withTranslation()(TopChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Chat from './Chat';\r\nimport './RecentlyFoundChat.css';\r\n\r\nclass RecentlyFoundChat extends React.PureComponent {\r\n    state = {\r\n        contextMenu: false,\r\n        top: 0,\r\n        left: 0\r\n    };\r\n\r\n    handleContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    handleDelete = event => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, onClick } = this.props;\r\n        const { contextMenu, top, left } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <ListItem\r\n                    button\r\n                    className='recently-found-chat'\r\n                    onClick={onClick}\r\n                    onContextMenu={this.handleContextMenu}>\r\n                    <Chat chatId={chatId} />\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nRecentlyFoundChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onSelect: PropTypes.func,\r\n    onDelete: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(RecentlyFoundChat);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Chat from './Chat';\r\nimport { getChatUsername } from '../../Utils/Chat';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './FoundPublicChat.css';\r\n\r\nclass FoundPublicChat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nextChatId: AppStore.getChatId(),\r\n            previousChatId: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId } = this.props;\r\n\r\n        if (nextState.nextChatId === chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.previousChatId === chatId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { nextChatId, previousChatId } = update;\r\n\r\n        this.setState({\r\n            nextChatId: nextChatId,\r\n            previousChatId: previousChatId\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClick } = this.props;\r\n        const { nextChatId: selectedChatId } = this.state;\r\n\r\n        const username = getChatUsername(chatId);\r\n\r\n        return (\r\n            <ListItem\r\n                button\r\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\r\n                onClick={onClick}>\r\n                <div className='found-public-chat-wrapper'>\r\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\r\n                </div>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nFoundPublicChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default FoundPublicChat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ChatTile from './ChatTile';\r\nimport UserTile from './UserTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\r\nimport { getContent } from '../../Utils/Message';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './FoundMessage.css';\r\n\r\nclass FoundMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nextChatId: AppStore.getChatId(),\r\n            nextMessageId: AppStore.getMessageId()\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n    }\r\n\r\n    onClientUpdateChatId = update => {\r\n        this.setState({\r\n            ...update\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\r\n        const selectedChatId = this.state.nextChatId;\r\n        const selectedMessageId = this.state.nextMessageId;\r\n        const message = MessageStore.get(chatId, messageId);\r\n\r\n        const { sender } = message;\r\n\r\n        const date = getMessageDate(message);\r\n        const senderName = getMessageSenderName(message, t);\r\n        const senderFullName = getMessageSenderFullName(message, t);\r\n        const content = getContent(message, t) || '\\u00A0';\r\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\r\n\r\n        const tile =\r\n            sender.user_id && chatSearch ? (\r\n                <UserTile userId={sender.user_id} dialog />\r\n            ) : (\r\n                <ChatTile chatId={chatId} dialog />\r\n            );\r\n\r\n        return (\r\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\r\n                <div className='dialog-wrapper'>\r\n                    {tile}\r\n                    <div className='dialog-inner-wrapper'>\r\n                        <div className='tile-first-row'>\r\n                            {chatSearch && senderFullName ? (\r\n                                <div className='dialog-title'>{senderFullName}</div>\r\n                            ) : (\r\n                                <DialogTitle chatId={chatId} />\r\n                            )}\r\n                            <div className='dialog-meta'>{date}</div>\r\n                        </div>\r\n                        <div className='tile-second-row'>\r\n                            <div className='dialog-content'>\r\n                                {\r\n                                    <>\r\n                                        {!chatSearch && senderName && (\r\n                                            <span className='dialog-content-accent'>{senderName}: </span>\r\n                                        )}\r\n                                        {content}\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nFoundMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    chatSearch: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(FoundMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './SectionHeader.css';\r\n\r\nfunction SectionHeader({ command, multiline, onClick, children }) {\r\n    return (\r\n        <div className='section-header'>\r\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\r\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\r\n        </div>\r\n    );\r\n}\r\n\r\nSectionHeader.propTypes = {\r\n    command: PropTypes.string,\r\n    multiline: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default SectionHeader;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Chat from '../../Tile/Chat';\r\nimport TopChat from '../../Tile/TopChat';\r\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\r\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\r\nimport FoundMessage from '../../Tile/FoundMessage';\r\nimport SectionHeader from '../SectionHeader';\r\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\r\nimport { filterDuplicateMessages } from '../../../Utils/Message';\r\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\r\nimport { orderCompare } from '../../../Utils/Common';\r\nimport { getChatOrder } from '../../../Utils/Chat';\r\nimport { modalManager } from '../../../Utils/Modal';\r\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Search.css';\r\n\r\nclass Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n        this.listRef = React.createRef();\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { text } = this.props;\r\n\r\n        this.searchOrLoadContent(text);\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape':\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                event.target.blur();\r\n\r\n                this.handleClose();\r\n                break;\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId, text } = this.props;\r\n\r\n        if (prevProps.text !== text) {\r\n            this.searchOrLoadContent(text);\r\n        } else if (prevProps.chatId !== chatId) {\r\n            this.searchOrLoadContent(text);\r\n        }\r\n    }\r\n\r\n    searchOrLoadContent(text) {\r\n        const trimmedText = text ? text.trim() : '';\r\n\r\n        if (!trimmedText) {\r\n            this.loadContent();\r\n        } else {\r\n            this.searchText(trimmedText);\r\n        }\r\n    }\r\n\r\n    concatSearchResults = results => {\r\n        const arr = [];\r\n        const map = new Map();\r\n\r\n            for (let i = 0; i < results.length; i++) {\r\n            let result = results[i] && results[i].chat_ids;\r\n            if (result) {\r\n                for (let j = 0; j < result.length; j++) {\r\n                    if (!map.has(result[j])) {\r\n                        map.set(result[j], result[j]);\r\n                        arr.push(result[j]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        arr.sort((a, b) => {\r\n            return orderCompare(getChatOrder(b), getChatOrder(a));\r\n        });\r\n\r\n        return arr;\r\n    };\r\n\r\n    searchText = async text => {\r\n        this.sessionId = new Date();\r\n        this.text = text;\r\n        const sessionId = this.sessionId;\r\n        let store = null;\r\n\r\n        // console.log('[se] searchText=' + text);\r\n\r\n        const { chatId } = this.props;\r\n        const { savedMessages } = this.state;\r\n\r\n        if (!chatId) {\r\n            const promises = [];\r\n            const localPromise = TdLibController.send({\r\n                '@type': 'searchChats',\r\n                query: text,\r\n                limit: 100\r\n            });\r\n            promises.push(localPromise);\r\n\r\n            const latinText = getLatinInput(text);\r\n            if (latinText && latinText !== text) {\r\n                const latinLocalPromise = TdLibController.send({\r\n                    '@type': 'searchChats',\r\n                    query: latinText,\r\n                    limit: 100\r\n                });\r\n                promises.push(latinLocalPromise);\r\n            }\r\n\r\n            const cyrillicText = getCyrillicInput(text);\r\n            if (cyrillicText && cyrillicText !== text) {\r\n                const cyrillicLocalPromise = TdLibController.send({\r\n                    '@type': 'searchChats',\r\n                    query: cyrillicText,\r\n                    limit: 100\r\n                });\r\n                promises.push(cyrillicLocalPromise);\r\n            }\r\n\r\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\r\n            const local = this.concatSearchResults(results);\r\n\r\n            if (sessionId !== this.sessionId) {\r\n                return;\r\n            }\r\n\r\n            if (savedMessages) {\r\n                const { t } = this.props;\r\n\r\n                const searchText = text.toUpperCase();\r\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\r\n\r\n                if (\r\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\r\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\r\n                ) {\r\n                    local.splice(0, 0, savedMessages.id);\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                top: null,\r\n                recentlyFound: null,\r\n                local: local\r\n            });\r\n\r\n            store = FileStore.getStore();\r\n            loadChatsContent(store, local);\r\n\r\n            let trimmedText = text.trim();\r\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\r\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\r\n                const globalPromises = [];\r\n\r\n                const globalPromise = TdLibController.send({\r\n                    '@type': 'searchPublicChats',\r\n                    query: trimmedText\r\n                });\r\n                globalPromises.push(globalPromise);\r\n\r\n                if (latinText) {\r\n                    let latinTrimmedText = latinText.trim();\r\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\r\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\r\n                        const globalLatinPromise = TdLibController.send({\r\n                            '@type': 'searchPublicChats',\r\n                            query: latinTrimmedText\r\n                        });\r\n                        globalPromises.push(globalLatinPromise);\r\n                    }\r\n                }\r\n\r\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\r\n                const global = this.concatSearchResults(globalResults);\r\n\r\n                if (sessionId !== this.sessionId) {\r\n                    return;\r\n                }\r\n\r\n                this.setState({\r\n                    global\r\n                });\r\n\r\n                store = FileStore.getStore();\r\n                loadChatsContent(store, global);\r\n            } else {\r\n                this.setState({\r\n                    global: null\r\n                });\r\n            }\r\n        }\r\n\r\n        let messages = [];\r\n        if (chatId) {\r\n            messages = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: text,\r\n                sender_user_id: 0,\r\n                from_message_id: 0,\r\n                offset: 0,\r\n                limit: 50,\r\n                filter: null\r\n            });\r\n        } else {\r\n            messages = await TdLibController.send({\r\n                '@type': 'searchMessages',\r\n                chat_list: { '@type': 'chatListMain' },\r\n                query: text,\r\n                offset_date: 0,\r\n                offset_chat_id: 0,\r\n                offset_message_id: 0,\r\n                limit: 50\r\n            });\r\n        }\r\n\r\n        MessageStore.setItems(messages.messages);\r\n\r\n        let linkMessage = null;\r\n        if (!chatId) {\r\n            try {\r\n                const messageLinkInfo = await TdLibController.send({\r\n                    '@type': 'getMessageLinkInfo',\r\n                    url: text\r\n                });\r\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\r\n\r\n                MessageStore.setItems([messageLinkInfo.message]);\r\n\r\n                linkMessage = messageLinkInfo;\r\n            } catch (error) {\r\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\r\n            }\r\n        }\r\n\r\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\r\n\r\n        this.setState({\r\n            messages,\r\n            linkMessage\r\n        });\r\n\r\n        const chats = new Map();\r\n        const users = new Map();\r\n        for (let i = 0; i < messages.messages.length; i++) {\r\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\r\n            if (messages.messages[i].sender.user_id) {\r\n                users.set(messages.messages[i].sender.user_id, messages.messages[i].sender.user_id);\r\n            }\r\n        }\r\n\r\n        if (linkMessage) {\r\n            const { chat_id, message } = linkMessage;\r\n\r\n            chats.set(chat_id, chat_id);\r\n            if (message) {\r\n                const { sender } = message;\r\n                if (sender && sender.user_id) {\r\n                    users.set(sender.user_id, sender.user_id);\r\n                }\r\n            }\r\n        }\r\n\r\n        store = FileStore.getStore();\r\n        loadChatsContent(store, [...chats.keys()]);\r\n        loadUsersContent(store, [...users.keys()]);\r\n    };\r\n\r\n    loadContent = async () => {\r\n        const { chatId } = this.props;\r\n        if (chatId) {\r\n            this.setState({\r\n                top: null,\r\n                recentlyFound: null,\r\n                local: null,\r\n                global: null,\r\n                messages: null,\r\n                linkMessage: null\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        const topPromise = TdLibController.send({\r\n            '@type': 'getTopChats',\r\n            category: { '@type': 'topChatCategoryUsers' },\r\n            limit: 30\r\n        }).catch(() => {\r\n            return { '@type': 'chats', chat_ids: [] };\r\n        });\r\n\r\n        const recentlyFoundPromise = TdLibController.send({\r\n            '@type': 'searchChats',\r\n            query: '',\r\n            limit: 100\r\n        }).catch(() => {\r\n            return { '@type': 'chats', chat_ids: [] };\r\n        });\r\n\r\n        const savedMessagesPromise = TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: UserStore.getMyId(),\r\n            force: true\r\n        }).catch(error => {});\r\n\r\n        const [top, recentlyFound, savedMessages] = await Promise.all([\r\n            topPromise,\r\n            recentlyFoundPromise,\r\n            savedMessagesPromise\r\n        ]);\r\n\r\n        this.setState({\r\n            top,\r\n            recentlyFound,\r\n            savedMessages,\r\n            local: null,\r\n            global: null,\r\n            messages: null,\r\n            linkMessage: null\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, top.chat_ids);\r\n        loadChatsContent(store, recentlyFound.chat_ids);\r\n    };\r\n\r\n    handleClearRecentlyFound = event => {\r\n        event.stopPropagation();\r\n\r\n        TdLibController.send({\r\n            '@type': 'clearRecentlyFoundChats'\r\n        });\r\n\r\n        this.setState({ recentlyFound: null });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\r\n        const { onSelectMessage } = this.props;\r\n\r\n        if (addToRecent) {\r\n            TdLibController.send({\r\n                '@type': 'addRecentlyFoundChat',\r\n                chat_id: chatId\r\n            });\r\n        }\r\n\r\n        onSelectMessage(chatId, messageId, keepOpen);\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            this.onLoadPrevious();\r\n        }\r\n    };\r\n\r\n    getOffset = messages => {\r\n        const length = messages ? messages.messages.length : 0;\r\n\r\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\r\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\r\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\r\n\r\n        return {\r\n            offset_date: offsetDate,\r\n            offset_chat_id: offsetChatId,\r\n            offset_message_id: offsetMessageId\r\n        };\r\n    };\r\n\r\n    concatMessages = (messages, result) => {\r\n        if (!result) return messages;\r\n        if (!result.messages.length) return messages;\r\n\r\n        if (!messages) return result;\r\n        if (!messages.messages.length) return result;\r\n\r\n        return {\r\n            total_count: result.total_count,\r\n            messages: messages.messages.concat(result.messages)\r\n        };\r\n    };\r\n\r\n    onLoadPrevious = async () => {\r\n        if (this.loading) return;\r\n\r\n        const { chatId } = this.props;\r\n\r\n        const sessionId = this.sessionId;\r\n\r\n        const { messages } = this.state;\r\n\r\n        const offset = this.getOffset(messages);\r\n\r\n        this.loading = true;\r\n        let result = [];\r\n        if (chatId) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: this.text,\r\n                sender_user_id: 0,\r\n                from_message_id: offset.offset_message_id,\r\n                limit: 50,\r\n                filter: null\r\n            });\r\n        } else {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchMessages',\r\n                chat_list: { '@type': 'chatListMain' },\r\n                query: this.text,\r\n                ...offset,\r\n                limit: 50\r\n            });\r\n        }\r\n        this.loading = false;\r\n\r\n        filterDuplicateMessages(result, messages ? messages.messages : []);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            messages: this.concatMessages(messages, result)\r\n        });\r\n\r\n        const chats = new Map();\r\n        const users = new Map();\r\n        for (let i = 0; i < result.messages.length; i++) {\r\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\r\n            if (result.messages[i].sender.user_id) {\r\n                users.set(result.messages[i].sender.user_id, result.messages[i].sender.user_id);\r\n            }\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, [...chats.keys()]);\r\n        loadUsersContent(store, [...users.keys()]);\r\n    };\r\n\r\n    handleTopChatsScroll = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose();\r\n    };\r\n\r\n    handleDeleteRecentlyFoundChat = async chatId => {\r\n        if (!chatId) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'removeRecentlyFoundChat',\r\n            chat_id: chatId\r\n        });\r\n\r\n        const { recentlyFound } = this.state;\r\n        if (!recentlyFound) return;\r\n\r\n        this.setState({\r\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\r\n        });\r\n    };\r\n\r\n    handleDeleteTopChat = async chatId => {\r\n        if (!chatId) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'removeTopChat',\r\n            chat_id: chatId,\r\n            category: {\r\n                '@type': 'topChatCategoryUsers'\r\n            }\r\n        });\r\n\r\n        const { top } = this.state;\r\n        if (!top) return;\r\n\r\n        this.setState({\r\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const topChats =\r\n            top && top.chat_ids\r\n                ? top.chat_ids.map(x => (\r\n                      <TopChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\r\n                          onDelete={() => this.handleDeleteTopChat(x)}\r\n                      />\r\n                  ))\r\n                : [];\r\n\r\n        const recentlyFoundChats =\r\n            recentlyFound && recentlyFound.chat_ids\r\n                ? recentlyFound.chat_ids.map(x => (\r\n                      <RecentlyFoundChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\r\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\r\n                      />\r\n                  ))\r\n                : [];\r\n\r\n        const localChats = local\r\n            ? local.map(x => (\r\n                  <RecentlyFoundChat\r\n                      key={x}\r\n                      chatId={x}\r\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\r\n                  />\r\n              ))\r\n            : [];\r\n\r\n        const globalChatsMap = new Map();\r\n        const globalChats = global\r\n            ? global.map(x => {\r\n                  globalChatsMap.set(x, x);\r\n\r\n                  return (\r\n                      <FoundPublicChat\r\n                          key={x}\r\n                          chatId={x}\r\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\r\n                      />\r\n                  );\r\n              })\r\n            : [];\r\n\r\n        const globalLinkChat =\r\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\r\n                <FoundPublicChat\r\n                    key={linkMessage.chat_id}\r\n                    chatId={linkMessage.chat_id}\r\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\r\n                />\r\n            ) : null;\r\n\r\n        const globalMessagesMap = new Map();\r\n        const globalMessages =\r\n            messages && messages.messages\r\n                ? messages.messages.map(x => {\r\n                      const key = `${x.chat_id}_${x.id}`;\r\n                      globalMessagesMap.set(key, key);\r\n\r\n                      return (\r\n                          <FoundMessage\r\n                              key={key}\r\n                              chatId={x.chat_id}\r\n                              messageId={x.id}\r\n                              chatSearch={Boolean(chatId)}\r\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\r\n                          />\r\n                      );\r\n                  })\r\n                : [];\r\n\r\n        const globalLinkMessage =\r\n            linkMessage &&\r\n            linkMessage.message &&\r\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\r\n                <FoundMessage\r\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\r\n                    chatId={linkMessage.message.chat_id}\r\n                    messageId={linkMessage.message.id}\r\n                    chatSearch={false}\r\n                    onClick={() =>\r\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\r\n                    }\r\n                />\r\n            ) : null;\r\n\r\n        let count = messages ? messages.total_count : 0;\r\n        if (\r\n            linkMessage &&\r\n            linkMessage.message &&\r\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\r\n        ) {\r\n            count++;\r\n        }\r\n\r\n        let messagesCaption = t('NoMessages');\r\n        if (count) {\r\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\r\n        }\r\n\r\n        return (\r\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\r\n                {chat && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\r\n                            <div className='search-chat-wrapper'>\r\n                                <div className='search-chat-control'>\r\n                                    <Chat chatId={chatId} showStatus={false} />\r\n                                </div>\r\n                                <IconButton\r\n                                    className='header-right-button'\r\n                                    aria-label='Search'\r\n                                    onMouseDown={this.handleClose}>\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {topChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\r\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\r\n                                <div className='search-top-chats-placeholder' />\r\n                                {topChats}\r\n                                <div className='search-top-chats-placeholder' />\r\n                            </div>\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {recentlyFoundChats.length > 0 && (\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\r\n                            {t('Recent')}\r\n                        </SectionHeader>\r\n                        {recentlyFoundChats}\r\n                    </div>\r\n                )}\r\n                {localChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\r\n                            {localChats}\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {globalChats.length > 0 && (\r\n                    <>\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\r\n                            {globalLinkChat}\r\n                            {globalChats}\r\n                        </div>\r\n                        <div className='sidebar-page-section-divider' />\r\n                    </>\r\n                )}\r\n                {(messages || (linkMessage && linkMessage.message)) && (\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{messagesCaption}</SectionHeader>\r\n                        {globalLinkMessage}\r\n                        {globalMessages}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSearch.propTypes = {\r\n    chatId: PropTypes.number,\r\n    text: PropTypes.string,\r\n    onSelectMessage: PropTypes.func.isRequired,\r\n    onClose: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Search);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes, { number } from 'prop-types';\r\nimport { Slide } from '@material-ui/core';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './SidebarPage.css';\r\n\r\nclass SidebarPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape':\r\n                const { onClose } = this.props;\r\n                if (onClose) {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    event.target.blur();\r\n\r\n                    onClose();\r\n                }\r\n                break;\r\n        }\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { open } = this.props;\r\n\r\n        if (prevProps.open !== open) {\r\n            if (open) {\r\n                KeyboardManager.add(this.keyboardHandler);\r\n            } else {\r\n                KeyboardManager.remove(this.keyboardHandler);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { children, open, timeout, onClose } = this.props;\r\n\r\n        return (\r\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\r\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\r\n            </Slide>\r\n        );\r\n    }\r\n}\r\n\r\nSidebarPage.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default SidebarPage;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\r\n    'Folder'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\r\n    'Edit'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\r\n    'LogOut'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\r\n    'More'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\r\nimport MoreIcon from '../../../Assets/Icons/More';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport { modalManager } from '../../../Utils/Modal';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\n\r\nclass SettingsMenuButton extends React.Component {\r\n    state = {\r\n        anchorEl: null,\r\n        open: false\r\n    };\r\n\r\n    handleMenuOpen = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleLogOut = () => {\r\n        this.handleMenuClose();\r\n\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleDone = () => {\r\n        this.handleClose();\r\n        TdLibController.logOut();\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { anchorEl, open } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    className='header-right-button'\r\n                    aria-label='Menu'\r\n                    onClick={this.handleMenuOpen}>\r\n                    <MoreIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}>\r\n                    <MenuItem onClick={this.handleLogOut}>\r\n                        <ListItemIcon>\r\n                            <LogOutIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('LogOut')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={open}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('AreYouSureLogout')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDone} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSettingsMenuButton.propTypes = {};\r\n\r\nexport default withTranslation()(SettingsMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\r\n    'Data'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\r\n    'Language'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport FilterIcon from '../../../Assets/Icons/Folder';\r\nimport Chat from '../../Tile/Chat';\r\nimport EditIcon from '../../../Assets/Icons/Edit';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport SettingsIcon from '../../../Assets/Icons/Settings';\r\nimport SettingsMenuButton from './SettingsMenuButton';\r\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\r\nimport DataIcon from '../../../Assets/Icons/Data';\r\nimport LanguageIcon from '../../../Assets/Icons/Language';\r\nimport packageJson from '../../../../package.json';\r\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport './Main.css';\r\n\r\nclass Main extends React.Component {\r\n\r\n    handleOpenViewer = () => {\r\n        const { chatId } = this.props;\r\n        \r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.photo) return;\r\n\r\n        setProfileMediaViewerContent({ chatId });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            chatId,\r\n            popup,\r\n            t,\r\n            onClose,\r\n            onEditProfile,\r\n            onGeneral,\r\n            onNotifications,\r\n            onPrivacySecurity,\r\n            onLanguage,\r\n            onFilters\r\n        } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { photo } = chat;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Settings')}</span>\r\n                    </div>\r\n                    <SettingsMenuButton />\r\n                </div>\r\n                <div className='sidebar-page-content settings-main-content'>\r\n                    <div className='chat-details-info'>\r\n                        <Chat\r\n                            chatId={chatId}\r\n                            big={true}\r\n                            showStatus={true}\r\n                            showSavedMessages={false}\r\n                            onTileSelect={photo ? this.handleOpenViewer : null}\r\n                        />\r\n                    </div>\r\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\r\n                        <ListItemIcon>\r\n                            <EditIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('EditProfile')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\r\n                        <ListItemIcon>\r\n                            <SettingsIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('GeneralSettings')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\r\n                        <ListItemIcon>\r\n                            <UnmuteIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Notifications')} />\r\n                    </ListItem>\r\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\r\n                        <ListItemIcon>\r\n                            <DataIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('PrivacySettings')} />\r\n                    </ListItem>\r\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\r\n                        <ListItemIcon>\r\n                            <FilterIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Filters')} />\r\n                    </ListItem>\r\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\r\n                        <ListItemIcon>\r\n                            <LanguageIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Language')} />\r\n                    </ListItem>\r\n                    <div className='settings-main-footer'>\r\n                        {packageJson.version}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMain.propTypes = {\r\n    chatId: PropTypes.number,\r\n    popup: PropTypes.bool,\r\n    onClose: PropTypes.func,\r\n    onEditProfile: PropTypes.func,\r\n    onGeneral: PropTypes.func,\r\n    onNotifications: PropTypes.func,\r\n    onPrivacySecurity: PropTypes.func,\r\n    onLanguage: PropTypes.func,\r\n    onFilters: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Main);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\r\n    'AddImage'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Cropper from 'react-cropper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport AddImageIcon from '../../Assets/Icons/AddImage';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport CheckIcon from '../../Assets/Icons/Check';\r\nimport { getFitSize, readImageSize } from '../../Utils/Common';\r\nimport 'cropperjs/dist/cropper.css';\r\nimport './NewChatPhoto.css';\r\n\r\nclass NewChatPhoto extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.attachPhotoRef = React.createRef();\r\n        this.cropperRef = React.createRef();\r\n\r\n        const { defaultURL } = this.props;\r\n\r\n        this.state = {\r\n            blobURL: defaultURL,\r\n            open: false\r\n        }\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n\r\n    handleDone = () => {\r\n        const cropper = this.cropperRef.current;\r\n        if (!cropper) return;\r\n\r\n        cropper.getCroppedCanvas().toBlob(blob => {\r\n            const blobURL = URL.createObjectURL(blob);\r\n\r\n            this.setState({\r\n                blob,\r\n                blobURL\r\n            });\r\n\r\n            const { onChoose } = this.props;\r\n            if (!onChoose) return;\r\n\r\n            onChoose(blob, blobURL);\r\n        }, 'image/jpeg');\r\n\r\n        this.handleCancel();\r\n    };\r\n\r\n    handleAttach = () => {\r\n        this.attachPhotoRef.current.click();\r\n    };\r\n\r\n    handleAttachComplete = async () => {\r\n        const { files } = this.attachPhotoRef.current;\r\n        if (files.length === 0) return;\r\n\r\n        if (files.length === 1) {\r\n            const [ file, ...rest ] = Array.from(files);\r\n            if (!file) return;\r\n\r\n            const [width, height] = await readImageSize(file);\r\n\r\n            this.setState({\r\n                open: true,\r\n                file,\r\n                fileURL: URL.createObjectURL(file),\r\n                width,\r\n                height\r\n            });\r\n        }\r\n\r\n        this.attachPhotoRef.current.value = '';\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { open, width, height, fileURL, blobURL } = this.state;\r\n\r\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\r\n\r\n        return (\r\n            <>\r\n                <div className='new-chat-photo'>\r\n                    { blobURL ? (\r\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\r\n                        ) : (\r\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\r\n                            <AddImageIcon className='new-chat-photo-icon'/>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <input\r\n                    ref={this.attachPhotoRef}\r\n                    className='inputbox-attach-button'\r\n                    type='file'\r\n                    multiple={false}\r\n                    accept='image/*'\r\n                    onChange={this.handleAttachComplete}\r\n                />\r\n                { open && (\r\n                    <Dialog\r\n                        transitionDuration={0}\r\n                        open={true}\r\n                        onClose={this.handleCancel}\r\n                        aria-labelledby='dialog-title'>\r\n                        <div className='header-master'>\r\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\r\n                                <CloseIcon/>\r\n                            </IconButton>\r\n                            <div className='header-status grow cursor-pointer'>\r\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\r\n                            </div>\r\n                        </div>\r\n                        <DialogContent>\r\n                            <Cropper\r\n                                ref={this.cropperRef}\r\n                                src={fileURL}\r\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\r\n                                // Cropper.js options\r\n                                aspectRatio={1}\r\n                                viewMode={3}\r\n                                guides={false} />\r\n                        </DialogContent>\r\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\r\n                            <CheckIcon/>\r\n                        </div>\r\n                    </Dialog>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nNewChatPhoto.propTypes = {\r\n    defaultURL: PropTypes.string,\r\n    onChoose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(NewChatPhoto);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { IconButton } from '@material-ui/core';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport NewChatPhoto from '../NewChatPhoto';\r\nimport { getSrc, loadChatContent } from '../../../Utils/File';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './EditProfile.css';\r\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\r\n\r\nclass EditProfile extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.firstNameRef = React.createRef();\r\n        this.lastNameRef = React.createRef();\r\n        this.bioRef = React.createRef();\r\n        this.usernameRef = React.createRef();\r\n\r\n        const user = UserStore.get(UserStore.getMyId());\r\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\r\n\r\n        this.state = {\r\n            firstName: user ? user.first_name : '',\r\n            lastName: user ? user.last_name : '',\r\n            bio: userFullInfo ? userFullInfo.bio : '',\r\n            username: user ? user.username : '',\r\n            usernameCheck: null\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.setName();\r\n        this.setBio();\r\n        this.setUsername();\r\n    }\r\n\r\n    setUsername() {\r\n        const { username, usernameCheck } = this.state;\r\n        let newUsername = this.usernameRef.current.value;\r\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\r\n            newUsername = newUsername.substr(1);\r\n        }\r\n\r\n        if (username === newUsername) return;\r\n        if (!usernameCheck) return;\r\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setUsername',\r\n            username: newUsername\r\n        });\r\n    }\r\n\r\n    setName() {\r\n        const { firstName, lastName } = this.state;\r\n        const newFirstName = this.firstNameRef.current.value;\r\n        const newLastName = this.lastNameRef.current.value;\r\n\r\n        if (newFirstName === firstName && newLastName === lastName) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.send({\r\n            '@type': 'setName',\r\n            first_name: newFirstName,\r\n            last_name: newLastName\r\n        });\r\n    }\r\n\r\n    setBio() {\r\n        const { bio } = this.state;\r\n        const newBio = this.bioRef.current.value;\r\n        if (newBio === bio) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.send({\r\n            '@type': 'setBio',\r\n            bio: newBio\r\n        });\r\n    }\r\n\r\n    handleUsernameChange = async () => {\r\n        const { chatId } = this.props;\r\n        const { username } = this.state;\r\n        let newUsername = this.usernameRef.current.value;\r\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\r\n            newUsername = newUsername.substr(1);\r\n        }\r\n        if (username === newUsername || newUsername === '') {\r\n            this.setState({\r\n                usernameCheck: null\r\n            });\r\n\r\n            // console.log('[un] checkChatUsername', 'null');\r\n        } else {\r\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\r\n            const result = await TdLibController.send({\r\n                '@type': 'checkChatUsername',\r\n                chat_id: chatId,\r\n                username: newUsername\r\n            });\r\n\r\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\r\n\r\n            let newUsername2 = this.usernameRef.current.value;\r\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\r\n                newUsername2 = newUsername2.substr(1);\r\n            }\r\n            if (newUsername2 === newUsername) {\r\n                this.setState({\r\n                    usernameCheck: result\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleChoosePhoto = async data => {\r\n        const { chatId } = this.props;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'setProfilePhoto',\r\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatContent(store, chatId, true);\r\n    };\r\n\r\n    render() {\r\n        let { chatId, t, onClose } = this.props;\r\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\r\n\r\n        let hasError = false;\r\n        let usernameLabel = t('Username');\r\n        if (usernameCheck) {\r\n            switch (usernameCheck['@type']) {\r\n                case 'checkChatUsernameResultOk': {\r\n                    hasError = false;\r\n                    usernameLabel = 'Username is available';\r\n                    break;\r\n                }\r\n                case 'checkChatUsernameResultPublicChatsTooMuch':\r\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\r\n                case 'checkChatUsernameResultUsernameInvalid': {\r\n                    hasError = true;\r\n                    usernameLabel = 'Invalid username';\r\n                    break;\r\n                }\r\n                case 'checkChatUsernameResultUsernameOccupied': {\r\n                    hasError = true;\r\n                    usernameLabel = 'Username is already taken';\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { photo } = chat;\r\n\r\n        const src = getSrc(photo ? photo.small : null);\r\n        const entities = [];\r\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\r\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('EditProfile')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\r\n                    <div className='edit-profile-name'>\r\n                        <TextField\r\n                            inputRef={this.firstNameRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('FirstName')}\r\n                            defaultValue={firstName}\r\n                        />\r\n                        <TextField\r\n                            inputRef={this.lastNameRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('LastName')}\r\n                            defaultValue={lastName}\r\n                        />\r\n                        <TextField\r\n                            inputRef={this.bioRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('Bio')}\r\n                            defaultValue={bio}\r\n                        />\r\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='edit-profile-username'>\r\n                        <TextField\r\n                            inputRef={this.usernameRef}\r\n                            error={hasError}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={usernameLabel}\r\n                            defaultValue={username}\r\n                            onChange={this.handleUsernameChange}\r\n                        />\r\n                        <div className='edit-profile-hint'>\r\n                            {formattedText}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(EditProfile);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\r\n    'Add'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\r\n    'NewPrivate'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\r\n    'NonContacts'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\r\n    'NewGroup'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\r\n    'NewChannel'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\r\n    'ReadChats'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\r\n    'Bots'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\r\n    'Done'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport ChatTile from './ChatTile';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\r\nimport './FilterChat.css';\r\n\r\nclass FilterChat extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0,\r\n        checked: false\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        const { onDelete } = this.props;\r\n        if (!onDelete) return;\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({\r\n            contextMenu: true,\r\n            left: event.clientX,\r\n            top: event.clientY\r\n        });\r\n    };\r\n\r\n    handleCloseContextMenu = () => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { chatId, onDelete } = this.props;\r\n\r\n        onDelete && onDelete(chatId);\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t, type, checked, onClick } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        const title = getChatTitle(chatId, true, t);\r\n\r\n        return (\r\n            <>\r\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='filter-chat-tile'>\r\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\r\n                    </div>\r\n                    <div className='filter-chat-content'>\r\n                        <div className='filter-chat-title'>\r\n                            {title}\r\n                        </div>\r\n                        { type && (\r\n                            <div className='filter-chat-subtitle'>\r\n                                {getChatType(chatId, t)}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    { checked !== undefined && (\r\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\r\n                    )}\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilterChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    type: PropTypes.bool,\r\n    onDelete: PropTypes.func,\r\n    checked: PropTypes.bool,\r\n    onChange: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(FilterChat);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport './FilterText.css';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nclass FilterText extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        const { onDelete } = this.props;\r\n        if (!onDelete) return;\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({\r\n            contextMenu: true,\r\n            left: event.clientX,\r\n            top: event.clientY\r\n        });\r\n    };\r\n\r\n    handleCloseContextMenu = () => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleCloseContextMenu();\r\n\r\n        const { onDelete } = this.props;\r\n\r\n        onDelete && onDelete();\r\n    };\r\n\r\n    render() {\r\n        const { t, className, icon, text, checked, onClick } = this.props;\r\n        const { contextMenu, left, top } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\r\n                    <div className='filter-chat-tile'>\r\n                        {icon}\r\n                    </div>\r\n                    <div className='filter-chat-content'>\r\n                        {text}\r\n                    </div>\r\n                    { checked !== undefined && (\r\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\r\n                    )}\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilterText.propTypes = {\r\n    icon: PropTypes.object,\r\n    text: PropTypes.string,\r\n    checked: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    onDelete: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(FilterText);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport './Chip.css';\r\n\r\nclass Chip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    getOffset() {\r\n        const {\r\n            offsetLeft: left,\r\n            offsetTop: top,\r\n            offsetWidth: width,\r\n            offsetHeight: height\r\n        } = this.divRef.current;\r\n\r\n        return { left, top, width, height }\r\n    }\r\n\r\n    setStyleCSSText(text) {\r\n        const div = this.divRef.current;\r\n        if (!div) return;\r\n\r\n        div.style.cssText = text;\r\n    }\r\n\r\n    render() {\r\n        const { icon, text, selected, onClick } = this.props;\r\n\r\n        return (\r\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\r\n                <div className='chip-icon'>\r\n                    {icon}\r\n                </div>\r\n                <div className='chip-delete'>\r\n                    <CloseIcon className='chip-delete-icon'/>\r\n                </div>\r\n                <div className='chip-text'>{text}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nChip.propTypes = {\r\n    icon: PropTypes.object,\r\n    text: PropTypes.string,\r\n    selected: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default Chip;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport './ChatChip.css';\r\n\r\nclass ChatChip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    getOffset() {\r\n        const {\r\n            offsetLeft: left,\r\n            offsetTop: top,\r\n            offsetWidth: width,\r\n            offsetHeight: height\r\n        } = this.divRef.current;\r\n\r\n        return { left, top, width, height }\r\n    }\r\n\r\n    setStyleCSSText(text) {\r\n        const div = this.divRef.current;\r\n        if (!div) return;\r\n\r\n        div.style.cssText = text;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, selected, onClick } = this.props;\r\n\r\n        return (\r\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\r\n                <ChatTile chatId={chatId} small={true}/>\r\n                <div className='chip-delete'>\r\n                    <CloseIcon className='chip-delete-icon'/>\r\n                </div>\r\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nChatChip.propTypes = {\r\n    chatId: PropTypes.number,\r\n    selected: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default ChatChip;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\r\nimport FilterChat from '../../Tile/FilterChat';\r\nimport FilterText from '../../Tile/FilterText';\r\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\r\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\r\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\r\nimport BotsIcon from '../../../Assets/Icons/Bots';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SearchInput from '../Search/SearchInput';\r\nimport MutedIcon from '../../../Assets/Icons/Mute';\r\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\r\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\r\nimport Chip from '../../Tile/Chip';\r\nimport ChatChip from '../../Tile/ChatChip';\r\nimport { loadChatsContent } from '../../../Utils/File';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './EditFilterChats.css';\r\n\r\nclass EditFilterChats extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n        this.wrapPanelRef = React.createRef();\r\n        this.itemsRef = new Map();\r\n\r\n        this.state = {\r\n            focusedItem: null,\r\n            searchItems: null,\r\n            error: false\r\n        }\r\n    }\r\n\r\n    handleChatChange = (chatId, search) => {\r\n        const { mode } = this.props;\r\n\r\n        if (search) {\r\n            const input = this.searchInputRef.current;\r\n            input.focus();\r\n            input.innerText = '';\r\n            this.handleSearch('');\r\n        }\r\n\r\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\r\n    };\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const { filter, mode } = this.props;\r\n        const { filter : prevFilter } = prevProps;\r\n\r\n        if (prevProps.filter === filter) {\r\n            return null;\r\n        }\r\n\r\n        const include = mode === 'include';\r\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\r\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\r\n\r\n        const isDeleting =\r\n            prevItems.length > items.length\r\n            || prevFilter.include_contacts && !filter.include_contacts\r\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\r\n            || prevFilter.include_groups && !filter.include_groups\r\n            || prevFilter.include_channels && !filter.include_channels\r\n            || prevFilter.include_bots && !filter.include_bots\r\n            || prevFilter.exclude_read && !filter.exclude_read\r\n            || prevFilter.exclude_muted && !filter.exclude_muted\r\n            || prevFilter.exclude_archived && !filter.exclude_archived;\r\n\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n        const prevHeight = wrapPanel.scrollHeight;\r\n        const prevOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const prevCSSText = wrapPanel.style.cssText;\r\n        const prevScrollTop = wrapPanel.scrollTop;\r\n        if (isDeleting) {\r\n            wrapPanel.style.cssText = null;\r\n        }\r\n\r\n        const prevMap = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const offset = el.getOffset();\r\n                prevMap.set(key, offset);\r\n            }\r\n        }\r\n\r\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.filter === this.props.filter) {\r\n            return;\r\n        }\r\n\r\n        this.animatePanel(snapshot.panel);\r\n        // this.animateItems(snapshot.items);\r\n    }\r\n\r\n    animatePanel(snapshot) {\r\n        if (!snapshot) return;\r\n\r\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\r\n\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n\r\n        const currentHeight = wrapPanel.scrollHeight;\r\n        const currentOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const expanded = currentHeight > prevHeight;\r\n        const collapsed = currentHeight < prevHeight;\r\n\r\n        const maxHeight = 123;\r\n        if (expanded) {\r\n            if (prevHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                    setTimeout(() => {\r\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\r\n                    }, 250);\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n        } else if (collapsed) {\r\n            if (currentHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            }\r\n        } else {\r\n            if (isDeleting) {\r\n                wrapPanel.style.cssText = prevCSSText;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            } else {\r\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n        }\r\n    }\r\n\r\n    animateItems(prevOffsets) {\r\n        if (!prevOffsets) return;\r\n\r\n        const doubleTransform = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const currentOffset = el.getOffset();\r\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\r\n                if (prevOffset) {\r\n                    if (prevOffset.left < currentOffset.left) {\r\n                        doubleTransform.set(el, { prevOffset, currentOffset });\r\n                    }\r\n\r\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\r\n                    el.setStyleCSSText(transform);\r\n                }\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(() => {\r\n            for (let key of this.itemsRef.keys()) {\r\n                const el = this.itemsRef.get(key);\r\n                if (el) {\r\n                    let transition = `transition: transform 0.25s ease`;\r\n                    if (doubleTransform.has(el)) {\r\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\r\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\r\n                            + 'transition: transform 0.1s ease;'\r\n                    }\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n            }\r\n\r\n            if (!doubleTransform.size) return;\r\n\r\n            setTimeout(() => {\r\n                for (let el of doubleTransform.keys()) {\r\n                    const { currentOffset } = doubleTransform.get(el);\r\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\r\n                        + 'transition: transform 0s ease;';\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n\r\n                requestAnimationFrame(() => {\r\n                    for (let el of doubleTransform.keys()) {\r\n                        const transition = 'transition: transform 0.15s ease';\r\n\r\n                        el.setStyleCSSText(transition);\r\n                    }\r\n                });\r\n\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    handleBackspace = () => {\r\n        const { filter, mode } = this.props;\r\n        const { focusedItem } = this.state;\r\n        if (!filter) return;\r\n\r\n        if (focusedItem) {\r\n            switch (focusedItem) {\r\n                case 'include_contacts':\r\n                case 'include_non_contacts':\r\n                case 'include_bots':\r\n                case 'include_groups':\r\n                case 'include_channels':\r\n                case 'exclude_muted':\r\n                case 'exclude_read':\r\n                case 'exclude_archived': {\r\n                    this.handleChange(focusedItem);\r\n\r\n                    this.setState({\r\n                        focusedItem: null\r\n                    });\r\n                    break;\r\n                }\r\n                default: {\r\n                    this.handleChatChange(focusedItem);\r\n\r\n                    this.setState({\r\n                        focusedItem: null\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        const include = mode === 'include';\r\n        if (include) {\r\n            const {\r\n                include_contacts,\r\n                include_non_contacts,\r\n                include_bots,\r\n                include_groups,\r\n                include_channels,\r\n                included_chat_ids\r\n            } = filter;\r\n\r\n            if (included_chat_ids.length > 0) {\r\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\r\n                if (!lastItem) return;\r\n\r\n                this.setState({\r\n                    focusedItem: lastItem\r\n                });\r\n            } else if (include_bots) {\r\n                this.setState({\r\n                    focusedItem: 'include_bots'\r\n                });\r\n            } else if (include_channels) {\r\n                this.setState({\r\n                    focusedItem: 'include_channels'\r\n                });\r\n            } else if (include_groups) {\r\n                this.setState({\r\n                    focusedItem: 'include_groups'\r\n                });\r\n            } else if (include_non_contacts) {\r\n                this.setState({\r\n                    focusedItem: 'include_non_contacts'\r\n                });\r\n            } else if (include_contacts) {\r\n                this.setState({\r\n                    focusedItem: 'include_contacts'\r\n                });\r\n            }\r\n        } else {\r\n            const {\r\n                exclude_muted,\r\n                exclude_read,\r\n                exclude_archived,\r\n                excluded_chat_ids\r\n            } = filter;\r\n\r\n            if (excluded_chat_ids.length > 0) {\r\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\r\n                if (!lastItem) return;\r\n\r\n                this.setState({\r\n                    focusedItem: lastItem\r\n                });\r\n            } else if (exclude_archived) {\r\n                this.setState({\r\n                    focusedItem: 'exclude_archived'\r\n                });\r\n            } else if (exclude_read) {\r\n                this.setState({\r\n                    focusedItem: 'exclude_read'\r\n                });\r\n            } else if (exclude_muted) {\r\n                this.setState({\r\n                    focusedItem: 'exclude_muted'\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleChange = (type, value) => {\r\n        const { onChange } = this.props;\r\n\r\n        onChange(type, value);\r\n\r\n        this.setState({\r\n            focusedItem: null\r\n        });\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text.trim();\r\n        if (!query) {\r\n            this.setState({\r\n                searchItems: null,\r\n                focusedItem: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const promises = [];\r\n        promises.push(\r\n            TdLibController.send({\r\n                '@type': 'searchChats',\r\n                query,\r\n                limit: 100\r\n            })\r\n        );\r\n        const [searchItems] = await Promise.all(promises);\r\n\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, searchItems.chat_ids);\r\n\r\n        this.setState({ searchItems, focusedItem: null });\r\n    };\r\n\r\n    render() {\r\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\r\n        const { focusedItem, searchItems } = this.state;\r\n\r\n        const {\r\n            include_contacts,\r\n            include_non_contacts,\r\n            include_bots,\r\n            include_groups,\r\n            include_channels,\r\n            included_chat_ids\r\n        } = filter;\r\n\r\n        const {\r\n            exclude_muted,\r\n            exclude_read,\r\n            exclude_archived,\r\n            excluded_chat_ids\r\n        } = filter;\r\n\r\n        const include = mode === 'include';\r\n        const items = include ? included_chat_ids : excluded_chat_ids;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\r\n                    </div>\r\n                </div>\r\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\r\n                    { include && (\r\n                        <>\r\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\r\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\r\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\r\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\r\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\r\n                        </>\r\n                    )}\r\n                    { !include && (\r\n                        <>\r\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\r\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\r\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\r\n                        </>\r\n                    )}\r\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\r\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\r\n                </div>\r\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\r\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\r\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\r\n                    {include && (\r\n                        <>\r\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\r\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\r\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\r\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\r\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\r\n                        </>\r\n                    )}\r\n                    {!include && (\r\n                        <>\r\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\r\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\r\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\r\n                        </>\r\n                    )}\r\n                    { chats && chats.length > 0 && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\r\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\r\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\r\n                        </>\r\n                    )}\r\n                    { searchItems && (\r\n                        <div className='edit-filter-chats-search'>\r\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nEditFilterChats.propTypes = {\r\n    filter: PropTypes.object,\r\n    chats: PropTypes.array,\r\n    mode: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    onScroll: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(EditFilterChats);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AddIcon from '../../../Assets/Icons/Add';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\r\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\r\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\r\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\r\nimport MutedIcon from '../../../Assets/Icons/Mute';\r\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\r\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\r\nimport BotsIcon from '../../../Assets/Icons/Bots';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport DoneIcon from '../../../Assets/Icons/Done';\r\nimport EditFilterChats from './EditFilterChats';\r\nimport FilterChat from '../../Tile/FilterChat';\r\nimport FilterText from '../../Tile/FilterText';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SidebarPage from '../SidebarPage';\r\nimport { isFilterValid } from '../../../Utils/Filter';\r\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './CreateFilter.css';\r\n\r\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\r\n\r\nclass CreateFilter extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n        this.lottieRef = React.createRef();\r\n\r\n        this.state = {\r\n            prevFilterId: -1,\r\n            data: null,\r\n            openFilterChats: false,\r\n            mode: null,\r\n            title: '',\r\n            error: false,\r\n            shook: false,\r\n            chats: [],\r\n            limit: 0\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { filter, filterId } = props;\r\n        const { prevFilterId } = state;\r\n\r\n        if (filter && prevFilterId !== filterId){\r\n            return {\r\n                prevFilterId: filterId,\r\n                editFilter: {...filter},\r\n                title: filter.title\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAnimationData();\r\n    }\r\n\r\n    loadAnimationData = async () => {\r\n        const { closeData } = this.state;\r\n        if (closeData) return;\r\n\r\n        try {\r\n            const requests = [ fetch('data/Folders_2.json') ];\r\n\r\n            const results = await Promise.all(requests);\r\n\r\n            const [data] = await Promise.all(results.map(x => x.text()));\r\n\r\n            this.setState({ data });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { onDone } = this.props;\r\n        const { editFilter } = this.state;\r\n\r\n        const title = this.titleRef.current.value.trim();\r\n        if (!title) {\r\n            this.titleRef.current.focus();\r\n            this.setState({\r\n                error: true\r\n            })\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                error: false\r\n            })\r\n        }\r\n\r\n        editFilter.title = title;\r\n\r\n        if (!isFilterValid(editFilter)) {\r\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\r\n            return;\r\n        }\r\n\r\n        onDone && onDone(editFilter);\r\n    };\r\n\r\n    handleAnimationClick = () => {\r\n        const lottie = this.lottieRef.current;\r\n        if (!lottie) return;\r\n        if (!lottie.isPaused) return;\r\n\r\n        lottie.play();\r\n    };\r\n\r\n    handleDeleteIncludeContacts = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_contacts: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterContacts')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeNonContacts = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterNonContacts')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeGroups = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_groups: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterGroups')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeChannels = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_channels: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterChannels')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludeBots = () => {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, include_bots: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        });\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (title === t('FilterBots')){\r\n            this.setState({\r\n                title: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDeleteIncludedChat = chatId => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludeMuted = () => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, exclude_muted: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludeRead = () => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, exclude_read: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludeArchived = () => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, exclude_archived: false };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleDeleteExcludedChat = chatId => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleOpenFilterChats = async mode => {\r\n        const result = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListMain' },\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: 1000\r\n        });\r\n\r\n        this.setState({\r\n            openFilterChats: true,\r\n            mode,\r\n            chats: result.chat_ids,\r\n            limit: CHAT_SLICE_LIMIT\r\n        })\r\n    };\r\n\r\n    setDefaultFilterTitle() {\r\n        const { t } = this.props;\r\n        const { editFilter } = this.state;\r\n\r\n        const title = this.titleRef.current.value;\r\n        if (!title) {\r\n            const {\r\n                include_contacts,\r\n                include_non_contacts,\r\n                include_bots,\r\n                include_groups,\r\n                include_channels,\r\n                included_chat_ids\r\n            } = editFilter;\r\n\r\n            const {\r\n                exclude_muted,\r\n                exclude_read,\r\n                exclude_archived,\r\n                excluded_chat_ids\r\n            } = editFilter;\r\n\r\n            if (!included_chat_ids.length) {\r\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterContacts')\r\n                    });\r\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterNonContacts')\r\n                    });\r\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('ChatHints')\r\n                    });\r\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterBots')\r\n                    });\r\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterGroups')\r\n                    });\r\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\r\n                    this.setState({\r\n                        title: t('FilterChannels')\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleCloseFilterChats = () => {\r\n\r\n        this.setDefaultFilterTitle();\r\n\r\n        this.setState({\r\n            openFilterChats: false,\r\n            mode: null\r\n        })\r\n    };\r\n\r\n    handleChange = (type, value) => {\r\n        const { editFilter } = this.state;\r\n        if (!editFilter) return;\r\n\r\n        let newEditFilter = null;\r\n        switch (type) {\r\n            case 'include_contacts': {\r\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\r\n                break;\r\n            }\r\n            case 'include_non_contacts': {\r\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\r\n                break;\r\n            }\r\n            case 'include_bots': {\r\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\r\n                break;\r\n            }\r\n            case 'include_groups': {\r\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\r\n                break;\r\n            }\r\n            case 'include_channels': {\r\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\r\n                break;\r\n            }\r\n            case 'included_chat_ids': {\r\n                let included, excluded;\r\n                if (editFilter.included_chat_ids.includes(value)) {\r\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\r\n                    excluded = editFilter.excluded_chat_ids;\r\n                } else {\r\n                    included = [ ...editFilter.included_chat_ids, value ];\r\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\r\n                }\r\n\r\n                newEditFilter = {\r\n                    ...editFilter,\r\n                    included_chat_ids: included,\r\n                    excluded_chat_ids: excluded\r\n                };\r\n                break;\r\n            }\r\n            case 'exclude_muted': {\r\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\r\n                break;\r\n            }\r\n            case 'exclude_read': {\r\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\r\n                break;\r\n            }\r\n            case 'exclude_archived': {\r\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\r\n                break;\r\n            }\r\n            case 'excluded_chat_ids': {\r\n                let included, excluded;\r\n                if (editFilter.excluded_chat_ids.includes(value)) {\r\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\r\n                    included = editFilter.included_chat_ids;\r\n                } else {\r\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\r\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\r\n                }\r\n\r\n                newEditFilter = {\r\n                    ...editFilter,\r\n                    included_chat_ids: included,\r\n                    excluded_chat_ids: excluded\r\n                };\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        // console.log('[f] onChange', type, value, newEditFilter);\r\n        if (!newEditFilter) return;\r\n\r\n        this.setState({\r\n            editFilter: newEditFilter\r\n        })\r\n    };\r\n\r\n    handleTitleChange = () => {\r\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\r\n\r\n        this.setState({\r\n            title\r\n        });\r\n    }\r\n\r\n    handleScroll = event => {\r\n        const scroll = event.target;\r\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\r\n            this.setState({\r\n                limit: this.state.limit + CHAT_SLICE_LIMIT\r\n            })\r\n        }\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, filter, id, onClose } = this.props;\r\n        if (!filter) return null;\r\n\r\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\r\n\r\n        const {\r\n            include_contacts,\r\n            include_non_contacts,\r\n            include_bots,\r\n            include_groups,\r\n            include_channels,\r\n            included_chat_ids\r\n        } = editFilter;\r\n\r\n        const {\r\n            exclude_muted,\r\n            exclude_read,\r\n            exclude_archived,\r\n            excluded_chat_ids\r\n        } = editFilter;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\r\n                    </div>\r\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\r\n                        <DoneIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='filters-create-animation'>\r\n                        { data && (\r\n                            <React.Suspense fallback={null}>\r\n                                <RLottie\r\n                                    ref={this.lottieRef}\r\n                                    options={{\r\n                                        width: 80,\r\n                                        height: 80,\r\n                                        autoplay: true,\r\n                                        loop: false,\r\n                                        fileId: 'createFilter',\r\n                                        stringData: data\r\n                                    }}\r\n                                    onClick={this.handleAnimationClick}\r\n                                />\r\n                            </React.Suspense>\r\n                        )}\r\n                    </div>\r\n\r\n\r\n                    <div className='create-filter-title'>\r\n                        <TextField\r\n                            inputRef={this.titleRef}\r\n                            className='edit-profile-input'\r\n                            variant='outlined'\r\n                            fullWidth\r\n                            label={t('FilterNameHint')}\r\n                            value={title}\r\n                            error={error}\r\n                            onChange={this.handleTitleChange}\r\n                        />\r\n                    </div>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\r\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\r\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\r\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\r\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\r\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\r\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\r\n                        { included_chat_ids.map(x => (\r\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\r\n                        ))}\r\n                    </div>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\r\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\r\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\r\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\r\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\r\n                        { excluded_chat_ids.map(x => (\r\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\r\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nCreateFilter.propTypes = {\r\n    filter: PropTypes.object,\r\n    id: PropTypes.number,\r\n    onDone: PropTypes.func,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar,\r\n);\r\n\r\nexport default enhance(CreateFilter);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { getChatOrder } from './Chat';\r\n\r\nexport function isFilterValid(filter) {\r\n    if (!filter) return false;\r\n\r\n    const {\r\n        include_contacts,\r\n        include_non_contacts,\r\n        include_bots,\r\n        include_groups,\r\n        include_channels,\r\n        included_chat_ids,\r\n        title\r\n    } = filter;\r\n\r\n    if (!title) return false;\r\n\r\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\r\n}\r\n\r\nexport function getFilterSubtitle(t, filterId, chats) {\r\n    if (!chats) return ' ';\r\n\r\n    let count = 0;\r\n    for (let i = 0; i < chats.chat_ids.length; i++) {\r\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\r\n            count++;\r\n        }\r\n    }\r\n\r\n    if (!count) {\r\n        return t('FilterNoChats');\r\n    }\r\n\r\n    return count === 1 ? '1 chat' : `${count} chats`;\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport { getFilterSubtitle } from '../../Utils/Filter';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Filter.css';\r\n\r\nclass Filter extends React.Component {\r\n\r\n    state = {\r\n        dialog: false,\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleCloseContextMenu();\r\n        this.handleOpenDialog();\r\n    };\r\n\r\n    handleOpenDialog = () => {\r\n        this.setState({\r\n            dialog: true\r\n        })\r\n    };\r\n\r\n    handleCloseDialog = () => {\r\n        this.setState({\r\n            dialog: false\r\n        })\r\n    };\r\n\r\n    handleDeleteCancel = () => {\r\n        this.handleCloseDialog();\r\n    };\r\n\r\n    handleDeleteConfirm = () => {\r\n        const { info } = this.props;\r\n        if (!info) return;\r\n\r\n        this.handleCloseDialog();\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteChatFilter',\r\n            chat_filter_id: info.id\r\n        });\r\n    };\r\n\r\n    handleOpenContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({\r\n            contextMenu: true,\r\n            left: event.clientX,\r\n            top: event.clientY\r\n        });\r\n    };\r\n\r\n    handleCloseContextMenu = () => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, info, onEdit, chats } = this.props;\r\n        if (!info) return null;\r\n\r\n        const { dialog, contextMenu, top, left } = this.state;\r\n\r\n        const { title } = info;\r\n        const subtitle = getFilterSubtitle(t, info.id, chats);\r\n\r\n        return (\r\n            <>\r\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\r\n                    <ListItemText\r\n                        className='settings-list-item-text2'\r\n                        primary={title}\r\n                        secondary={subtitle}\r\n                    />\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleDelete}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Delete')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={dialog}\r\n                    onClose={this.handleCancel}\r\n                    aria-labelledby='delete-dialog-title'>\r\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            {t('FilterDeleteAlert')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilter.propTypes = {\r\n    info: PropTypes.object.isRequired,\r\n    chats: PropTypes.object,\r\n    onEdit: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Filter);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './RecommendedFilter.css';\r\n\r\nclass RecommendedFilter extends React.Component {\r\n\r\n    handleAdd = () => {\r\n        const { filter: recommendedFilter } = this.props;\r\n        if (!recommendedFilter) return;\r\n\r\n        const { filter } = recommendedFilter;\r\n\r\n        TdLibController.send({\r\n            '@type': 'createChatFilter',\r\n            filter\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, filter: recommendedFilter } = this.props;\r\n        if (!recommendedFilter) return null;\r\n\r\n        const { filter, description } = recommendedFilter;\r\n\r\n        return (\r\n            <ListItem\r\n                className='settings-list-item2'\r\n                role={undefined}\r\n                button>\r\n                <ListItemText\r\n                    className='settings-list-item-text'\r\n                    primary={filter.title}\r\n                    secondary={description}\r\n                />\r\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\r\n                    {t('Add')}\r\n                </Button>\r\n            </ListItem>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nRecommendedFilter.propTypes = {\r\n    filter: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(RecommendedFilter);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '../../../Assets/Icons/Add';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport CreateFilter from './CreateFilter';\r\nimport Filter from '../../Tile/Filter';\r\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\r\nimport SectionHeader from '../SectionHeader';\r\nimport SidebarPage from '../SidebarPage';\r\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\r\nimport FilterStore from '../../../Stores/FilterStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Filters.css';\r\n\r\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\r\n\r\nclass Filters extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.lottieRef = React.createRef();\r\n\r\n        this.state = {\r\n            openFilter: false,\r\n            filterId: -1,\r\n            filter: null,\r\n            editFilter: null,\r\n            recommendedFilters: null,\r\n            chats: null,\r\n            filtersMap: new Map()\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAnimationData();\r\n        this.loadData();\r\n\r\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    onUpdateChatFilters = update => {\r\n        setTimeout(() => {\r\n            this.loadData();\r\n        }, 100);\r\n    };\r\n\r\n    async loadData() {\r\n        const chats = await TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListMain' },\r\n            offset_chat_id: 0,\r\n            offset_order: '9223372036854775807',\r\n            limit: 1000\r\n        });\r\n\r\n        const { filters: filterInfo } = FilterStore;\r\n        const promises = [];\r\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\r\n            promises.push(TdLibController.send({\r\n                '@type': 'getChatFilter',\r\n                chat_filter_id: filterInfo[i].id\r\n            }).catch(e => null));\r\n        }\r\n        const filters = await Promise.all(promises);\r\n\r\n        const filtersMap = new Map();\r\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\r\n            filtersMap.set(filterInfo[i].id, filters[i]);\r\n        }\r\n\r\n        const recommendedFilters = await TdLibController.send({\r\n            '@type': 'getRecommendedChatFilters'\r\n        });\r\n\r\n        this.setState({\r\n            chats,\r\n            filtersMap,\r\n            recommendedFilters\r\n        });\r\n    }\r\n\r\n    loadAnimationData = async () => {\r\n        const { closeData } = this.state;\r\n        if (closeData) return;\r\n\r\n        try {\r\n            const requests = [\r\n                fetch('data/Folders_1.json'),\r\n                fetch('data/Folders_2.json'),\r\n            ];\r\n\r\n            const results = await Promise.all(requests);\r\n\r\n            const [data] = await Promise.all(results.map(x => x.text()));\r\n\r\n            this.setState({ data });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    handleCreateFilter = () => {\r\n        const { t } = this.props;\r\n        const { filters } = FilterStore;\r\n        if (filters.length >= FILTER_COUNT_MAX) {\r\n            this.handleScheduledAction(t('FilterCreateError'));\r\n            return;\r\n        }\r\n\r\n        const filter = {\r\n            '@type': 'chatFiler',\r\n            title: '',\r\n            icon_name: '',\r\n            pinned_chat_ids: [],\r\n            included_chat_ids: [],\r\n            excluded_chat_ids: [],\r\n            exclude_muted: false,\r\n            exclude_read: false,\r\n            exclude_archived: false,\r\n            include_contacts: false,\r\n            include_non_contacts: false,\r\n            include_bots: false,\r\n            include_groups: false,\r\n            include_channels: false\r\n        };\r\n\r\n        this.setState({\r\n            openFilter: true,\r\n            filterId: -1,\r\n            filter\r\n        });\r\n    };\r\n\r\n    handleCloseFilter = () => {\r\n        this.setState({\r\n            openFilter: false,\r\n            filterId: -1,\r\n            filter: null\r\n        })\r\n    };\r\n\r\n    handleEditFilter = async info => {\r\n        const filter = await TdLibController.send({\r\n            '@type': 'getChatFilter',\r\n            chat_filter_id: info.id\r\n        });\r\n\r\n        if (!filter) return;\r\n\r\n        this.setState({\r\n            openFilter: true,\r\n            filterId: info.id,\r\n            filter\r\n        })\r\n    };\r\n\r\n    handleDone = filter => {\r\n        const { filterId } = this.state;\r\n\r\n        this.handleCloseFilter();\r\n        if (!filter) return;\r\n\r\n        if (filterId !== -1) {\r\n            TdLibController.send({\r\n                '@type': 'editChatFilter',\r\n                chat_filter_id: filterId,\r\n                filter\r\n            });\r\n        } else {\r\n            TdLibController.send({\r\n                '@type': 'createChatFilter',\r\n                filter\r\n            });\r\n        }\r\n    };\r\n\r\n    handleAnimationClick = () => {\r\n        const lottie = this.lottieRef.current;\r\n        if (!lottie) return;\r\n        if (!lottie.isPaused) return;\r\n\r\n        lottie.play();\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\r\n        const { filters } = FilterStore;\r\n\r\n        const hasFilters = filters && filters.length > 0;\r\n        const hasRecommendedFilters = recommendedFilters\r\n            && recommendedFilters.chat_filters.length > 0\r\n            && (!filters || filters.length < FILTER_COUNT_MAX);\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section filters-create'>\r\n                        <div className='filters-create-animation'>\r\n                            { data && (\r\n                                <React.Suspense fallback={null}>\r\n                                    <RLottie\r\n                                        ref={this.lottieRef}\r\n                                        options={{\r\n                                            width: 80,\r\n                                            height: 80,\r\n                                            autoplay: true,\r\n                                            loop: false,\r\n                                            fileId: 'filters',\r\n                                            stringData: data\r\n                                        }}\r\n                                        onClick={this.handleAnimationClick}\r\n                                    />\r\n                                </React.Suspense>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\r\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\r\n                            {t('CreateNewFilter')}\r\n                        </Button>\r\n                    </div>\r\n                    { hasFilters && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' />\r\n                            <div className='sidebar-page-section'>\r\n                                <SectionHeader>{t('Filters')}</SectionHeader>\r\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                    { hasRecommendedFilters && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' />\r\n                            <div className='sidebar-page-section'>\r\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\r\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\r\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilters.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar,\r\n);\r\n\r\nexport default enhance(Filters);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\r\n    'Colorize'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getSrc } from '../../Utils/File';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './Wallpaper.css';\r\nimport FileProgress from '../Viewer/FileProgress';\r\n\r\nclass Wallpaper extends React.Component {\r\n    state = {\r\n        loaded: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    onClientUpdateDocumentThumbnailBlob = update => {\r\n        const { wallpaper } = this.props;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail } = document;\r\n        if (!thumbnail) return;\r\n\r\n        const { file } = thumbnail;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleLoad = () => {\r\n        this.setState({ loaded: true });\r\n    };\r\n\r\n    handleClick = () => {\r\n        const { wallpaper, onClick } = this.props;\r\n\r\n        if (onClick) {\r\n            onClick(wallpaper);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { wallpaper, isSelected } = this.props;\r\n        const { loaded  } = this.state;\r\n\r\n        const { document } = wallpaper;\r\n        const { minithumbnail, thumbnail } = document;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\r\n        const tileLoaded = thumbSrc && loaded;\r\n        const src = thumbSrc || miniSrc;\r\n\r\n        return (\r\n            <div className='shared-photo' onClick={this.handleClick}>\r\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\r\n                    {src !== thumbSrc && (\r\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\r\n                    )}\r\n                </div>\r\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\r\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nWallpaper.propTypes = {\r\n    wallpaper: PropTypes.object.isRequired,\r\n    isSelected: PropTypes.bool\r\n};\r\n\r\nexport default Wallpaper;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport Wallpaper from '../../Tile/Wallpaper';\r\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './ChatBackground.css';\r\n\r\nclass ChatBackground extends React.Component {\r\n    state = {\r\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent() {\r\n        const { backgrounds } = this.props;\r\n        if (!backgrounds) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadBackgroundsContent(store, backgrounds.backgrounds);\r\n    }\r\n\r\n    handleClick = wallpaper => {\r\n        this.setState({\r\n            selectedId: wallpaper.id\r\n        });\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail, document: file } = document;\r\n        if (!file) return;\r\n\r\n        const src = getSrc(file);\r\n        if (!src) {\r\n            const store = FileStore.getStore();\r\n            loadBackgroundContent(store, wallpaper, true);\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateChatBackground',\r\n            wallpaper\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, backgrounds, onClose } = this.props;\r\n        const { selectedId } = this.state;\r\n\r\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\r\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nChatBackground.propTypes = {\r\n    backgrounds: PropTypes.object\r\n};\r\n\r\nexport default withTranslation()(ChatBackground);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport withTheme from '@material-ui/core/styles/withTheme';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport red from '@material-ui/core/colors/red';\r\nimport orange from '@material-ui/core/colors/orange';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport green from '@material-ui/core/colors/green';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport deepPurple from '@material-ui/core/colors/deepPurple';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport './ThemePicker.css';\r\n\r\nclass ThemePicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false,\r\n            type: this.props.theme.palette.type,\r\n            color: this.getColorString(this.props.theme.palette.primary.main)\r\n        };\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ type: event.target.value });\r\n\r\n        ApplicationStore.emit('clientUpdateThemeChanging', {\r\n            type: event.target.value,\r\n            primary: this.getColor(this.state.color)\r\n        });\r\n    };\r\n\r\n    handleAccentChange = event => {\r\n        this.setState({ color: event.target.value });\r\n\r\n        ApplicationStore.emit('clientUpdateThemeChanging', {\r\n            type: this.state.type,\r\n            primary: this.getColor(event.target.value)\r\n        });\r\n    };\r\n\r\n    getColorString = value => {\r\n        switch (value) {\r\n            case red['500']:\r\n                return 'red';\r\n            case orange['500']:\r\n                return 'orange';\r\n            case amber['500']:\r\n                return 'amber';\r\n            case green['500']:\r\n                return 'green';\r\n            case '#50A2E9':\r\n                return 'blue';\r\n            case indigo['500']:\r\n                return 'indigo';\r\n            case deepPurple['500']:\r\n                return 'deepPurple';\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    getColor = value => {\r\n        switch (value) {\r\n            case 'red':\r\n                return red;\r\n            case 'orange':\r\n                return orange;\r\n            case 'amber':\r\n                return amber;\r\n            case 'green':\r\n                return green;\r\n            case 'blue':\r\n                return { main: '#50A2E9' };\r\n            case 'indigo':\r\n                return indigo;\r\n            case 'deepPurple':\r\n                return deepPurple;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    open = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { type, color, open } = this.state;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={open}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='alert-dialog-title'\r\n                aria-describedby='alert-dialog-description'>\r\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\r\n                <DialogContent>\r\n                    <FormControl component='fieldset' className='theme-picker-form'>\r\n                        <FormLabel focused component='legend'>\r\n                            {t('Theme')}\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                            aria-label='theme'\r\n                            name='theme1'\r\n                            className='theme-picker-group'\r\n                            value={type}\r\n                            onChange={this.handleChange}>\r\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\r\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                    <FormControl component='fieldset' className='theme-picker-form'>\r\n                        <FormLabel focused component='legend'>\r\n                            {t('Accent')}\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                            aria-label='accent'\r\n                            name='accent1'\r\n                            className='theme-picker-group'\r\n                            value={color}\r\n                            onChange={this.handleAccentChange}>\r\n                            <FormControlLabel\r\n                                value='red'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-red'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Red'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='orange'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-orange'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Orange'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='amber'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-amber'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Amber'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='green'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-green'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Green'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='blue'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-blue'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Blue'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='indigo'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-indigo'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Indigo'\r\n                            />\r\n                            <FormControlLabel\r\n                                value='deepPurple'\r\n                                control={\r\n                                    <Radio\r\n                                        color='primary'\r\n                                        classes={{\r\n                                            root: 'theme-picker-deep-purple'\r\n                                        }}\r\n                                    />\r\n                                }\r\n                                label='Deep Purple'\r\n                            />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </DialogContent>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nThemePicker.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTheme,\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ThemePicker);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\r\nimport ChatBackground from './ChatBackground';\r\nimport SidebarPage from '../SidebarPage';\r\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\r\nimport ThemePicker from '../ThemePicker';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './General.css';\r\n\r\nclass General extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            backgrounds: null,\r\n            openChatBackground: false\r\n        };\r\n\r\n        this.themePickerRef = React.createRef();\r\n    }\r\n\r\n    handleAppearance = () => {\r\n        this.themePickerRef.current.open();\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent = () => {\r\n        TdLibController.send({\r\n            '@type': 'getBackgrounds',\r\n            for_dark_theme: false\r\n        }).then(backgrounds => this.setState({ backgrounds }));\r\n    };\r\n\r\n    openChatBackground = () => {\r\n        if (!this.state.backgrounds) return;\r\n\r\n        this.setState({\r\n            openChatBackground: true\r\n        });\r\n    };\r\n\r\n    closeChatBackground = () => {\r\n        this.setState({\r\n            openChatBackground: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { backgrounds, openChatBackground } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\r\n                        {/*    <ListItemIcon>*/}\r\n                        {/*        <SharedMediaIcon />*/}\r\n                        {/*    </ListItemIcon>*/}\r\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\r\n                        {/*</ListItem>*/}\r\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\r\n                            <ListItemIcon>\r\n                                <ColorizeIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Appearance')} />\r\n                        </ListItem>\r\n                    </div>\r\n                </div>\r\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\r\n                    <ChatBackground backgrounds={backgrounds} />\r\n                </SidebarPage>\r\n                <ThemePicker ref={this.themePickerRef} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nGeneral.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(General);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Language.css';\r\n\r\nclass Language extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { i18n } = props;\r\n        const language = i18n ? i18n.language : null;\r\n\r\n        this.state = {\r\n            language: language || 'en'\r\n        };\r\n    }\r\n\r\n    handleChange = language => {\r\n        this.setState({ language });\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { language } = this.state;\r\n        const info = LocalizationStore.info || { language_packs: [] };\r\n\r\n        const languages = info.language_packs.map(x => (\r\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\r\n                <Radio\r\n                    color='primary'\r\n                    className='settings-item-control'\r\n                    checked={language === x.id}\r\n                    tabIndex={-1}\r\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                />\r\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Language')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>{languages}</div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nLanguage.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Language);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport SectionHeader from '../SectionHeader';\r\nimport NotificationStore from '../../../Stores/NotificationStore';\r\nimport OptionStore from '../../../Stores/OptionStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Notifications.css';\r\n\r\nclass Notifications extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\r\n\r\n        this.state = {\r\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\r\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\r\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\r\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\r\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\r\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\r\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\r\n        this.setContactJoinedOption(contactJoined);\r\n    }\r\n\r\n    setContactJoinedOption() {\r\n        const { contactJoined } = this.state;\r\n\r\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\r\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\r\n        if (oldContactJoined === contactJoined) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setOption',\r\n            name: 'disable_contact_registered_notifications',\r\n            value: {\r\n                '@type': 'optionValueBoolean',\r\n                value: !contactJoined\r\n            }\r\n        });\r\n    }\r\n\r\n    setScopeNotificationSettings(scope, settings) {\r\n        if (!scope) return;\r\n        if (!settings) return;\r\n        const oldSettings = NotificationStore.settings.get(scope);\r\n        if (!oldSettings) return;\r\n\r\n        const { mute_for, show_preview } = settings;\r\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\r\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setScopeNotificationSettings',\r\n            scope: { '@type': scope },\r\n            notification_settings: settings\r\n        });\r\n    }\r\n\r\n    handleMuteFor = property => {\r\n        const settings = this.state[property];\r\n        if (!settings) return;\r\n\r\n        const { mute_for } = settings;\r\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\r\n\r\n        this.setState({ [property]: newSettings });\r\n    };\r\n\r\n    handleShowPreview = property => {\r\n        const settings = this.state[property];\r\n        if (!settings) return;\r\n\r\n        const { show_preview } = settings;\r\n        const newSettings = { ...settings, show_preview: !show_preview };\r\n\r\n        this.setState({ [property]: newSettings });\r\n    };\r\n\r\n    handleContactJoined = () => {\r\n        this.setState({ contactJoined: !this.state.contactJoined });\r\n    };\r\n\r\n    isEnabled(settings) {\r\n        if (!settings) return false;\r\n\r\n        const { mute_for } = settings;\r\n\r\n        return mute_for === 0;\r\n    }\r\n\r\n    showPreview(settings) {\r\n        if (!settings) return false;\r\n\r\n        const { show_preview } = settings;\r\n\r\n        return show_preview;\r\n    }\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('Notifications')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(privateChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForPrivateChats')}\r\n                                secondary={\r\n                                    this.isEnabled(privateChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(privateChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(groupChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForGroups')}\r\n                                secondary={\r\n                                    this.isEnabled(groupChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(groupChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\r\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.isEnabled(channelChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('NotificationsForChannels')}\r\n                                secondary={\r\n                                    this.isEnabled(channelChatsSettings)\r\n                                        ? t('NotificationsEnabled')\r\n                                        : t('NotificationsDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={this.showPreview(channelChatsSettings)}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                primary={t('MessagePreview')}\r\n                                secondary={\r\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='sidebar-page-section-divider' />\r\n                    <div className='sidebar-page-section'>\r\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\r\n                        <div className='settings-item' onClick={this.handleContactJoined}>\r\n                            <Checkbox\r\n                                color='primary'\r\n                                className='settings-item-control'\r\n                                checked={contactJoined}\r\n                                tabIndex={-1}\r\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\r\n                            />\r\n                            <ListItemText\r\n                                id='label-1'\r\n                                primary={t('ContactJoined')}\r\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNotifications.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Notifications);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\r\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\r\n    </g>,\r\n    'Stop'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport StopIcon from '../../Assets/Icons/Stop';\r\nimport { getMessageDate } from '../../Utils/Chat';\r\nimport './Session.css';\r\n\r\nclass Session extends React.Component {\r\n    state = {\r\n        contextMenu: false,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n\r\n    handleContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { session } = this.props;\r\n        if (!session) return;\r\n        if (session.is_current) return;\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        this.setState({\r\n            contextMenu: false,\r\n            left: 0,\r\n            top: 0\r\n        });\r\n    };\r\n\r\n    handleTerminate = event => {\r\n        this.handleCloseContextMenu(event);\r\n\r\n        const { onTerminate, session } = this.props;\r\n\r\n        onTerminate(session);\r\n    };\r\n\r\n    render() {\r\n        const { session, t } = this.props;\r\n        if (!session) return null;\r\n\r\n        const { left, top, contextMenu } = this.state;\r\n        const {\r\n            is_current,\r\n            application_name,\r\n            application_version,\r\n            device_model,\r\n            platform,\r\n            system_version,\r\n            ip,\r\n            region,\r\n            country,\r\n            last_active_date\r\n        } = session;\r\n        const showDate = !is_current;\r\n\r\n        return (\r\n            <>\r\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\r\n                    <div className='session'>\r\n                        <div className='session-title'>\r\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\r\n                            {showDate && (\r\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\r\n                            )}\r\n                        </div>\r\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\r\n                        <div className='session-subtitle2'>\r\n                            {`${ip} - `}\r\n                            {region && `${region}, `}\r\n                            {country && `${country}`}\r\n                        </div>\r\n                    </div>\r\n                </ListItem>\r\n                <Popover\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={{ top, left }}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        <MenuItem onClick={this.handleTerminate}>\r\n                            <ListItemIcon>\r\n                                <StopIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Terminate')} />\r\n                        </MenuItem>\r\n                    </MenuList>\r\n                </Popover>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSession.propTypes = {\r\n    session: PropTypes.object.isRequired,\r\n    onTerminate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Session);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport Session from '../../Tile/Session';\r\nimport StopIcon from '../../../Assets/Icons/Stop';\r\nimport SectionHeader from '../SectionHeader';\r\nimport { modalManager } from '../../../Utils/Modal';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './ActiveSessions.css';\r\n\r\nclass ActiveSessions extends React.Component {\r\n    state = {\r\n        open: false,\r\n        openAll: false,\r\n        session: null\r\n    };\r\n\r\n    handleTerminate = session => {\r\n        this.setState({\r\n            open: true,\r\n            session\r\n        });\r\n    };\r\n\r\n    handleTerminateAllOther = () => {\r\n        this.setState({\r\n            openAll: true\r\n        });\r\n    };\r\n\r\n    handleCloseConfirmation = () => {\r\n        this.setState({\r\n            open: false,\r\n            session: null\r\n        });\r\n    };\r\n\r\n    handleDoneConfirmation = async () => {\r\n        const { sessions, t } = this.props;\r\n        const { session } = this.state;\r\n        if (!session) return;\r\n\r\n        this.setState({\r\n            open: false,\r\n            session: null\r\n        });\r\n\r\n        await TdLibController.send({\r\n            '@type': 'terminateSession',\r\n            session_id: session.id\r\n        });\r\n\r\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleCloseAllConfirmation = () => {\r\n        this.setState({\r\n            openAll: false\r\n        });\r\n    };\r\n\r\n    handleDoneAllConfirmation = async () => {\r\n        const { sessions } = this.props;\r\n\r\n        this.setState({\r\n            openAll: false\r\n        });\r\n\r\n        await TdLibController.send({\r\n            '@type': 'terminateAllOtherSessions'\r\n        });\r\n\r\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { t, sessions, onClose } = this.props;\r\n        const { open, openAll } = this.state;\r\n\r\n        const current = sessions.sessions.find(x => x.is_current);\r\n        const other = sessions.sessions.filter(x => !x.is_current);\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    {Boolean(current) && (\r\n                        <div className='sidebar-page-section'>\r\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\r\n                            <Session session={current} onTerminate={this.handleTerminate} />\r\n                            {other.length > 0 && (\r\n                                <ListItem\r\n                                    className='settings-list-item'\r\n                                    button\r\n                                    disableRipple\r\n                                    onClick={this.handleTerminateAllOther}>\r\n                                    <ListItemIcon>\r\n                                        <StopIcon color='secondary' />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText\r\n                                        primaryTypographyProps={{ color: 'secondary' }}\r\n                                        primary={t('TerminateAllSessions')}\r\n                                    />\r\n                                </ListItem>\r\n                            )}\r\n                        </div>\r\n                    )}\r\n                    {other.length > 0 && (\r\n                        <>\r\n                            <div className='sidebar-page-section-divider' />\r\n                            <div className='sidebar-page-section'>\r\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\r\n                                {other.map(x => (\r\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\r\n                                ))}\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={open}\r\n                    onClose={this.handleCloseConfirmation}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('TerminateSessionText')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    open={openAll}\r\n                    onClose={this.handleCloseAllConfirmation}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\r\n                            {t('AreYouSureSessions')}\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nActiveSessions.propTypes = {\r\n    sessions: PropTypes.object.isRequired,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ActiveSessions);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\r\n    'Unblock'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTranslation, withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport SectionHeader from '../SectionHeader';\r\nimport User from '../../Tile/User';\r\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\r\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\r\nimport { openUser } from '../../../Actions/Client';\r\nimport { unblockSender } from '../../../Actions/Message';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './BlockedUsers.css';\r\n\r\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\r\n    const [contextMenu, setContextMenu] = React.useState(false);\r\n    const [top, setTop] = React.useState(0);\r\n    const [left, setLeft] = React.useState(0);\r\n    const { t } = useTranslation();\r\n\r\n    const handleContextMenu = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        if (contextMenu) {\r\n            setContextMenu(false);\r\n        } else {\r\n            const { clientX, clientY } = event;\r\n\r\n            setContextMenu(true);\r\n            setLeft(clientX);\r\n            setTop(clientY);\r\n        }\r\n    };\r\n\r\n    const handleCloseContextMenu = () => {\r\n        setContextMenu(false);\r\n        setLeft(0);\r\n        setTop(0);\r\n    };\r\n\r\n    const handleClick = () => {\r\n        onClick(userId);\r\n    };\r\n\r\n    const handleUnblock = () => {\r\n        handleCloseContextMenu();\r\n        onUnblock(userId);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n            <Popover\r\n                open={contextMenu}\r\n                onClose={handleCloseContextMenu}\r\n                anchorReference='anchorPosition'\r\n                anchorPosition={{ top, left }}\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right'\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left'\r\n                }}\r\n                onMouseDown={e => e.stopPropagation()}>\r\n                <MenuList onClick={e => e.stopPropagation()}>\r\n                    <MenuItem onClick={handleUnblock}>\r\n                        <ListItemIcon>\r\n                            <UnblockIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('Unblock')} />\r\n                    </MenuItem>\r\n                </MenuList>\r\n            </Popover>\r\n        </>\r\n    );\r\n});\r\n\r\nBlockedUser.propTypes = {\r\n    userId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    onUnblock: PropTypes.func.isRequired\r\n};\r\n\r\nclass BlockedUsers extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n    }\r\n\r\n    loadContent() {\r\n        const { users } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadUsersContent(store, users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => x.user_id));\r\n        loadChatsContent(store, users.senders.filter(x => x['@type'] === 'messageSenderChat').map(x => x.chat_id));\r\n    }\r\n\r\n    handleUnblockUser = async userId => {\r\n        unblockSender({ '@type': 'messageSenderUser', user_id: userId });\r\n    };\r\n\r\n    render() {\r\n        const { onClose, users, t } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        { users.senders.length > 0 ? (\r\n                            <>\r\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\r\n                                {\r\n                                    users.senders.filter(x => x['@type'] === 'messageSenderUser').map(x => <BlockedUser key={x.user_id} userId={x.user_id} onClick={openUser} onUnblock={this.handleUnblockUser}/>)\r\n                                }\r\n                            </>\r\n                        ) : (\r\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nBlockedUsers.propTypes = {\r\n    users: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(BlockedUsers);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\r\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\r\n    </g>,\r\n    'Device'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\r\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\r\n    </g>,\r\n    'RemoveMember'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ActiveSessions from './ActiveSessions';\r\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\r\nimport BlockedUsers from './BlockedUsers';\r\nimport DeviceIcon from '../../../Assets/Icons/Device';\r\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\r\nimport SidebarPage from '../SidebarPage';\r\nimport SectionHeader from '../SectionHeader';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './PrivacySecurity.css';\r\n\r\nclass PrivacySecurity extends React.Component {\r\n    state = {\r\n        sessions: null,\r\n        users: null,\r\n        openBlockedUsers: false,\r\n        openActiveSessions: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n    }\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { user_id, user_full_info } = update;\r\n        const { users } = this.state;\r\n        if (!users) return;\r\n\r\n        const { total_count, senders } = users;\r\n        const { is_blocked } = user_full_info;\r\n        const prevIsBlocked = senders.findIndex(x => x.user_id === user_id) !== -1;\r\n        if (is_blocked === prevIsBlocked) return;\r\n\r\n        if (is_blocked) {\r\n            this.setState({\r\n                users: {\r\n                    ...users,\r\n                    total_count: total_count + 1,\r\n                    senders: [{ '@type': 'messageSenderUser', user_id }, ...senders]\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({\r\n                users: {\r\n                    ...users,\r\n                    total_count: total_count - 1,\r\n                    senders: senders.filter(x => x.user_id !== user_id)\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        TdLibController.send({\r\n            '@type': 'getActiveSessions'\r\n        }).then(sessions => this.setState({ sessions }));\r\n\r\n        TdLibController.send({\r\n            '@type': 'getBlockedMessageSenders',\r\n            offset: 0,\r\n            limit: 100\r\n        }).then(users => this.setState({ users }));\r\n    }\r\n\r\n    openActiveSessions = () => {\r\n        if (!this.state.sessions) return;\r\n\r\n        this.setState({\r\n            openActiveSessions: true\r\n        });\r\n    };\r\n\r\n    closeActiveSessions = () => {\r\n        this.setState({\r\n            openActiveSessions: false\r\n        });\r\n    };\r\n\r\n    openBlockedUsers = () => {\r\n        if (!this.state.users) return;\r\n\r\n        this.setState({\r\n            openBlockedUsers: true\r\n        });\r\n    };\r\n\r\n    closeBlockedUsers = () => {\r\n        this.setState({\r\n            openBlockedUsers: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, onClose } = this.props;\r\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\r\n\r\n        const sessionsCount =\r\n            sessions && sessions.sessions.length > 0\r\n                ? sessions.sessions.length === 1\r\n                    ? '1 session'\r\n                    : `${sessions.sessions.length} sessions`\r\n                : '1 session';\r\n\r\n        const usersCount =\r\n            users && users.total_count > 0\r\n                ? users.total_count === 1\r\n                    ? '1 user'\r\n                    : `${users.total_count} users`\r\n                : 'no users';\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={onClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='sidebar-page-section'>\r\n                        <ListItem\r\n                            className='settings-list-item2'\r\n                            role={undefined}\r\n                            button\r\n                            onClick={this.openBlockedUsers}>\r\n                            <ListItemIcon className='settings-list-item-icon'>\r\n                                <RemoveMemberIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                className='settings-list-item-text'\r\n                                primary={t('BlockedUsers')}\r\n                                secondary={usersCount}\r\n                            />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            className='settings-list-item2'\r\n                            role={undefined}\r\n                            button\r\n                            onClick={this.openActiveSessions}>\r\n                            <ListItemIcon className='settings-list-item-icon'>\r\n                                <DeviceIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                                id='label-2'\r\n                                className='settings-list-item-text'\r\n                                primary={t('SessionsTitle')}\r\n                                secondary={sessionsCount}\r\n                            />\r\n                        </ListItem>\r\n                    </div>\r\n                    {/*<div className='sidebar-page-section-divider' />*/}\r\n                    {/*<div className='sidebar-page-section'>*/}\r\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\r\n                    {/*            secondary={t('LastSeenContacts')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('LastSeenTitle')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\r\n                    {/*        <ListItemText*/}\r\n                    {/*            className='settings-list-item-text2'*/}\r\n                    {/*            primary={t('WhoCanAddMe')}*/}\r\n                    {/*            secondary={t('LastSeenEverybody')}*/}\r\n                    {/*        />*/}\r\n                    {/*    </ListItem>*/}\r\n                    {/*</div>*/}\r\n                </div>\r\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\r\n                    <BlockedUsers users={users} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\r\n                    <ActiveSessions sessions={sessions} />\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nPrivacySecurity.propTypes = {\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(PrivacySecurity);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\r\nimport Main from './Main';\r\nimport EditProfile from './EditProfile';\r\nimport Filters from './Filters';\r\nimport General from './General';\r\nimport Language from '../Language';\r\nimport Notifications from './Notifications';\r\nimport PrivacySecurity from './PrivacySecurity';\r\nimport SidebarPage from '../SidebarPage';\r\nimport { loadChatContent } from '../../../Utils/File';\r\nimport ChatStore from '../../../Stores/ChatStore';\r\nimport FileStore from '../../../Stores/FileStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './Settings.css';\r\n\r\nclass Settings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            openEditProfile: false,\r\n            openGeneral: false,\r\n            openNotifications: false,\r\n            openPrivacySecurity: false,\r\n            openLanguage: false,\r\n            openFilters: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\r\n    }\r\n\r\n    onUpdateChatPhoto = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id, photo } = update;\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (!photo) return;\r\n\r\n        const store = FileStore.get();\r\n        loadChatContent(store, chatId, true);\r\n    };\r\n\r\n    async loadContent() {\r\n        const { chatId } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n\r\n        loadChatContent(store, chatId, true);\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getUserFullInfo',\r\n            user_id: UserStore.getMyId()\r\n        });\r\n\r\n        UserStore.setFullInfo(UserStore.getMyId(), result);\r\n    }\r\n\r\n    openEditProfile = () => {\r\n        this.setState({\r\n            openEditProfile: true\r\n        });\r\n    };\r\n\r\n    closeEditProfile = () => {\r\n        this.setState({\r\n            openEditProfile: false\r\n        });\r\n    };\r\n\r\n    openGeneral = () => {\r\n        this.setState({\r\n            openGeneral: true\r\n        });\r\n    };\r\n\r\n    closeGeneral = () => {\r\n        this.setState({\r\n            openGeneral: false\r\n        });\r\n    };\r\n\r\n    openNotifications = () => {\r\n        this.setState({\r\n            openNotifications: true\r\n        });\r\n    };\r\n\r\n    closeNotifications = () => {\r\n        this.setState({\r\n            openNotifications: false\r\n        });\r\n    };\r\n\r\n    openPrivacySecurity = () => {\r\n        this.setState({\r\n            openPrivacySecurity: true\r\n        });\r\n    };\r\n\r\n    closePrivacySecurity = () => {\r\n        this.setState({\r\n            openPrivacySecurity: false\r\n        });\r\n    };\r\n\r\n    openLanguage = () => {\r\n        this.setState({\r\n            openLanguage: true\r\n        });\r\n    };\r\n\r\n    closeLanguage = () => {\r\n        this.setState({\r\n            openLanguage: false\r\n        });\r\n    };\r\n\r\n    openFilters = () => {\r\n        this.setState({\r\n            openFilters: true\r\n        });\r\n    };\r\n\r\n    closeFilters = () => {\r\n        this.setState({\r\n            openFilters: false\r\n        });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSettings',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, popup } = this.props;\r\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Main\r\n                    chatId={chatId}\r\n                    popup={popup}\r\n                    onClose={this.handleCloseSettings}\r\n                    onEditProfile={this.openEditProfile}\r\n                    onGeneral={this.openGeneral}\r\n                    onNotifications={this.openNotifications}\r\n                    onPrivacySecurity={this.openPrivacySecurity}\r\n                    onLanguage={this.openLanguage}\r\n                    onFilters={this.openFilters}\r\n                />\r\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\r\n                    <EditProfile chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\r\n                    <General chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\r\n                    <Notifications chatId={chatId} />\r\n                </SidebarPage>\r\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\r\n                    <PrivacySecurity />\r\n                </SidebarPage>\r\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\r\n                    <Filters />\r\n                </SidebarPage>\r\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\r\n                    <Language />\r\n                </SidebarPage>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nSettings.propTypes = {\r\n    chatId: PropTypes.number,\r\n    popup: PropTypes.bool\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(Settings);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport User from '../Tile/User';\r\nimport SearchInput from './Search/SearchInput';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { debounce, throttle } from '../../Utils/Common';\r\nimport { openUser } from '../../Actions/Client';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Contacts.css';\r\n\r\nclass UserListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { userId, style } = this.props;\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { userId, onClick, style } = this.props;\r\n\r\n        return (\r\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nclass Contacts extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.searchInputRef = React.createRef();\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n\r\n        this.state = {\r\n            items: null,\r\n            searchItems: null\r\n        };\r\n\r\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\r\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { current } = this.searchInputRef;\r\n        if (current) {\r\n            setTimeout(() => current.focus(), 50);\r\n        }\r\n\r\n        this.loadContent();\r\n    }\r\n\r\n    handleScroll = event => {\r\n        this.handleDebounceScroll();\r\n        this.handleThrottleScroll();\r\n    };\r\n\r\n    handleDebounceScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    handleThrottleScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    loadRenderIdsContent = () => {\r\n        const { items, searchItems } = this.state;\r\n\r\n        const currentItems = searchItems || items;\r\n\r\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\r\n        if (!current) return;\r\n\r\n        const renderIds = current.getListRenderIds();\r\n        if (renderIds.size > 0) {\r\n            const userIds = [];\r\n            [...renderIds.keys()].forEach(key => {\r\n                userIds.push(currentItems.user_ids[key]);\r\n            });\r\n\r\n            const store = FileStore.getStore();\r\n            loadUsersContent(store, userIds);\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        let contacts = CacheStore.contacts;\r\n        if (!contacts) {\r\n            contacts = await TdLibController.send({\r\n                '@type': 'getContacts'\r\n            });\r\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\r\n            CacheStore.contacts = contacts;\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\r\n\r\n        this.setState({\r\n            items: contacts\r\n        });\r\n    }\r\n\r\n    handleOpenUser = userId => {\r\n        openUser(userId, false);\r\n        this.handleClose();\r\n    };\r\n\r\n    renderItem = ({ index, style }, items) => {\r\n        const userId = items.user_ids[index];\r\n\r\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text.trim();\r\n        if (!query) {\r\n            this.setState({\r\n                searchItems: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const searchItems = await TdLibController.send({\r\n            '@type': 'searchContacts',\r\n            query,\r\n            limit: 1000\r\n        });\r\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\r\n            getUserFullName(x).localeCompare(getUserFullName(y))\r\n        );\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\r\n\r\n        this.setState({ searchItems });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateContacts',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { popup } = this.props;\r\n        const { items, searchItems } = this.state;\r\n\r\n        const style = popup ? { minHeight: 800 } : null;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\r\n                </div>\r\n                <div className='contacts-content' style={style}>\r\n                    {items && (\r\n                        <VirtualizedList\r\n                            ref={this.listRef}\r\n                            className='contacts-list'\r\n                            source={items.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, items)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                    {searchItems && (\r\n                        <VirtualizedList\r\n                            ref={this.searchListRef}\r\n                            className='contacts-list contacts-search-list'\r\n                            source={searchItems.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, searchItems)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nContacts.propTypes = {\r\n    popup: PropTypes.bool\r\n};\r\n\r\nexport default Contacts;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport DownloadIcon from '../../Assets/Icons/Download';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './UpdatePanel.css';\r\n\r\nclass UpdatePanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { isSmallWidth } = AppStore;\r\n\r\n        this.state = {\r\n            newContentAvailable: false,\r\n            isSmallWidth\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n    }\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        this.setState({ isSmallWidth });\r\n    };\r\n\r\n    onClientUpdateNewContentAvailable = () => {\r\n        this.setState({ newContentAvailable: true });\r\n    };\r\n\r\n    handleUpdate = () => {\r\n        if (this.handled) return;\r\n\r\n        this.handled = true;\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 250);\r\n    };\r\n\r\n    render() {\r\n        const { newContentAvailable, isSmallWidth } = this.state;\r\n        const { t } = this.props;\r\n\r\n        if (!newContentAvailable) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\r\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(UpdatePanel);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NextIcon from '../../Assets/Icons/Back';\r\nimport NewChatPhoto from './NewChatPhoto';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './NewGroup.css';\r\n\r\nclass NewChannel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n        this.descriptionRef = React.createRef();\r\n\r\n        this.state = {\r\n            error: false,\r\n            defaultPhoto: null,\r\n            defaultPhotoURL: null,\r\n            defaultPhotoFile: null\r\n        };\r\n    }\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewChannel',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    handleDone = async () => {\r\n        const { error } = this.state;\r\n        const { defaultPhoto, defaultPhotoFile } = this.state;\r\n\r\n        const title = this.titleRef.current.value.trim();\r\n        if (!title) {\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({\r\n                error: false\r\n            });\r\n        }\r\n\r\n        this.handleClose();\r\n\r\n        const description = this.descriptionRef.current.value;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createNewSupergroupChat',\r\n            title,\r\n            description,\r\n            is_channel: true,\r\n            location: null\r\n        });\r\n\r\n        if (defaultPhotoFile) {\r\n            TdLibController.send({\r\n                '@type': 'setChatPhoto',\r\n                chat_id: chat.id,\r\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\r\n            });\r\n        } else if (defaultPhoto) {\r\n            TdLibController.send({\r\n                '@type': 'setChatPhoto',\r\n                chat_id: chat.id,\r\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\r\n            });\r\n        }\r\n\r\n        openChat(chat.id);\r\n    };\r\n\r\n    handleChoosePhoto = async (blob, blobURL) => {\r\n        this.setState({\r\n            defaultPhoto: blob,\r\n            defaultPhotoURL: blobURL\r\n        });\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'uploadFile',\r\n            file: {\r\n                '@type': 'inputFileBlob',\r\n                name: 'photo.jpg',\r\n                data: blob\r\n            },\r\n            file_type: { '@type': 'fileTypePhoto' },\r\n            priority: THUMBNAIL_PRIORITY\r\n        });\r\n\r\n        this.setState({\r\n            defaultPhotoFile: result\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { popup, t } = this.props;\r\n        const { error } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('NewChannel')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='new-chat-content'>\r\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\r\n                        <div className='new-chat-title'>\r\n                            <TextField\r\n                                inputRef={this.titleRef}\r\n                                error={error}\r\n                                className='new-chat-input'\r\n                                variant='outlined'\r\n                                fullWidth\r\n                                label={t('EnterChannelName')}\r\n                                defaultValue={''}\r\n                            />\r\n                            <TextField\r\n                                inputRef={this.descriptionRef}\r\n                                className='new-chat-input'\r\n                                variant='outlined'\r\n                                fullWidth\r\n                                label={t('DescriptionOptionalPlaceholder')}\r\n                                defaultValue={''}\r\n                            />\r\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\r\n                    <NextIcon/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewChannel.propTypes = {\r\n    popup: PropTypes.bool,\r\n    userIds: PropTypes.array\r\n};\r\n\r\nexport default withTranslation()(NewChannel);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport UserTile from './UserTile';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport { getUserShortName } from '../../Utils/User';\r\nimport './UserChip.css';\r\n\r\nclass UserChip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.divRef = React.createRef();\r\n    }\r\n\r\n    getOffset() {\r\n        const {\r\n            offsetLeft: left,\r\n            offsetTop: top,\r\n            offsetWidth: width,\r\n            offsetHeight: height\r\n        } = this.divRef.current;\r\n\r\n        return { left, top, width, height }\r\n    }\r\n\r\n    setStyleCSSText(text) {\r\n        const div = this.divRef.current;\r\n        if (!div) return;\r\n\r\n        div.style.cssText = text;\r\n    }\r\n\r\n    render() {\r\n        const { userId, selected, onClick } = this.props;\r\n\r\n        return (\r\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\r\n                <UserTile userId={userId} small={true}/>\r\n                <div className='chip-delete'>\r\n                    <CloseIcon className='chip-delete-icon'/>\r\n                </div>\r\n                <div className='chip-text'>{getUserShortName(userId)}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nUserChip.propTypes = {\r\n    userId: PropTypes.number,\r\n    selected: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default UserChip;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport User from '../Tile/User';\r\nimport UserChip from '../Tile/UserChip';\r\nimport SearchInput from './Search/SearchInput';\r\nimport VirtualizedList from '../Additional/VirtualizedList';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport { debounce, throttle } from '../../Utils/Common';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Contacts.css';\r\n\r\nclass UserListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { userId, selected, style } = this.props;\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.selected !== selected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.style.top !== style.top) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { userId, selected, onClick, style } = this.props;\r\n\r\n        return (\r\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\r\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\r\n                <User userId={userId} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nclass AddParticipants extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n        this.searchInputRef = React.createRef();\r\n        this.listRef = React.createRef();\r\n        this.searchListRef = React.createRef();\r\n        this.wrapPanelRef = React.createRef();\r\n        this.itemsRef = new Map();\r\n\r\n        this.state = {\r\n            items: null,\r\n            searchItems: null,\r\n            selectedItems: {\r\n                array: [],\r\n                map: new Map()\r\n            },\r\n            focusedItem: null\r\n        };\r\n\r\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\r\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\r\n    }\r\n\r\n    getUserIds() {\r\n        return this.state.selectedItems.array;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { current } = this.searchInputRef;\r\n        if (current) {\r\n            setTimeout(() => current.focus(), 50);\r\n        }\r\n\r\n        this.loadContent();\r\n    }\r\n\r\n    handleScroll = event => {\r\n        this.handleDebounceScroll();\r\n        this.handleThrottleScroll();\r\n    };\r\n\r\n    handleDebounceScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    handleThrottleScroll() {\r\n        this.loadRenderIdsContent();\r\n    }\r\n\r\n    loadRenderIdsContent = () => {\r\n        const { items, searchItems } = this.state;\r\n\r\n        const currentItems = searchItems || items;\r\n\r\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\r\n        if (!current) return;\r\n\r\n        const renderIds = current.getListRenderIds();\r\n        if (renderIds.size > 0) {\r\n            const userIds = [];\r\n            [...renderIds.keys()].forEach(key => {\r\n                userIds.push(currentItems.user_ids[key]);\r\n            });\r\n\r\n            const store = FileStore.getStore();\r\n            loadUsersContent(store, userIds);\r\n        }\r\n    };\r\n\r\n    async loadContent() {\r\n        let contacts = CacheStore.contacts;\r\n        if (!contacts) {\r\n            contacts = await TdLibController.send({\r\n                '@type': 'getContacts'\r\n            });\r\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\r\n            CacheStore.contacts = contacts;\r\n        }\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\r\n\r\n        this.setState({\r\n            items: contacts\r\n        });\r\n    }\r\n\r\n    handleOpenUser = userId => {\r\n        const { selectedItems, focusedItem } = this.state;\r\n        const { map, array } = selectedItems;\r\n\r\n        const newMap = new Map(map);\r\n        let newArray;\r\n        let newFocusedItem = null;\r\n        let isDeleting = false;\r\n        if (map.has(userId)) {\r\n            newMap.delete(userId);\r\n            newArray = array.filter(x => x !== userId);\r\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\r\n            isDeleting = true;\r\n        } else {\r\n            newMap.set(userId, userId);\r\n            newArray = array.concat([userId]);\r\n            newFocusedItem = null;\r\n        }\r\n\r\n        const input = this.searchInputRef.current;\r\n        input.focus();\r\n        if (!isDeleting) {\r\n            input.innerText = '';\r\n            this.handleSearch('');\r\n        }\r\n\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n        const prevHeight = wrapPanel.scrollHeight;\r\n        const prevOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const prevMap = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const offset = el.getOffset();\r\n                prevMap.set(key, offset);\r\n            }\r\n        }\r\n\r\n        const prevCSSText = wrapPanel.style.cssText;\r\n        const prevScrollTop = wrapPanel.scrollTop;\r\n        if (isDeleting) {\r\n            wrapPanel.style.cssText = null;\r\n        }\r\n\r\n        this.setState({\r\n            focusedItem: newFocusedItem,\r\n            selectedItems: {\r\n                array: newArray,\r\n                map: newMap\r\n            }\r\n        }, () => {\r\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\r\n            this.animateItems(prevMap);\r\n        });\r\n    };\r\n\r\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\r\n        const wrapPanel = this.wrapPanelRef.current;\r\n\r\n        const currentHeight = wrapPanel.scrollHeight;\r\n        const currentOffsetHeight = wrapPanel.offsetHeight;\r\n\r\n        const expanded = currentHeight > prevHeight;\r\n        const collapsed = currentHeight < prevHeight;\r\n\r\n        const maxHeight = 123;\r\n        if (expanded) {\r\n            if (prevHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                    setTimeout(() => {\r\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\r\n                    }, 250);\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n        } else if (collapsed) {\r\n            if (currentHeight < maxHeight) {\r\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\r\n                requestAnimationFrame(() => {\r\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\r\n                });\r\n            } else {\r\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            }\r\n        } else {\r\n            if (isDeleting) {\r\n                wrapPanel.style.cssText = prevCSSText;\r\n                wrapPanel.scrollTop = prevScrollTop;\r\n            } else {\r\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\r\n            }\r\n        }\r\n    }\r\n\r\n    animateItems(prevOffsets) {\r\n        const doubleTransform = new Map();\r\n        for (let key of this.itemsRef.keys()) {\r\n            const el = this.itemsRef.get(key);\r\n            if (el) {\r\n                const currentOffset = el.getOffset();\r\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\r\n                if (prevOffset) {\r\n                    if (prevOffset.left < currentOffset.left) {\r\n                        doubleTransform.set(el, { prevOffset, currentOffset });\r\n                    }\r\n\r\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\r\n                    el.setStyleCSSText(transform);\r\n                }\r\n            }\r\n        }\r\n\r\n        requestAnimationFrame(() => {\r\n            for (let key of this.itemsRef.keys()) {\r\n                const el = this.itemsRef.get(key);\r\n                if (el) {\r\n                    let transition = `transition: transform 0.25s ease`;\r\n                    if (doubleTransform.has(el)) {\r\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\r\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\r\n                                   + 'transition: transform 0.1s ease;'\r\n                    }\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n            }\r\n\r\n            if (!doubleTransform.size) return;\r\n\r\n            setTimeout(() => {\r\n                for (let el of doubleTransform.keys()) {\r\n                    const { currentOffset } = doubleTransform.get(el);\r\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\r\n                                     + 'transition: transform 0s ease;';\r\n\r\n                    el.setStyleCSSText(transition);\r\n                }\r\n\r\n                requestAnimationFrame(() => {\r\n                    for (let el of doubleTransform.keys()) {\r\n                        const transition = 'transition: transform 0.15s ease';\r\n\r\n                        el.setStyleCSSText(transition);\r\n                    }\r\n                });\r\n\r\n            }, 101);\r\n        });\r\n    }\r\n\r\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\r\n        const userId = items[index];\r\n        const isSelected = selectedItemsMap.has(userId);\r\n\r\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\r\n    };\r\n\r\n    handleSearch = async text => {\r\n        const query = text.trim();\r\n        if (!query) {\r\n            this.setState({\r\n                searchItems: null,\r\n                publicItems: null,\r\n                focusedItem: null\r\n            });\r\n            return;\r\n        }\r\n\r\n        const promises = [];\r\n        promises.push(\r\n            TdLibController.send({\r\n                '@type': 'searchContacts',\r\n                query,\r\n                limit: 20\r\n            })\r\n        );\r\n        promises.push(\r\n            TdLibController.send({\r\n                '@type': 'searchPublicChats',\r\n                query\r\n            })\r\n        );\r\n        const [searchItems, publicChats] = await Promise.all(promises);\r\n\r\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\r\n            getUserFullName(x).localeCompare(getUserFullName(y))\r\n        );\r\n\r\n        const publicItems = { '@type': 'users', user_ids: [] };\r\n        publicChats.chat_ids.reduce((array, chatId) => {\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\r\n                array.push(chat.type.user_id);\r\n            }\r\n            return array;\r\n        }, publicItems.user_ids);\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, searchItems.user_ids);\r\n        loadUsersContent(store, publicItems.user_ids);\r\n\r\n        this.setState({ searchItems, publicItems, focusedItem: null });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewGroup',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    handleSearchClose = event => {\r\n        const { selectedItems, focusedItem } = this.state;\r\n        if (!selectedItems) return;\r\n\r\n        const { map } = selectedItems;\r\n        if (!map.has(focusedItem)) return;\r\n\r\n        event.stopPropagation();\r\n        event.nativeEvent.stopImmediatePropagation();\r\n\r\n        this.setState({\r\n            focusedItem: null\r\n        })\r\n    };\r\n\r\n    handleBackspace = () => {\r\n        const { selectedItems, focusedItem } = this.state;\r\n        if (!selectedItems) return;\r\n\r\n        const { array, map } = selectedItems;\r\n        if (!array) return;\r\n        if (!array.length) return;\r\n\r\n        if (map.has(focusedItem)) {\r\n            this.handleOpenUser(focusedItem);\r\n            return;\r\n        }\r\n\r\n        const lastItem = array[array.length - 1];\r\n        if (!lastItem) return;\r\n\r\n        this.setState({\r\n            focusedItem: lastItem\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { popup, t } = this.props;\r\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\r\n\r\n        const style = popup ? { minHeight: 800 } : null;\r\n\r\n        this.itemsRef.clear();\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\r\n                    </div>\r\n                </div>\r\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\r\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\r\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\r\n                </div>\r\n                <div className='contacts-border'/>\r\n                <div className='contacts-content' style={style}>\r\n                    {items && (\r\n                        <VirtualizedList\r\n                            ref={this.listRef}\r\n                            className='contacts-list'\r\n                            source={items.user_ids}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                    {searchItems && publicItems && (\r\n                        <VirtualizedList\r\n                            ref={this.searchListRef}\r\n                            className='contacts-list contacts-search-list'\r\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\r\n                            rowHeight={72}\r\n                            overScanCount={20}\r\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\r\n                            onScroll={this.handleScroll}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAddParticipants.propTypes = {\r\n    popup: PropTypes.bool,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(AddParticipants);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport SectionHeader from './SectionHeader';\r\nimport User from '../Tile/User';\r\nimport NewChatPhoto from './NewChatPhoto';\r\nimport { loadUsersContent } from '../../Utils/File';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './NewGroupParams.css';\r\n\r\nclass UserListItem extends React.Component {\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { userId } = this.props;\r\n        if (nextProps.userId !== userId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { userId, style } = this.props;\r\n\r\n        return (\r\n            <ListItem className='user-list-item' button style={style}>\r\n                <User userId={userId} />\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\n\r\nclass NewGroupParams extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.titleRef = React.createRef();\r\n\r\n        this.state = {\r\n            error: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { userIds } = this.props;\r\n\r\n        const store = FileStore.getStore();\r\n        loadUsersContent(store, userIds);\r\n    }\r\n\r\n    getTitle() {\r\n        const { error } = this.state;\r\n\r\n        const title = this.titleRef.current.value.trim();\r\n        if (!title) {\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return title;\r\n        }\r\n\r\n        if (error) {\r\n            this.setState({\r\n                error: false\r\n            })\r\n        }\r\n\r\n        return title;\r\n    }\r\n\r\n    handleClose = () => {\r\n        const { onClose } = this.props;\r\n        if (!onClose) return;\r\n\r\n        onClose();\r\n    };\r\n\r\n    render() {\r\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\r\n        const { error } = this.state;\r\n\r\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\r\n\r\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\r\n\r\n        return (\r\n            <>\r\n                <div className='header-master'>\r\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\r\n                        <ArrowBackIcon />\r\n                    </IconButton>\r\n                    <div className='header-status grow cursor-pointer'>\r\n                        <span className='header-status-content'>{t('NewGroup')}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='sidebar-page-content'>\r\n                    <div className='new-chat-content'>\r\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\r\n                        <div className='new-chat-title'>\r\n                            <TextField\r\n                                inputRef={this.titleRef}\r\n                                error={error}\r\n                                className='new-chat-input'\r\n                                variant='outlined'\r\n                                fullWidth\r\n                                label={t('GroupName')}\r\n                                defaultValue={''}\r\n                            />\r\n                        </div>\r\n                        <SectionHeader>{itemsCaption}</SectionHeader>\r\n                        {items}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewGroupParams.propTypes = {\r\n    userIds: PropTypes.array,\r\n    defaultPhotoURL: PropTypes.string,\r\n    onChoosePhoto: PropTypes.func,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(NewGroupParams);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AddParticipants from './AddParticipants';\r\nimport NewGroupParams from './NewGroupParams';\r\nimport SidebarPage from './SidebarPage';\r\nimport NextIcon from '../../Assets/Icons/Back';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './NewGroup.css';\r\n\r\nclass NewGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.addParticipantsRef = React.createRef();\r\n        this.newGroupParamsRef = React.createRef();\r\n\r\n        this.state = {\r\n            openParams: false,\r\n            userIds: [],\r\n            defaultPhoto: null,\r\n            defaultPhotoURL: null,\r\n            defaultPhotoFile: null\r\n        };\r\n    }\r\n\r\n    handleDone = async () => {\r\n        const { openParams } = this.state;\r\n        if (!openParams) {\r\n            const userIds = this.addParticipantsRef.current.getUserIds();\r\n            if (!userIds.length) return;\r\n\r\n            this.setState({\r\n                openParams: true,\r\n                userIds\r\n            })\r\n        } else {\r\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\r\n\r\n            const title = this.newGroupParamsRef.current.getTitle();\r\n            if (!title) {\r\n                return;\r\n            }\r\n\r\n            this.handleClose();\r\n\r\n            const chat = await TdLibController.send({\r\n                '@type': 'createNewSupergroupChat',\r\n                title,\r\n                is_channel: false,\r\n                description: '',\r\n                location: null\r\n            });\r\n\r\n            if (defaultPhotoFile) {\r\n                TdLibController.send({\r\n                    '@type': 'setChatPhoto',\r\n                    chat_id: chat.id,\r\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\r\n                });\r\n            } else if (defaultPhoto) {\r\n                TdLibController.send({\r\n                    '@type': 'setChatPhoto',\r\n                    chat_id: chat.id,\r\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\r\n                });\r\n            }\r\n\r\n            if (userIds.length > 0) {\r\n                TdLibController.send({\r\n                    '@type': 'addChatMembers',\r\n                    chat_id: chat.id,\r\n                    user_ids: userIds\r\n                });\r\n            }\r\n\r\n            openChat(chat.id);\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewGroup',\r\n            open: false\r\n        });\r\n    };\r\n\r\n    handleCloseParams = () => {\r\n        this.setState({\r\n            openParams: false,\r\n            userIds: []\r\n        })\r\n    };\r\n\r\n    handleChoosePhoto = async (blob, blobURL) => {\r\n        this.setState({\r\n            defaultPhoto: blob,\r\n            defaultPhotoURL: blobURL\r\n        });\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'uploadFile',\r\n            file: {\r\n                '@type': 'inputFileBlob',\r\n                name: 'photo.jpg',\r\n                data: blob\r\n            },\r\n            file_type: { '@type': 'fileTypePhoto' },\r\n            priority: THUMBNAIL_PRIORITY\r\n        });\r\n\r\n        this.setState({\r\n            defaultPhotoFile: result\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { popup } = this.props;\r\n        const { openParams, userIds, defaultPhotoURL } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\r\n\r\n                <SidebarPage open={openParams}>\r\n                    <NewGroupParams\r\n                        ref={this.newGroupParamsRef}\r\n                        defaultPhotoURL={defaultPhotoURL}\r\n                        userIds={userIds}\r\n                        onChoosePhoto={this.handleChoosePhoto}\r\n                        onClose={this.handleCloseParams}\r\n                    />\r\n                </SidebarPage>\r\n\r\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\r\n                    <NextIcon/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nNewGroup.propTypes = {\r\n    popup: PropTypes.bool,\r\n    userIds: PropTypes.array\r\n};\r\n\r\nexport default withTranslation()(NewGroup);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Contacts from '../ColumnLeft/Contacts';\r\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\r\nimport Search from '../ColumnLeft/Search/Search';\r\nimport Settings from '../ColumnLeft/Settings/Settings';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './ChatInfoDialog.css';\r\nimport { openChat } from '../../Actions/Client';\r\nimport NewChannel from '../ColumnLeft/NewChannel';\r\nimport NewGroup from '../ColumnLeft/NewGroup';\r\n\r\nclass SidebarDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.headerRef = React.createRef();\r\n\r\n        this.state = {\r\n            openSearch: false,\r\n            openSettings: false,\r\n            openContacts: false,\r\n            openNewGroup: false,\r\n            openNewChannel: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\r\n\r\n        if (nextState.openSearch !== openSearch) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchText !== searchText) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSettings !== openSettings) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openContacts !== openContacts) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewGroup !== openNewGroup) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewChannel !== openNewChannel) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n    }\r\n\r\n    onClientUpdateSearchChat = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { chatId, query } = update;\r\n        const { openSearch, searchChatId, searchText } = this.state;\r\n\r\n        if (openSearch && chatId === searchChatId && query === searchText) {\r\n            return;\r\n        }\r\n\r\n        this.query = query;\r\n        this.setState(\r\n            {\r\n                openSearch: true,\r\n                searchChatId: chatId,\r\n                searchText: null\r\n            }\r\n        );\r\n    };\r\n\r\n    handleDialogEnter = () => {\r\n        if (!this.query) return;\r\n\r\n        const header = this.headerRef.current;\r\n        if (header) {\r\n            header.setInitQuery(this.query);\r\n        }\r\n\r\n        this.query = null;\r\n    };\r\n\r\n    onClientUpdateSettings = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open, chatId } = update;\r\n\r\n        this.setState({ openSettings: open, meChatId: chatId });\r\n    };\r\n\r\n    onClientUpdateContacts = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openContacts: open });\r\n    };\r\n\r\n    onClientUpdateNewGroup = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewGroup: open });\r\n    };\r\n\r\n    onClientUpdateNewChannel = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (!isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewChannel: open });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            openSettings: false,\r\n            openContacts: false,\r\n            openNewGroup: false,\r\n            openNewChannel: false,\r\n            openSearch: false\r\n        });\r\n    };\r\n\r\n    handleSearch = visible => {\r\n        this.setState({\r\n            openSearch: visible,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSearchTextChange = text => {\r\n        this.setState({\r\n            searchText: text,\r\n            query: null\r\n        });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, openSearch) => {\r\n        openChat(chatId, messageId);\r\n\r\n        this.handleCloseSearch();\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.setState({\r\n            openSearch: false,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\r\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                open\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                classes={{\r\n                    root: 'chat-info-dialog-root',\r\n                    container: 'chat-info-dialog-container',\r\n                    paper: 'chat-info-dialog-paper'\r\n                }}\r\n                onEnter={this.handleDialogEnter}\r\n                >\r\n                {openSettings && <Settings chatId={meChatId} popup/>}\r\n                {openContacts && <Contacts popup />}\r\n                {openNewGroup && <NewGroup popup/>}\r\n                {openNewChannel && <NewChannel popup />}\r\n                {openSearch && (\r\n                    <>\r\n                        <DialogsHeader\r\n                            ref={this.headerRef}\r\n                            openSearch={true}\r\n                            timeout={false}\r\n                            onClick={this.handleHeaderClick}\r\n                            onSearch={this.handleSearch}\r\n                            onSearchTextChange={this.handleSearchTextChange}\r\n                            popup\r\n                        />\r\n                        <div className='search-content'>\r\n                            <Search\r\n                                chatId={searchChatId}\r\n                                text={searchText}\r\n                                onSelectMessage={this.handleSelectMessage}\r\n                                onClose={this.handleCloseSearch}\r\n                            />\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nSidebarDialog.propTypes = {};\r\n\r\nexport default SidebarDialog;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport { orderCompare } from './Common';\r\nimport { getChatOrder } from './Chat';\r\nimport ChatStore from '../Stores/ChatStore';\r\n\r\nexport function getArchiveTitle() {\r\n    const archive = ChatStore.chatList.get('chatListArchive');\r\n    const chats = [];\r\n    const chatsOrder = [];\r\n    if (archive) {\r\n        for (const chatId of archive.keys()) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat) {\r\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\r\n                if (order !== '0') chats.push(chat);\r\n                chatsOrder.push({ order, id: chatId, title: chat.title });\r\n            }\r\n        }\r\n    }\r\n\r\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\r\n\r\n    return orderedChats.map(x => x.title).join(', ');\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport CSSTransition from 'react-transition-group/CSSTransition';\r\nimport Archive from './Archive';\r\nimport Search from './Search/Search';\r\nimport Filters from './Filters';\r\nimport DialogsHeader from './DialogsHeader';\r\nimport DialogsList from './DialogsList';\r\nimport SidebarPage from './SidebarPage';\r\nimport Settings from './Settings/Settings';\r\nimport Contacts from './Contacts';\r\nimport UpdatePanel from './UpdatePanel';\r\nimport SidebarDialog from '../Popup/SidebarDialog';\r\nimport NewGroup from './NewGroup';\r\nimport NewChannel from './NewChannel';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { getArchiveTitle } from '../../Utils/Archive';\r\nimport { loadChatsContent } from '../../Utils/File';\r\nimport { duration } from '@material-ui/core/styles/transitions';\r\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport CacheStore from '../../Stores/CacheStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport FilterStore from '../../Stores/FilterStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Dialogs.css';\r\n\r\nconst defaultTimeout = {\r\n    enter: duration.enteringScreen,\r\n    exit: duration.leavingScreen\r\n};\r\n\r\nclass Dialogs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialogListRef = React.createRef();\r\n        this.archiveListRef = React.createRef();\r\n        this.dialogsHeaderRef = React.createRef();\r\n\r\n        this.state = {\r\n            cache: null,\r\n\r\n            showArchive: false,\r\n            archiveTitle: null,\r\n\r\n            mainItems: [],\r\n            archiveItems: [],\r\n\r\n            timeout: defaultTimeout,\r\n            openSearch: false,\r\n            openArchive: false,\r\n            openContacts: false,\r\n            openSettings: false,\r\n            openNewGroup: false,\r\n            openNewChannel: false,\r\n\r\n            searchChatId: 0,\r\n            searchText: null,\r\n            query: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const {\r\n            cache,\r\n            showArchive,\r\n            archiveTitle,\r\n            mainItems,\r\n            archiveItems,\r\n            openSearch,\r\n            openArchive,\r\n            openSettings,\r\n            openContacts,\r\n            openNewGroup,\r\n            openNewChannel,\r\n            searchChatId,\r\n            searchText\r\n        } = this.state;\r\n\r\n        if (nextState.cache !== cache) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.showArchive !== showArchive) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.archiveTitle !== archiveTitle) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.archiveItems !== archiveItems) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.mainItems !== mainItems) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSearch !== openSearch) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openArchive !== openArchive) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openSettings !== openSettings) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openContacts !== openContacts) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewGroup !== openNewGroup) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openNewChannel !== openNewChannel) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchChatId !== searchChatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.searchText !== searchText) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadCache();\r\n\r\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\r\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\r\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\r\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\r\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\r\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\r\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\r\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\r\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\r\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\r\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\r\n    }\r\n\r\n    onUpdateChatFilters = update => {\r\n        this.handleSaveCache();\r\n    };\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        if (!isSmallWidth) return;\r\n\r\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\r\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\r\n            this.setState({\r\n                    openContacts: false,\r\n                    openSettings: false,\r\n                    openSearch: false,\r\n                    openNewGroup: false,\r\n                    openNewChannel: false,\r\n                    timeout: 0\r\n                }, () => {\r\n                    this.setState({\r\n                        timeout: defaultTimeout\r\n                    });\r\n            });\r\n        }\r\n    };\r\n\r\n    async loadCache() {\r\n        const cache = (await CacheStore.load()) || {};\r\n\r\n        const { chats, archiveChats } = cache;\r\n\r\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\r\n        this.setState({\r\n            cache,\r\n\r\n            showArchive: archiveChats && archiveChats.length > 0,\r\n            archiveTitle: getArchiveTitle()\r\n        });\r\n\r\n        this.loadChatContents((chats || []).map(x => x.id));\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateCacheLoaded'\r\n        });\r\n    }\r\n\r\n    async saveCache() {\r\n        const promises = [];\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListMain' },\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: CHAT_SLICE_LIMIT\r\n        }));\r\n        promises.push(TdLibController.send({\r\n            '@type': 'getChats',\r\n            chat_list: { '@type': 'chatListArchive' },\r\n            offset_order: '9223372036854775807',\r\n            offset_chat_id: 0,\r\n            limit: CHAT_SLICE_LIMIT\r\n        }));\r\n        const [mainChats, archiveChats] = await Promise.all(promises);\r\n\r\n        const { filters } = FilterStore;\r\n\r\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\r\n    }\r\n\r\n    onUpdateChatOrder = update => {\r\n        const { showArchive: prevShowArchive } = this.state;\r\n\r\n        const { current: mainCurrent } = this.dialogListRef;\r\n        if (mainCurrent && mainCurrent.loading) {\r\n            return;\r\n        }\r\n\r\n        const { current: archiveCurrent } = this.archiveListRef;\r\n        if (archiveCurrent && archiveCurrent.loading) {\r\n            return;\r\n        }\r\n\r\n        const archiveList = ChatStore.chatList.get('chatListArchive');\r\n        const showArchive = archiveList && archiveList.size > 0;\r\n\r\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\r\n            if (!prevShowArchive && showArchive) {\r\n                const { current } = this.dialogListRef;\r\n                if (current.listRef) {\r\n                    const { current: listCurrent } = current.listRef;\r\n                    if (listCurrent && listCurrent.scrollTop > 0) {\r\n                        current.scrollTop += 68;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (prevShowArchive && !showArchive) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateCloseArchive'\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateContacts = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openContacts: open });\r\n    };\r\n\r\n    onClientUpdateSettings = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open, chatId } = update;\r\n\r\n        this.setState({ openSettings: open, meChatId: chatId });\r\n    };\r\n\r\n    onClientUpdateNewGroup = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewGroup: open });\r\n    };\r\n\r\n    onClientUpdateNewChannel = async update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { open } = update;\r\n\r\n        this.setState({ openNewChannel: open });\r\n    };\r\n\r\n    onClientUpdateArchive = update => {\r\n        const { open } = update;\r\n\r\n        this.setState({ openArchive: open });\r\n    };\r\n\r\n    onClientUpdateThemeChange = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateSearchChat = update => {\r\n        const { isSmallWidth } = AppStore;\r\n        if (isSmallWidth) return;\r\n\r\n        const { chatId, query } = update;\r\n        const { openSearch, searchChatId, searchText } = this.state;\r\n\r\n        if (openSearch && chatId === searchChatId && query === searchText) {\r\n            return;\r\n        }\r\n\r\n        const header = this.dialogsHeaderRef.current;\r\n        this.setState(\r\n            {\r\n                openSearch: true,\r\n                searchChatId: chatId,\r\n                searchText: null,\r\n                openArchive: false,\r\n                openContacts: false,\r\n                openSettings: false,\r\n                openNewGroup: false,\r\n                openNewChannel: false,\r\n            },\r\n            () => {\r\n                if (header) {\r\n                    header.setInitQuery(query);\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    handleHeaderClick = () => {\r\n        const { openArchive } = this.state;\r\n        if (openArchive) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateCloseArchive'\r\n            });\r\n        } else {\r\n            this.dialogListRef.current.scrollToTop();\r\n        }\r\n    };\r\n\r\n    handleSearch = visible => {\r\n        this.setState({\r\n            openSearch: visible,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSelectMessage = (chatId, messageId, openSearch) => {\r\n        openChat(chatId, messageId);\r\n\r\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\r\n        const searchText = openSearch ? this.state.searchText : null;\r\n\r\n        this.setState({\r\n            openSearch,\r\n            searchChatId,\r\n            searchText\r\n        });\r\n    };\r\n\r\n    handleCloseSearch = () => {\r\n        this.setState({\r\n            openSearch: false,\r\n            searchChatId: 0,\r\n            searchText: null\r\n        });\r\n    };\r\n\r\n    handleSearchTextChange = text => {\r\n        this.setState({\r\n            searchText: text,\r\n            query: null\r\n        });\r\n    };\r\n\r\n    handleSaveCache = () => {\r\n        this.saveCache();\r\n    };\r\n\r\n    loadChatContents(chatIds) {\r\n        const store = FileStore.getStore();\r\n        loadChatsContent(store, chatIds);\r\n    }\r\n\r\n    handleCloseArchive = () => {\r\n        this.setState({ openArchive: false });\r\n    };\r\n\r\n    handleCloseContacts = () => {\r\n        this.setState({ openContacts: false });\r\n    };\r\n\r\n    handleCloseSettings = () => {\r\n        this.setState({ openSettings: false });\r\n    };\r\n\r\n    handleCloseNewGroup = () => {\r\n        this.setState({ openNewGroup: false });\r\n    };\r\n\r\n    handleCloseNewChannel = () => {\r\n        this.setState({ openNewChannel: false });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            cache,\r\n            showArchive,\r\n            archiveTitle,\r\n            mainItems,\r\n            archiveItems,\r\n            meChatId,\r\n            openSettings,\r\n            openContacts,\r\n            openArchive,\r\n            openSearch,\r\n            openNewGroup,\r\n            openNewChannel,\r\n            timeout,\r\n            searchChatId,\r\n            searchText\r\n        } = this.state;\r\n\r\n        const mainCacheItems = cache ? cache.chats || [] : null;\r\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\r\n\r\n        return (\r\n            <>\r\n                <div className='dialogs'>\r\n                    <div className='sidebar-page'>\r\n                        <DialogsHeader\r\n                            ref={this.dialogsHeaderRef}\r\n                            openSearch={openSearch}\r\n                            timeout={timeout !== 0}\r\n                            onClick={this.handleHeaderClick}\r\n                            onSearch={this.handleSearch}\r\n                            onSearchTextChange={this.handleSearchTextChange}\r\n                        />\r\n                        <div className='dialogs-content'>\r\n                            <div className='dialogs-content-internal'>\r\n                                <Filters/>\r\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\r\n                                <DialogsList\r\n                                    type='chatListMain'\r\n                                    ref={this.dialogListRef}\r\n                                    cacheItems={mainCacheItems}\r\n                                    items={mainItems}\r\n                                    showArchive={showArchive}\r\n                                    archiveTitle={archiveTitle}\r\n                                    open={true}\r\n                                    onSaveCache={this.handleSaveCache}\r\n                                />\r\n                            </div>\r\n                            <CSSTransition\r\n                                classNames='search'\r\n                                timeout={timeout}\r\n                                in={openSearch}\r\n                                mountOnEnter={true}\r\n                                unmountOnExit={true}>\r\n                                <Search\r\n                                    chatId={searchChatId}\r\n                                    text={searchText}\r\n                                    onSelectMessage={this.handleSelectMessage}\r\n                                    onClose={this.handleCloseSearch}\r\n                                />\r\n                            </CSSTransition>\r\n                        </div>\r\n                        <UpdatePanel />\r\n                    </div>\r\n\r\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\r\n                        <Archive\r\n                            innerListRef={this.archiveListRef}\r\n                            items={archiveItems}\r\n                            cacheItems={archiveCacheItems}\r\n                        />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\r\n                        <Contacts />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\r\n                        <Settings chatId={meChatId} />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\r\n                        <NewGroup />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\r\n                        <NewChannel />\r\n                    </SidebarPage>\r\n\r\n                    <SidebarDialog/>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dialogs;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ChatInfo from '../ColumnRight/ChatInfo';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ApplicationStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ChatInfoDialog.css';\r\n\r\nclass ChatInfoDialog extends React.Component {\r\n    state = {\r\n        chatId: ApplicationStore.dialogChatId\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId } = this.state;\r\n\r\n        return nextState.chatId !== chatId;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\r\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\r\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n    }\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        if (ApplicationStore.mediaViewerContent) {\r\n            this.handleClose();\r\n        }\r\n    };\r\n\r\n    onClientUpdateDialogChatId = update => {\r\n        const { chatId } = update;\r\n\r\n        this.setState({ chatId });\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDialogChatId',\r\n            chatId: 0\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId } = this.state;\r\n        if (!chatId) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                open\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                classes={{\r\n                    root: 'chat-info-dialog-root',\r\n                    container: 'chat-info-dialog-container',\r\n                    paper: 'chat-info-dialog-paper'\r\n                }}>\r\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nChatInfoDialog.propTypes = {};\r\n\r\nexport default ChatInfoDialog;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\r\n    'Send'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\r\n    'Microphone'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\r\n    'Attach'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport AttachFileIcon from '../../Assets/Icons/Attach';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\r\nimport PollIcon from '@material-ui/icons/PollOutlined';\r\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\r\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\r\nimport './AttachButton.css';\r\n\r\nclass AttachButton extends React.Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleMenuClick = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleAttachPhoto = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachPhoto } = this.props;\r\n        if (!onAttachPhoto) return;\r\n\r\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\r\n    };\r\n\r\n    handleAttachDocument = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachDocument } = this.props;\r\n        if (!onAttachDocument) return;\r\n\r\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\r\n    };\r\n\r\n    handleAttachPoll = () => {\r\n        this.handleMenuClose();\r\n\r\n        const { onAttachPoll } = this.props;\r\n        if (!onAttachPoll) return;\r\n\r\n        onAttachPoll();\r\n    };\r\n\r\n    render() {\r\n        const { classes, t, chatId } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    className='inputbox-icon-button'\r\n                    aria-label='Attach'\r\n                    open={Boolean(anchorEl)}\r\n                    onClick={this.handleMenuClick}>\r\n                    <AttachFileIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='attach-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    classes={{\r\n                        paper: 'attach-button-paper'\r\n                    }}\r\n                    onClose={this.handleMenuClose}>\r\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\r\n                        <ListItemIcon>\r\n                            <PhotoIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('AttachPhoto')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\r\n                        <ListItemIcon>\r\n                            <InsertDriveFileIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('AttachDocument')} />\r\n                    </MenuItem>\r\n                    {!isPrivateChat(chatId) && (\r\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\r\n                            <ListItemIcon>\r\n                                <PollIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('Poll')} />\r\n                        </MenuItem>\r\n                    )}\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAttachButton.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    onAttachDocument: PropTypes.func.isRequired,\r\n    onAttachPhoto: PropTypes.func.isRequired,\r\n    onAttachPoll: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(AttachButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nexport function focusNode(node, toEnd = false) {\r\n    if (!node) return;\r\n\r\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\r\n        const lastNode = node.childNodes[node.childNodes.length - 1];\r\n        const range = document.createRange();\r\n        range.setStart(lastNode, lastNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        node.scrollTop = node.scrollHeight;\r\n    }\r\n\r\n    node.focus();\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nconst keys = {\r\n    backspace: 8,\r\n    shift: 16,\r\n    ctrl: 17,\r\n    alt: 18,\r\n    delete: 46,\r\n    cmd: 91,\r\n    leftArrow: 37,\r\n    upArrow: 38,\r\n    rightArrow: 39,\r\n    downArrow: 40\r\n};\r\n\r\nexport const utils = {\r\n    special: {},\r\n    navigational: {},\r\n    isSpecial(e) {\r\n        return typeof this.special[e.keyCode] !== 'undefined';\r\n    },\r\n    isNavigational(e) {\r\n        return typeof this.navigational[e.keyCode] !== 'undefined';\r\n    }\r\n};\r\n\r\nutils.special[keys['backspace']] = true;\r\nutils.special[keys['shift']] = true;\r\nutils.special[keys['ctrl']] = true;\r\nutils.special[keys['alt']] = true;\r\nutils.special[keys['delete']] = true;\r\n\r\nutils.navigational[keys['upArrow']] = true;\r\nutils.navigational[keys['downArrow']] = true;\r\nutils.navigational[keys['leftArrow']] = true;\r\nutils.navigational[keys['rightArrow']] = true;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport { focusNode } from '../../Utils/Component';\r\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\r\nimport { utils } from '../../Utils/Key';\r\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './CreatePollOption.css';\r\n\r\nclass CreatePollOption extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.optionTextRef = React.createRef();\r\n\r\n        this.state = {\r\n            remainLength: POLL_OPTION_MAX_LENGTH\r\n        };\r\n    }\r\n\r\n    getText = () => {\r\n        return this.optionTextRef.current.innerText;\r\n    };\r\n\r\n    focus = (toEnd = false) => {\r\n        const node = this.optionTextRef.current;\r\n\r\n        focusNode(node, toEnd);\r\n    };\r\n\r\n    handleDelete = () => {\r\n        const { option, onDelete } = this.props;\r\n        if (!option) return;\r\n        if (!onDelete) return;\r\n\r\n        onDelete(option.id);\r\n    };\r\n\r\n    handleInput = event => {\r\n        const { option } = this.props;\r\n\r\n        event.preventDefault();\r\n\r\n        const node = this.optionTextRef.current;\r\n        const length = node.dataset.length;\r\n        const maxLength = node.dataset.maxLength;\r\n        const text = this.getText();\r\n\r\n        this.setState({\r\n            remainLength: length - text.length\r\n        });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollOption',\r\n            id: option.id,\r\n            text\r\n        });\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const node = this.optionTextRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n        const innerText = this.getText();\r\n        const length = innerText.length;\r\n\r\n        let hasSelection = false;\r\n        const selection = window.getSelection();\r\n        const isSpecial = utils.isSpecial(event);\r\n        const isNavigational = utils.isNavigational(event);\r\n\r\n        if (selection) {\r\n            hasSelection = !!selection.toString();\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Backspace': {\r\n                const text = this.getText();\r\n                if (!text) {\r\n                    const { option, onDelete } = this.props;\r\n                    if (onDelete) {\r\n                        onDelete(option.id, true);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'Enter': {\r\n                const { option, onFocusNext } = this.props;\r\n                if (option && onFocusNext) {\r\n                    onFocusNext(option.id);\r\n                }\r\n\r\n                event.preventDefault();\r\n                return false;\r\n            }\r\n            case 'ArrowUp': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\r\n\r\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\r\n                    const { option, onFocusPrev } = this.props;\r\n                    if (onFocusPrev) {\r\n                        onFocusPrev(option.id);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const lastChild =\r\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\r\n\r\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\r\n                    const { option, onFocusNext } = this.props;\r\n                    if (onFocusNext) {\r\n                        onFocusNext(option.id);\r\n                    }\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isSpecial || isNavigational) {\r\n            return true;\r\n        }\r\n\r\n        if (length >= maxLength && !hasSelection) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handlePaste = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.optionTextRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n\r\n        const selection = window.getSelection();\r\n        const selectionString = selection ? selection.toString() : '';\r\n\r\n        const innerText = this.getText();\r\n        if (innerText.length - selection.length >= maxLength) return;\r\n\r\n        let pasteText = event.clipboardData.getData('text/plain');\r\n        if (!pasteText) return;\r\n\r\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\r\n\r\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\r\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\r\n        }\r\n        document.execCommand('insertText', false, pasteText);\r\n    };\r\n\r\n    handleChange = () => {\r\n        const { option } = this.props;\r\n        if (!option) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChooseOption',\r\n            id: option.id\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { t, option } = this.props;\r\n        const { remainLength } = this.state;\r\n\r\n        const { is_chosen } = option;\r\n\r\n        return (\r\n            <div className='create-poll-option'>\r\n                <div className='create-poll-option-wrapper'>\r\n                    <Radio\r\n                        key={Date.now()}\r\n                        classes={{ root: 'create-poll-radio-root' }}\r\n                        color='primary'\r\n                        checked={is_chosen}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <div\r\n                        ref={this.optionTextRef}\r\n                        className='create-poll-option-text'\r\n                        contentEditable\r\n                        suppressContentEditableWarning\r\n                        placeholder={t('Option')}\r\n                        data-length={POLL_OPTION_LENGTH}\r\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\r\n                        onInput={this.handleInput}\r\n                        onKeyDown={this.handleKeyDown}\r\n                        onPaste={this.handlePaste}\r\n                    />\r\n                </div>\r\n                <div className='create-poll-option-delete-button'>\r\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\r\n                        <CloseIcon fontSize='small' />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='create-poll-option-bottom-border' />\r\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\r\n                    <Typography\r\n                        align='center'\r\n                        className='create-poll-option-subtitle'\r\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\r\n                        variant='subtitle1'>\r\n                        {remainLength}\r\n                    </Typography>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCreatePollOption.propTypes = {\r\n    option: PropTypes.object.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    onFocusPrev: PropTypes.func.isRequired,\r\n    onFocusNext: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(CreatePollOption);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CreatePollOption from './CreatePollOption';\r\nimport { focusNode } from '../../Utils/Component';\r\nimport { utils } from '../../Utils/Key';\r\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport {\r\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n    POLL_OPTIONS_MAX_COUNT,\r\n    POLL_QUESTION_HINT_LENGTH,\r\n    POLL_QUESTION_LENGTH,\r\n    POLL_QUESTION_MAX_LENGTH\r\n} from '../../Constants';\r\nimport PollStore from '../../Stores/PollStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './CreatePollDialog.css';\r\n\r\nclass CreatePollDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.questionRef = React.createRef();\r\n        this.optionsRefMap = new Map();\r\n\r\n        this.state = {\r\n            poll: null,\r\n            confirm: false,\r\n            remainLength: POLL_QUESTION_MAX_LENGTH\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\r\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\r\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\r\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\r\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\r\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\r\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\r\n    }\r\n\r\n    handleClientUpdateNewPoll = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({\r\n            confirm: false,\r\n            remainLength: POLL_QUESTION_MAX_LENGTH,\r\n            poll\r\n        });\r\n    };\r\n\r\n    handleClientUpdatePollQuestion = update => {\r\n        const { poll } = PollStore;\r\n\r\n        const node = this.questionRef.current;\r\n        const length = node.dataset.length;\r\n        const innerText = node.innerText;\r\n\r\n        this.setState({\r\n            remainLength: length - innerText.length,\r\n            poll\r\n        });\r\n    };\r\n\r\n    handleClientUpdatePoll = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({ poll });\r\n    };\r\n\r\n    handleClientUpdateNewPollOption = update => {\r\n        const { poll } = PollStore;\r\n\r\n        this.setState({ poll }, () => {\r\n            setTimeout(() => {\r\n                const node = this.optionsRefMap.get(poll.options.length - 1);\r\n\r\n                node.focus(true);\r\n            });\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { poll } = this.state;\r\n\r\n        if (poll && !prevState.poll) {\r\n            setTimeout(() => {\r\n                focusNode(this.questionRef.current, true);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        const node = this.questionRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n        const innerText = node.innerText;\r\n        const length = innerText.length;\r\n\r\n        let hasSelection = false;\r\n        const selection = window.getSelection();\r\n        const isSpecial = utils.isSpecial(event);\r\n        const isNavigational = utils.isNavigational(event);\r\n\r\n        if (selection) {\r\n            hasSelection = !!selection.toString();\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Enter': {\r\n                if (!event.shiftKey) {\r\n                    this.handleFocusNextOption(0);\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'ArrowDown': {\r\n                const selection = window.getSelection();\r\n                if (!selection) break;\r\n                if (!selection.isCollapsed) break;\r\n\r\n                const lastChild =\r\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\r\n\r\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\r\n                    this.handleFocusNextOption(0);\r\n\r\n                    event.preventDefault();\r\n                    return false;\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (isSpecial || isNavigational) {\r\n            return true;\r\n        }\r\n\r\n        if (length >= maxLength && !hasSelection) {\r\n            event.preventDefault();\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    handlePaste = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.questionRef.current;\r\n        const maxLength = node.dataset.maxLength;\r\n\r\n        const selection = window.getSelection();\r\n        const selectionString = selection ? selection.toString() : '';\r\n\r\n        const innerText = node.innerText;\r\n        if (innerText.length - selection.length >= maxLength) return;\r\n\r\n        let pasteText = event.clipboardData.getData('text/plain');\r\n        if (!pasteText) return;\r\n\r\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\r\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\r\n        }\r\n        document.execCommand('insertText', false, pasteText);\r\n    };\r\n\r\n    handleInput = event => {\r\n        event.preventDefault();\r\n\r\n        const node = this.questionRef.current;\r\n        //const length = node.dataset.length;\r\n\r\n        const innerText = node.innerText;\r\n        const innerHtml = node.innerHTML;\r\n\r\n        if (innerHtml === '<br>') {\r\n            node.innerText = '';\r\n        }\r\n\r\n        // this.setState({\r\n        //     remainLength: length - innerText.length\r\n        // });\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollQuestion',\r\n            question: innerText\r\n        });\r\n    };\r\n\r\n    handleAddOption = () => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\r\n\r\n        const option = {\r\n            id: Date.now(),\r\n            text: ''\r\n        };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewPollOption',\r\n            option\r\n        });\r\n    };\r\n\r\n    handleDeleteOption = (id, backspace = false) => {\r\n        if (backspace) {\r\n            this.handleDeleteByBackspace(id);\r\n        } else {\r\n            this.handleDelete(id);\r\n        }\r\n    };\r\n\r\n    handleDelete = id => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDeletePollOption',\r\n            id\r\n        });\r\n    };\r\n\r\n    handleDeleteByBackspace = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const prevIndex = index - 1;\r\n        let deleteOption = true;\r\n        for (let i = index; i < options.length; i++) {\r\n            const { text } = options[i];\r\n            if (text) {\r\n                deleteOption = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (deleteOption) {\r\n            this.handleDeleteOption(id);\r\n        }\r\n\r\n        const prevNode = this.optionsRefMap.get(prevIndex);\r\n        if (!prevNode) {\r\n            const element = this.questionRef.current;\r\n\r\n            focusNode(element, true);\r\n            return;\r\n        }\r\n\r\n        prevNode.focus(true);\r\n    };\r\n\r\n    handleFocusPrevOption = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const prevIndex = index - 1;\r\n\r\n        const prevNode = this.optionsRefMap.get(prevIndex);\r\n        if (!prevNode) {\r\n            const element = this.questionRef.current;\r\n\r\n            focusNode(element, false);\r\n            return;\r\n        }\r\n\r\n        prevNode.focus(false);\r\n    };\r\n\r\n    handleFocusNextOption = id => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const index = options.findIndex(x => x.id === id);\r\n        const nextIndex = index + 1;\r\n\r\n        const nextNode = this.optionsRefMap.get(nextIndex);\r\n        if (!nextNode) {\r\n            const text = index >= 0 && index < options.length ? options[index].text : '';\r\n            if (options.length && !text) {\r\n                return;\r\n            }\r\n\r\n            this.handleAddOption();\r\n            return;\r\n        }\r\n\r\n        nextNode.focus(nextNode, true);\r\n    };\r\n\r\n    getHint = () => {\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const { options } = poll;\r\n\r\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\r\n\r\n        if (addCount <= 0) {\r\n            return 'You have added the maximum number of options.';\r\n        }\r\n        if (addCount === 1) {\r\n            return 'You can add 1 more option.';\r\n        }\r\n\r\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { poll } = this.state;\r\n\r\n        if (hasPollData(poll)) {\r\n            this.setState({ confirm: true });\r\n        } else {\r\n            this.handleConfirmationDone();\r\n        }\r\n    };\r\n\r\n    handleSend = () => {\r\n        const { onSend } = this.props;\r\n\r\n        const inputMessagePoll = PollStore.getInputMessagePoll();\r\n        if (!inputMessagePoll) return;\r\n\r\n        onSend(inputMessagePoll);\r\n\r\n        this.handleConfirmationDone();\r\n    };\r\n\r\n    handleConfirmationClose = () => {\r\n        this.setState({ confirm: false });\r\n    };\r\n\r\n    handleConfirmationDone = () => {\r\n        this.handleConfirmationClose();\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDeletePoll'\r\n        });\r\n    };\r\n\r\n    handleChangeAnonymous = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeAnonymous'\r\n        });\r\n    };\r\n\r\n    handleChangeAllowMultipleAnswers = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\r\n        });\r\n    };\r\n\r\n    handleChangeType = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdatePollChangeType'\r\n        });\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleAllowMultipleAnswersClick = event => {\r\n        const { t } = this.props;\r\n        const { poll } = this.state;\r\n        if (!poll) return;\r\n\r\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\r\n        if (quizPoll) {\r\n            event.stopPropagation();\r\n\r\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { remainLength, confirm, poll } = this.state;\r\n        if (!poll) return null;\r\n\r\n        const { is_anonymous } = poll;\r\n\r\n        const options = poll ? poll.options : [];\r\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\r\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\r\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\r\n\r\n        this.optionsRefMap.clear();\r\n        const items = options.map((x, i) => (\r\n            <CreatePollOption\r\n                ref={el => this.optionsRefMap.set(i, el)}\r\n                key={x.id}\r\n                option={x}\r\n                onDelete={this.handleDeleteOption}\r\n                onFocusPrev={this.handleFocusPrevOption}\r\n                onFocusNext={this.handleFocusNextOption}\r\n            />\r\n        ));\r\n\r\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\r\n        const hint = this.getHint();\r\n\r\n        return (\r\n            <>\r\n                <Dialog\r\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\r\n                    open\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby='dialog-title'>\r\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\r\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\r\n                        <div className='create-poll-dialog-question-title'>\r\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\r\n                                {t('Question')}\r\n                            </Typography>\r\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\r\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\r\n                                    {remainLength}\r\n                                </Typography>\r\n                            )}\r\n                        </div>\r\n                        <div\r\n                            ref={this.questionRef}\r\n                            id='create-poll-dialog-question'\r\n                            contentEditable\r\n                            suppressContentEditableWarning\r\n                            placeholder={t('QuestionHint')}\r\n                            data-length={POLL_QUESTION_LENGTH}\r\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\r\n                            onPaste={this.handlePaste}\r\n                            onKeyDown={this.handleKeyDown}\r\n                            onInput={this.handleInput}\r\n                        />\r\n                        <Divider className='divider' />\r\n                        <Typography color='primary' variant='subtitle1'>\r\n                            {t('PollOptions')}\r\n                        </Typography>\r\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\r\n                            {items}\r\n                            {canAddOption && (\r\n                                <ListItem\r\n                                    selected={false}\r\n                                    className='create-poll-add-option'\r\n                                    button\r\n                                    onClick={this.handleAddOption}>\r\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\r\n                                </ListItem>\r\n                            )}\r\n                        </List>\r\n                        <Typography>{hint}</Typography>\r\n                        <Divider className='divider' />\r\n                        <Typography color='primary' variant='subtitle1'>\r\n                            {t('Settings')}\r\n                        </Typography>\r\n                        <FormGroup>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        color='primary'\r\n                                        checked={is_anonymous}\r\n                                        onChange={this.handleChangeAnonymous}\r\n                                    />\r\n                                }\r\n                                label={t('PollAnonymous')}\r\n                            />\r\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            color='primary'\r\n                                            disabled={allowMultipleAnswersDisabled}\r\n                                            checked={allowMultipleAnswers}\r\n                                            onChange={this.handleChangeAllowMultipleAnswers}\r\n                                        />\r\n                                    }\r\n                                    label={t('PollMultiple')}\r\n                                />\r\n                            </div>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\r\n                                }\r\n                                label={t('PollQuiz')}\r\n                            />\r\n                        </FormGroup>\r\n                        <Typography>{t('QuizInfo')}</Typography>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color='primary' onClick={this.handleClose}>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        {isValidPoll(poll) && (\r\n                            <Button color='primary' onClick={this.handleSend}>\r\n                                {t('Create')}\r\n                            </Button>\r\n                        )}\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    className='create-poll-dialog-root'\r\n                    open={confirm}\r\n                    manager={modalManager}\r\n                    transitionDuration={0}\r\n                    onClose={this.handleConfirmationClose}\r\n                    aria-labelledby='dialog-title'>\r\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\r\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\r\n                        {t('CancelPollAlertText')}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nCreatePollDialog.propTypes = {\r\n    onSend: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withSnackbar,\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(CreatePollDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { validateUrl } from '../../Utils/Url';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './EditUrlDialog.css';\r\n\r\nclass EditUrlDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.textRef = React.createRef();\r\n        this.textInputRef = React.createRef();\r\n        this.urlRef = React.createRef();\r\n        this.urlInputRef = React.createRef();\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { defaultText, defaultUrl, open } = this.props;\r\n\r\n        if (open && prevProps.open !== open) {\r\n            setTimeout(() => {\r\n                const text = this.textInputRef.current;\r\n                const url = this.urlInputRef.current;\r\n\r\n                if (!text) return;\r\n                if (!url) return;\r\n\r\n                if (!defaultText) {\r\n                    text.focus();\r\n                } else if (!defaultUrl) {\r\n                    url.focus();\r\n                } else {\r\n                    text.focus();\r\n                    text.select();\r\n                }\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // const { defaultText, defaultUrl } = this.props;\r\n        //\r\n        // const text = this.textInputRef.current;\r\n        // const url = this.urlInputRef.current;\r\n        //\r\n        // if (!text) return;\r\n        // if (!url) return;\r\n        //\r\n        // setTimeout(() => {\r\n        //     if (!defaultText) {\r\n        //         text.focus();\r\n        //     } else if (!defaultUrl) {\r\n        //         url.focus();\r\n        //     } else {\r\n        //         text.focus();\r\n        //         // text.select();\r\n        //     }\r\n        // }, 0);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\r\n        const { textError, urlError } = this.state;\r\n\r\n        if (nextProps.defaultText !== defaultText) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.defaultUrl !== defaultUrl) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.textError !== textError) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.urlError !== urlError) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.onDone !== onDone) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.onCancel !== onCancel) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.open !== open) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (state.prevOpen !== props.open) {\r\n            return {\r\n                prevOpen: true,\r\n                textError: false,\r\n                urlError: false,\r\n                text: null,\r\n                url: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleTextKeyDown = event => {\r\n        if (event.key === 'Enter') {\r\n            this.urlInputRef.current.focus();\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    };\r\n\r\n    handleUrlKeyDown = event => {\r\n        if (event.key === 'Enter') {\r\n            this.handleDone();\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n    };\r\n\r\n    handleTextChange = event => {\r\n        this.setState({\r\n            text: event.target.value\r\n        });\r\n    };\r\n\r\n    handleUrlChange = event => {\r\n        this.setState({\r\n            url: event.target.value\r\n        });\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { defaultText, defaultUrl } = this.props;\r\n        let { text, url } = this.state;\r\n\r\n        text = text !== null ? text : defaultText;\r\n        url = url !== null ? url : defaultUrl;\r\n\r\n        if (!text && !url) {\r\n            this.textInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        if (!text) {\r\n            this.setState({ textError: true });\r\n            this.textInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        url = validateUrl(url);\r\n        if (!url) {\r\n            this.setState({ urlError: true });\r\n            this.urlInputRef.current.focus();\r\n            return;\r\n        }\r\n\r\n        const { onDone } = this.props;\r\n\r\n        onDone(text, url);\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { onCancel } = this.props;\r\n\r\n        onCancel();\r\n    };\r\n\r\n    render() {\r\n        const { open, defaultUrl, defaultText, t } = this.props;\r\n        const { textError, urlError } = this.state;\r\n        if (!open) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='edit-url-dialog-title'>\r\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\r\n                <DialogContent>\r\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\r\n                        <TextField\r\n                            ref={this.textRef}\r\n                            inputRef={this.textInputRef}\r\n                            label={t('Text')}\r\n                            margin='normal'\r\n                            autoComplete='off'\r\n                            defaultValue={defaultText}\r\n                            error={textError}\r\n                            onChange={this.handleTextChange}\r\n                            onKeyDown={this.handleTextKeyDown}\r\n                        />\r\n                        <TextField\r\n                            ref={this.urlRef}\r\n                            inputRef={this.urlInputRef}\r\n                            label={t('URL')}\r\n                            margin='normal'\r\n                            autoComplete='off'\r\n                            defaultValue={defaultUrl}\r\n                            error={urlError}\r\n                            onChange={this.handleUrlChange}\r\n                            onKeyDown={this.handleUrlKeyDown}\r\n                        />\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Create')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nEditUrlDialog.propTypes = {\r\n    open: PropTypes.bool,\r\n    defaultText: PropTypes.string,\r\n    defaultUrl: PropTypes.string,\r\n    onDone: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(EditUrlDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getSrc } from '../../Utils/File';\r\nimport { isBlurredThumbnail } from '../../Utils/Media';\r\nimport { hasVideoNote } from '../../Utils/Message';\r\nimport { THUMBNAIL_BLURRED_SIZE_40, THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './ReplyTile.css';\r\n\r\nclass ReplyTile extends React.Component {\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateBlob);\r\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateBlob);\r\n    }\r\n\r\n    onClientUpdateBlob = update => {\r\n        const { chatId, messageId, thumbnail } = this.props;\r\n        if (!thumbnail) return;\r\n\r\n        const file = thumbnail.photo || thumbnail.file;\r\n        if (!file) return;\r\n\r\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === file.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, thumbnail, minithumbnail, onClick } = this.props;\r\n        if (!thumbnail) return null;\r\n\r\n        const file = thumbnail.photo || thumbnail.file;\r\n        if (!file) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const src = getSrc(file);\r\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90, THUMBNAIL_BLURRED_SIZE_40);\r\n        const isVideoNote = hasVideoNote(chatId, messageId);\r\n\r\n        return (\r\n            <div className='reply-tile' onClick={onClick}>\r\n                {miniSrc && (\r\n                    <img\r\n                        className={classNames(\r\n                            'reply-tile-photo',\r\n                            { 'reply-tile-photo-round': isVideoNote },\r\n                            { 'media-mini-blurred': true }\r\n                        )}\r\n                        draggable={false}\r\n                        src={miniSrc}\r\n                        alt=''\r\n                    />\r\n                )}\r\n                {src && (\r\n                    <img\r\n                        className={classNames(\r\n                            'reply-tile-photo',\r\n                            { 'reply-tile-photo-round': isVideoNote },\r\n                            { 'media-blurred': src && isBlurred }\r\n                        )}\r\n                        draggable={false}\r\n                        src={src}\r\n                        alt=''\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReplyTile.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    minithumbnail: PropTypes.object,\r\n    thumbnail: PropTypes.object,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default ReplyTile;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport ReplyTile from '../Tile/ReplyTile';\r\nimport { getContent, getTitle, isDeletedMessage, getReplyThumbnail, getReplyMinithumbnail } from '../../Utils/Message';\r\nimport { closePinned, openChat } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Reply.css';\r\n\r\nclass Reply extends React.Component {\r\n    componentDidMount() {\r\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\r\n    }\r\n\r\n    onGetMessageResult = result => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === result.chat_id && messageId === result.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleOpen = event => {\r\n        if (event.button !== 0) return;\r\n\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId, onClick } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n        if (isDeletedMessage(message)) return null;\r\n\r\n        openChat(chatId, messageId, false);\r\n        closePinned();\r\n        if (onClick) onClick();\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId } = this.props;\r\n        let { title } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n\r\n        title = title || getTitle(message, t);\r\n        let content = !message ? t('Loading') : getContent(message, t);\r\n        const thumbnail = getReplyThumbnail(chatId, messageId);\r\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\r\n\r\n        if (isDeletedMessage(message)) {\r\n            title = null;\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        return (\r\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\r\n                <div className='reply-wrapper'>\r\n                    <div className='border reply-border' />\r\n                    {thumbnail && (\r\n                        <ReplyTile\r\n                            chatId={chatId}\r\n                            messageId={messageId}\r\n                            minithumbnail={minithumbnail}\r\n                            thumbnail={thumbnail}\r\n                        />\r\n                    )}\r\n                    <div className='reply-content'>\r\n                        {title && <div className='reply-content-title'>{title}</div>}\r\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReply.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    title: PropTypes.string,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Reply);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Reply from '../Message/Reply';\r\nimport { editMessage, replyMessage } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InputBoxHeader.css';\r\n\r\nclass InputBoxHeader extends React.Component {\r\n    componentDidMount() {\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, messageId, editMessageId } = this.props;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id && editMessageId !== message_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { chatId, editMessageId } = this.props;\r\n\r\n        if (editMessageId) {\r\n            editMessage(chatId, 0);\r\n        } else {\r\n            replyMessage(chatId, 0);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\r\n        if (!chatId) return null;\r\n        if (!messageId && !editMessageId) return null;\r\n\r\n        return (\r\n            <div className='inputbox-header'>\r\n                <div className='inputbox-header-left-column'>\r\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </div>\r\n                <div className='inputbox-header-middle-column'>\r\n                    <Reply\r\n                        chatId={chatId}\r\n                        messageId={editMessageId || messageId}\r\n                        title={editMessageId ? t('EditMessage') : null}\r\n                        onClick={onClick}\r\n                    />\r\n                </div>\r\n                <div className='inputbox-header-right-column' />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInputBoxHeader.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    editMessageId: PropTypes.number,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(InputBoxHeader);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './PasteFilesDialog.css';\r\n\r\nclass PasteFilesDialog extends React.Component {\r\n    handleDone = () => {\r\n        const { onConfirm } = this.props;\r\n        onConfirm();\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { onCancel } = this.props;\r\n        onCancel();\r\n    };\r\n\r\n    render() {\r\n        const { files, t } = this.props;\r\n        if (!files) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nPasteFilesDialog.propTypes = {\r\n    files: PropTypes.array,\r\n    onConfirm: PropTypes.func.isRequired,\r\n    onCancel: PropTypes.func.isRequired\r\n};\r\n\r\nconst enhance = compose(withTranslation());\r\n\r\nexport default enhance(PasteFilesDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './RecordTimer.css';\r\n\r\nclass RecordTimer extends React.Component {\r\n    state = { };\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\r\n    }\r\n\r\n    onClientUpdateRecordStart = () => {\r\n        this.timer = setInterval(() => {\r\n            const now = new Date();\r\n            const diff = now - this.startTime;\r\n\r\n            // console.log('[recordTimer] ');\r\n            this.setState({\r\n                time: diff\r\n            });\r\n        }, 25);\r\n        this.startTime = new Date();\r\n    }\r\n\r\n    onClientUpdateRecordStop = () => {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n\r\n        this.setState({\r\n            time: null\r\n        });\r\n    }\r\n\r\n    onClientUpdateRecordError = () => {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n\r\n        this.setState({\r\n            time: null\r\n        });\r\n    }\r\n\r\n    normalizeM(n) {\r\n        let msStr = n.toString();\r\n        if (msStr.length === 1) {\r\n            msStr += '0'\r\n        } else if (msStr.length > 2) {\r\n            msStr = msStr.substr(0, 2);\r\n        }\r\n\r\n        return msStr;\r\n    }\r\n\r\n    normalizeS(n) {\r\n        let msStr = n.toString();\r\n        if (msStr.length === 1) {\r\n            msStr = '0' + msStr;\r\n        }\r\n\r\n        return msStr;\r\n    }\r\n\r\n    msToTime(s) {\r\n        let ms = (s % 1000);\r\n        s = (s - ms) / 1000;\r\n        let secs = s % 60;\r\n        s = (s - secs) / 60;\r\n        let mins = s % 60;\r\n        let hrs = (s - mins) / 60;\r\n\r\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\r\n        if (hrs > 0) {\r\n            result = hrs + ':' + result;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        const { time } = this.state;\r\n        if (!time) return null;\r\n\r\n        return (\r\n            <div className='record-timer'>\r\n                {this.msToTime(time)}\r\n                <div className='record-timer-icon'/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nRecordTimer.propTypes = {};\r\n\r\nexport default RecordTimer;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport EditUrlDialog from './EditUrlDialog';\r\nimport { focusInput } from '../../Utils/DOM';\r\nimport { editMessage as editMessageAction } from '../../Actions/Client';\r\nimport { getEntities, getNodes } from '../../Utils/Message';\r\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './EditMediaDialog.css';\r\n\r\nclass EditMediaDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.captionRef = React.createRef();\r\n        this.editMediaRef = React.createRef();\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevOpen } = state;\r\n        const { open, chatId, messageId, newItem } = props;\r\n\r\n        if (prevOpen !== open) {\r\n            if (open) {\r\n                const editMessage = MessageStore.get(chatId, messageId);\r\n                let sendAsPhoto = false;\r\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\r\n                    sendAsPhoto = true;\r\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\r\n                    sendAsPhoto = true;\r\n                }\r\n\r\n                return {\r\n                    prevOpen: true,\r\n                    sendAsPhoto,\r\n                    editMessage,\r\n                    editMedia: null,\r\n                    editFile: null\r\n                }\r\n            } else {\r\n                return {\r\n                    prevOpen: false,\r\n                    sendAsPhoto: false,\r\n                    editMessage: null,\r\n                    editMedia: null,\r\n                    editFile: null\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\r\n    }\r\n\r\n    handleSelectionChange = () => {\r\n        if (document.activeElement === this.captionRef.current) {\r\n            this.saveSelection();\r\n        }\r\n    };\r\n\r\n    handleEnter = () => {\r\n        const { chatId, messageId, open, newItem } = this.props;\r\n        if (!open) return;\r\n\r\n        let text = null;\r\n        let caption = null;\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (message) {\r\n            const { content } = message;\r\n            if (content) {\r\n                text = content.text;\r\n                caption = content.caption;\r\n            }\r\n        }\r\n\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        if (text) {\r\n            this.setFormattedText(text);\r\n        } else if (caption) {\r\n            this.setFormattedText(caption);\r\n        } else if (newItem && newItem.caption) {\r\n            element.innerHTML = newItem.caption;\r\n        } else {\r\n            element.innerText = null;\r\n        }\r\n\r\n        focusInput(element);\r\n    };\r\n\r\n    setFormattedText(formattedText) {\r\n        const { t } = this.props;\r\n        const element = this.captionRef.current;\r\n\r\n        if (!formattedText) {\r\n            element.innerText = null;\r\n            return;\r\n        }\r\n\r\n        const { text, entities } = formattedText;\r\n        try {\r\n            const nodes = getNodes(text, entities, t);\r\n            element.innerHTML = null;\r\n            nodes.forEach(x => {\r\n                element.appendChild(x);\r\n            });\r\n        } catch (e) {\r\n            element.innerText = text;\r\n        }\r\n    }\r\n\r\n    handleDone = () => {\r\n        const { chatId, newItem, onSend, onEdit } = this.props;\r\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\r\n\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n\r\n        element.innerText = null;\r\n\r\n        const { text, entities } = getEntities(innerHTML);\r\n\r\n        const caption = {\r\n            '@type': 'formattedText',\r\n            text,\r\n            entities\r\n        };\r\n\r\n        const isEditing = Boolean(editMessage);\r\n        if (isEditing) {\r\n            if (editMedia) {\r\n                const { photo } = editMedia;\r\n                if (!photo) return;\r\n\r\n                const { sizes } = photo;\r\n                if (!sizes) return;\r\n\r\n                const size = sizes[sizes.length - 1];\r\n\r\n                const { width, height } = size;\r\n\r\n                const content = {\r\n                    '@type': 'inputMessagePhoto',\r\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\r\n                    width,\r\n                    height,\r\n                    caption\r\n                };\r\n\r\n                onEdit(null, content);\r\n            } else {\r\n                onEdit(caption, null);\r\n            }\r\n\r\n            editMessageAction(chatId, 0);\r\n        } else {\r\n            const { media, file } = newItem;\r\n            const { audio, photo, document } = media;\r\n\r\n            let content = null;\r\n            if (photo) {\r\n                const { sizes } = photo;\r\n                if (!sizes) return;\r\n\r\n                const size = sizes[sizes.length - 1];\r\n\r\n                const { width, height } = size;\r\n\r\n                content = sendAsPhoto\r\n                    ? {\r\n                        '@type': 'inputMessagePhoto',\r\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                        width,\r\n                        height,\r\n                        caption\r\n                    }\r\n                    : {\r\n                        '@type': 'inputMessageDocument',\r\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                        thumbnail: null,\r\n                        caption\r\n                    };\r\n            } else if (document) {\r\n                content = {\r\n                    '@type': 'inputMessageDocument',\r\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                    thumbnail: null,\r\n                    caption\r\n                };\r\n            } else if (audio) {\r\n                const { duration, title, performer } = audio;\r\n\r\n                content = {\r\n                    '@type': 'inputMessageAudio',\r\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\r\n                    thumbnail: null,\r\n                    duration,\r\n                    title,\r\n                    performer,\r\n                    caption\r\n                };\r\n            }\r\n            if (!content) return;\r\n\r\n            onSend(content, file);\r\n        }\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { chatId, messageId, onCancel } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const isEditing = Boolean(message);\r\n\r\n        if (isEditing) {\r\n            editMessageAction(chatId, 0);\r\n        }\r\n\r\n        onCancel();\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\r\n\r\n        // fix CJK input\r\n        const { isComposing } = nativeEvent;\r\n        if (isComposing) {\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        switch (nativeEvent.code) {\r\n            case 'Enter':\r\n            case 'NumpadEnter': {\r\n                // enter+cmd, enter+ctrl, enter+shift\r\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\r\n                    document.execCommand('insertLineBreak');\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // enter\r\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\r\n                    this.handleDone();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + b\r\n            case 'KeyB': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleBold();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + i\r\n            case 'KeyI': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleItalic();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyK': {\r\n                // cmd + k\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleUrl();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // alt + cmd + k\r\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleMono();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // alt + cmd + n\r\n            case 'KeyN': {\r\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleClear();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClear = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n    };\r\n\r\n    handleBold = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('bold', false, null);\r\n    };\r\n\r\n    handleItalic = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('italic', false, null);\r\n    };\r\n\r\n    handleMono = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        let text = '';\r\n        const { selection } = this;\r\n        if (selection && !selection.isCollapsed) {\r\n            text = selection.toString();\r\n        }\r\n\r\n        if (!text) return;\r\n        text = `<code>${text}</code>`;\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('insertHTML', false, text);\r\n    };\r\n\r\n    handleUnderline = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('underline', false, null);\r\n    };\r\n\r\n    handleStrikeThrough = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('strikeThrough', false, null);\r\n    };\r\n\r\n    handleUrl = () => {\r\n        this.openEditUrlDialog();\r\n    };\r\n\r\n    openEditUrlDialog = () => {\r\n        let defaultText = '';\r\n        let defaultUrl = '';\r\n\r\n        const { selection, range } = this;\r\n        if (range) {\r\n            let { startContainer, endContainer } = range;\r\n            if (startContainer === endContainer) {\r\n                const { parentElement } = startContainer;\r\n                if (parentElement && parentElement.nodeName === 'A') {\r\n                    defaultText = parentElement.innerText;\r\n                    defaultUrl = parentElement.href;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!defaultText && selection && !selection.isCollapsed) {\r\n            defaultText = selection.toString();\r\n        }\r\n\r\n        this.setState({\r\n            openEditUrl: true,\r\n            defaultUrl,\r\n            defaultText\r\n        });\r\n    };\r\n\r\n    closeEditUrlDialog = () => {\r\n        this.setState(\r\n            {\r\n                openEditUrl: false\r\n            },\r\n            () => {\r\n                this.restoreSelection();\r\n            }\r\n        );\r\n    };\r\n\r\n    saveSelection() {\r\n        this.selection = document.getSelection();\r\n        if (!this.selection) return;\r\n        if (!this.selection.rangeCount) return;\r\n\r\n        this.range = this.selection.getRangeAt(0);\r\n    }\r\n\r\n    restoreSelection() {\r\n        const { range } = this;\r\n\r\n        if (!range) {\r\n            focusInput();\r\n            return;\r\n        }\r\n\r\n        const selection = document.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        this.captionRef.current.focus();\r\n    }\r\n\r\n    handlePaste = event => {\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n        }\r\n    };\r\n\r\n    handleInput = () => {\r\n        this.clearInnerHtml();\r\n    };\r\n\r\n    clearInnerHtml() {\r\n        const element = this.captionRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n    }\r\n\r\n    handleCancelEditUrl = () => {\r\n        this.closeEditUrlDialog();\r\n    };\r\n\r\n    handleDoneEditUrl = (text, url) => {\r\n        this.closeEditUrlDialog();\r\n        setTimeout(() => {\r\n            // edit current link node\r\n            const { range } = this;\r\n            if (range) {\r\n                const { startContainer, endContainer } = range;\r\n                if (startContainer && startContainer === endContainer) {\r\n                    const { parentNode } = startContainer;\r\n                    if (parentNode && parentNode.nodeName === 'A') {\r\n                        parentNode.href = url;\r\n                        parentNode.title = url;\r\n                        parentNode.innerText = text;\r\n\r\n                        // move cursor to end of editing node\r\n                        const { lastChild } = parentNode;\r\n                        if (lastChild) {\r\n                            const range = document.createRange();\r\n                            range.setStart(lastChild, lastChild.textContent.length);\r\n                            range.setEnd(lastChild, lastChild.textContent.length);\r\n\r\n                            const selection = document.getSelection();\r\n                            selection.removeAllRanges();\r\n                            selection.addRange(range);\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // replace selected text with new link node\r\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\r\n            document.execCommand('removeFormat', false, null);\r\n            document.execCommand('insertHTML', false, link);\r\n        }, 0);\r\n    };\r\n\r\n    handleEditMedia = event => {\r\n        const element = this.editMediaRef.current;\r\n        if (!element) return;\r\n\r\n        element.click();\r\n    };\r\n\r\n    handleEditMediaComplete = async () => {\r\n        const element = this.editMediaRef.current;\r\n        if (!element) return;\r\n\r\n        const { files } = element;\r\n        if (files.length === 0) return;\r\n\r\n        const [file, ...rest] = Array.from(files);\r\n        if (!file) return;\r\n\r\n        const editMedia = await getMediaPhotoFromFile(file);\r\n\r\n        this.setState({\r\n            editFile: file,\r\n            editMedia\r\n        });\r\n\r\n        element.value = '';\r\n    };\r\n\r\n    handleSendAsPhoto = () => {\r\n        const { sendAsPhoto } = this.state;\r\n\r\n        this.setState({\r\n            sendAsPhoto: !sendAsPhoto\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, newItem, open, t } = this.props;\r\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\r\n        if (!open) return null;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        const isEditing = Boolean(message);\r\n        let isPhoto = false;\r\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\r\n            isPhoto = true;\r\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\r\n            isPhoto = true;\r\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\r\n            isPhoto = true;\r\n        }\r\n\r\n        let media = null;\r\n        if (isEditing) {\r\n            media =\r\n            editMedia\r\n                ? getMedia({ content: editMedia })\r\n                : getMedia(message, null);\r\n        } else if (newItem) {\r\n            media = getMedia({ content: newItem.media });\r\n        }\r\n        const doneLabel = isEditing ? t('Save') : t('Send');\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={this.handleCancel}\r\n                aria-labelledby='edit-media-dialog-title'\r\n                onEnter={this.handleEnter}>\r\n                <div className='edit-media-dialog-content'>\r\n                    <div style={{ margin: 24 }}>{media}</div>\r\n                    { isEditing && (\r\n                        <>\r\n                            <IconButton\r\n                                disableRipple={true}\r\n                                aria-label={t('Edit')}\r\n                                className='edit-media-dialog-edit-button'\r\n                                size='small'\r\n                                onClick={this.handleEditMedia}>\r\n                                <EditIcon fontSize='inherit' />\r\n                            </IconButton>\r\n                            <input\r\n                                ref={this.editMediaRef}\r\n                                className='inputbox-attach-button'\r\n                                type='file'\r\n                                accept='image/*'\r\n                                onChange={this.handleEditMediaComplete}\r\n                            />\r\n                        </>\r\n                    )}\r\n                    { !isEditing && isPhoto && (\r\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\r\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\r\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\r\n                        </RadioGroup>\r\n                    )}\r\n                </div>\r\n                <div\r\n                    ref={this.captionRef}\r\n                    id='edit-media-dialog-caption'\r\n                    className='scrollbars-hidden'\r\n                    contentEditable\r\n                    suppressContentEditableWarning\r\n                    placeholder={t('Caption')}\r\n                    onKeyDown={this.handleKeyDown}\r\n                    onPaste={this.handlePaste}\r\n                    onInput={this.handleInput}\r\n                />\r\n                <DialogActions>\r\n                    <Button onClick={this.handleCancel} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {doneLabel}\r\n                    </Button>\r\n                </DialogActions>\r\n                <EditUrlDialog\r\n                    open={openEditUrl}\r\n                    defaultText={defaultText}\r\n                    defaultUrl={defaultUrl}\r\n                    onDone={this.handleDoneEditUrl}\r\n                    onCancel={this.handleCancelEditUrl}\r\n                />\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nEditMediaDialog.propTypes = {\r\n    open: PropTypes.bool,\r\n\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    newItem: PropTypes.object,\r\n\r\n    onSend: PropTypes.func,\r\n    onEdit: PropTypes.func,\r\n    onCancel: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(EditMediaDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nclass OutputTypingManager {\r\n    constructor(chatId) {\r\n        this.chatId = chatId;\r\n        this.lastAction = null;\r\n    }\r\n\r\n    setTyping(action) {\r\n        if (!this.chatId) return;\r\n\r\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\r\n            let now = new Date();\r\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\r\n            if (this.lastTypingDate && this.lastTypingDate > now) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.lastAction = action;\r\n        this.lastTypingDate = new Date();\r\n\r\n        TdLibController.send({\r\n            '@type': 'sendChatAction',\r\n            chat_id: this.chatId,\r\n            action: action\r\n        });\r\n    }\r\n}\r\n\r\nexport default OutputTypingManager;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport emojiRegex from 'emoji-regex';\r\nimport MediaRecorder from 'opus-media-recorder';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport DoneIcon from '../../Assets/Icons/Done';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\r\nimport SendIcon from '../../Assets/Icons/Send';\r\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport AttachButton from './../ColumnMiddle/AttachButton';\r\nimport CreatePollDialog from '../Popup/CreatePollDialog';\r\nimport EditUrlDialog from '../Popup/EditUrlDialog';\r\nimport InputBoxHeader from './InputBoxHeader';\r\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\r\nimport RecordTimer from './RecordTimer';\r\nimport EditMediaDialog from '../Popup/EditMediaDialog';\r\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\r\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, getChatFullInfo, isMeChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\r\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\r\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\r\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\r\nimport { getSize, readImageSize } from '../../Utils/Common';\r\nimport { editMessage, replyMessage } from '../../Actions/Client';\r\nimport { isDeletedUser, isMeUser } from '../../Utils/User';\r\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\r\nimport AnimationStore from '../../Stores/AnimationStore';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InputBox.css';\r\n\r\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\r\n\r\nclass InputBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.attachDocumentRef = React.createRef();\r\n        this.attachPhotoRef = React.createRef();\r\n        this.newMessageRef = React.createRef();\r\n\r\n        const chatId = AppStore.getChatId();\r\n\r\n        this.state = {\r\n            chatId,\r\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\r\n            editMessageId: 0,\r\n            recordingReady: true,\r\n            recordingTime: null,\r\n            recordPermissionDenied: false,\r\n            sendFile: null\r\n        };\r\n\r\n        document.execCommand('defaultParagraphSeparator', false, 'br');\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { t } = this.props;\r\n        const {\r\n            chatId,\r\n            newDraft,\r\n            files,\r\n            replyToMessageId,\r\n            editMessageId,\r\n            openEditMedia,\r\n            openEditUrl,\r\n            sendFile,\r\n            recordingReady,\r\n            recordingTime,\r\n            recordPermissionDenied,\r\n            shook\r\n        } = this.state;\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.newDraft !== newDraft) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.files !== files) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.replyToMessageId !== replyToMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.editMessageId !== editMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.sendFile !== sendFile) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openEditUrl !== openEditUrl) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.openEditMedia !== openEditMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.recordingTime !== recordingTime) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.recordingReady !== recordingReady) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.shook !== shook) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    loadDraft() {\r\n        this.setDraft();\r\n        this.setInputFocus();\r\n        this.handleInput();\r\n    }\r\n\r\n    saveDraft() {\r\n        const { chatId, editMessageId, replyToMessageId } = this.state;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        let innerHTML = null;\r\n        if (editMessageId) {\r\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\r\n        } else {\r\n            innerHTML = element.innerHTML;\r\n        }\r\n\r\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\r\n        this.setChatDraftMessage(draftMessage);\r\n    }\r\n\r\n    selectionChangeListener = () => {\r\n        // console.log('[ed] selectionchange', document.activeElement);\r\n        if (document.activeElement === this.newMessageRef.current) {\r\n            this.saveSelection();\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\r\n\r\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\r\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\r\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\r\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\r\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\r\n        MessageStore.on('clientUpdateSendText', this.onClientUpdateSendText);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\r\n\r\n        this.loadDraft();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.saveDraft();\r\n\r\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\r\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\r\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\r\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\r\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('clientUpdateSendText', this.onClientUpdateSendText);\r\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\r\n\r\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\r\n\r\n        this.handleCancelRecord();\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chatId) return;\r\n    };\r\n\r\n    onClientUpdateSendText = update => {\r\n        const { text } = update;\r\n\r\n        if (!text) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        element.innerText = text;\r\n        focusInput(element);\r\n    }\r\n\r\n    onClientUpdateInputShake = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { shook } = this.state;\r\n\r\n        if (shook) {\r\n            this.setState({ shook: false }, () => {\r\n                setTimeout(() => {\r\n                    this.setState({ shook: true });\r\n                }, 0);\r\n            });\r\n        } else {\r\n            this.setState({ shook: true });\r\n        }\r\n    };\r\n\r\n    onClientUpdateSendFiles = update => {\r\n        const { files } = update;\r\n        if (!files) return;\r\n\r\n        this.handleSendFiles(Array.from(files));\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId, editMessageId } = this.state;\r\n        const { chat_id, message_ids, is_permanent } = update;\r\n\r\n        if (!editMessageId) return;\r\n        if (!is_permanent) return;\r\n        if (chatId !== chat_id) return;\r\n        if (message_ids.indexOf(editMessageId) === -1) return;\r\n\r\n        this.handleCancel();\r\n    };\r\n\r\n    onClientUpdateEditMessage = update => {\r\n        const { chatId, messageId } = update;\r\n        const { recordingTime } = this.state;\r\n        if (recordingTime) return;\r\n        if (this.state.chatId !== chatId) return;\r\n\r\n        if (!messageId) {\r\n            this.restoreDraftAndSelection();\r\n        } else {\r\n            this.saveDraftAndSelection();\r\n        }\r\n\r\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\r\n        this.setState(\r\n            {\r\n                editMessageId: messageId,\r\n                openEditMedia\r\n            },\r\n            () => {\r\n                if (!this.state.openEditMedia) {\r\n                    this.setEditMessage();\r\n                    this.handleInput();\r\n                    setTimeout(() => {\r\n                        this.focusInput();\r\n                    }, 0);\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    restoreDraftAndSelection() {\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        const { beforeEditText } = this;\r\n\r\n        if (beforeEditText) {\r\n            element.innerHTML = beforeEditText.innerHTML;\r\n\r\n            if (!beforeEditText.range) {\r\n                this.focusInput();\r\n                return;\r\n            }\r\n\r\n            const selection = document.getSelection();\r\n            selection.removeAllRanges();\r\n            selection.addRange(beforeEditText.range);\r\n\r\n            element.focus();\r\n        } else {\r\n            element.innerHTML = null;\r\n            this.focusInput();\r\n        }\r\n\r\n        this.handleInput();\r\n    }\r\n\r\n    saveDraftAndSelection() {\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        this.beforeEditText = {\r\n            innerHTML: element.innerHTML,\r\n            range: this.range\r\n        };\r\n    }\r\n\r\n    onClientUpdateFocusWindow = update => {\r\n        const { focused } = update;\r\n        if (focused) return;\r\n\r\n        this.saveDraft();\r\n    };\r\n\r\n    onUpdateChatDraftMessage = update => {\r\n        const { chat_id } = update;\r\n        const { chatId, recordingTime } = this.state;\r\n\r\n        if (recordingTime) return;\r\n        if (chatId !== chat_id) return;\r\n\r\n        this.loadDraft();\r\n    };\r\n\r\n    onClientUpdateAnimationSend = update => {\r\n        const { animation: item } = update;\r\n        if (!item) return;\r\n\r\n        const { animation, thumbnail, width, height, duration } = item;\r\n        if (!animation) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        element.innerText = null;\r\n\r\n        this.restoreSelection();\r\n\r\n        const content = {\r\n            '@type': 'inputMessageAnimation',\r\n            animation: {\r\n                '@type': 'inputFileId',\r\n                id: animation.id\r\n            },\r\n            width,\r\n            height,\r\n            duration\r\n        };\r\n\r\n        if (thumbnail) {\r\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\r\n\r\n            content.thumbnail = {\r\n                '@type': 'inputThumbnail',\r\n                thumbnail: {\r\n                    '@type': 'inputFileId',\r\n                    id: file.id\r\n                },\r\n                width: thumbnailWidth,\r\n                height: thumbnailHeight\r\n            };\r\n        }\r\n\r\n        this.sendMessage(content, false, result => {});\r\n    };\r\n\r\n    onClientUpdateStickerSend = update => {\r\n        const { sticker: item } = update;\r\n        if (!item) return;\r\n\r\n        const { sticker, thumbnail, width, height } = item;\r\n        if (!sticker) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        element.innerText = null;\r\n\r\n        this.restoreSelection();\r\n\r\n        const content = {\r\n            '@type': 'inputMessageSticker',\r\n            sticker: {\r\n                '@type': 'inputFileId',\r\n                id: sticker.id\r\n            },\r\n            width,\r\n            height\r\n        };\r\n\r\n        if (thumbnail) {\r\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\r\n\r\n            content.thumbnail = {\r\n                '@type': 'inputThumbnail',\r\n                thumbnail: {\r\n                    '@type': 'inputFileId',\r\n                    id: file.id\r\n                },\r\n                width: thumbnailWidth,\r\n                height: thumbnailHeight\r\n            };\r\n        }\r\n\r\n        this.sendMessage(content, false, result => {});\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateLocalStickersHint',\r\n            hint: null\r\n        });\r\n    };\r\n\r\n    onClientUpdateReply = update => {\r\n        const { chatId: currentChatId, recordingTime } = this.state;\r\n        const { chatId, messageId } = update;\r\n\r\n        if (currentChatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ replyToMessageId: messageId });\r\n\r\n        if (messageId && !recordingTime) {\r\n            this.setInputFocus();\r\n        }\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatId } = this.state;\r\n        if (chatId === update.nextChatId) return;\r\n\r\n        this.saveDraft();\r\n        this.beforeEditText = null;\r\n        this.setState(\r\n            {\r\n                chatId: update.nextChatId,\r\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\r\n                editMessageId: 0,\r\n                openEditUrl: false\r\n            },\r\n            () => {\r\n                this.loadDraft();\r\n            }\r\n        );\r\n\r\n        this.handleCancelRecord();\r\n    };\r\n\r\n    setDraft = () => {\r\n        const { chatId } = this.state;\r\n\r\n        const element = this.newMessageRef.current;\r\n\r\n        const { chatSelectOptions } = AppStore;\r\n        if (chatSelectOptions && chatSelectOptions.switchInline) {\r\n            this.setFormattedText({ '@type': 'formattedText', text: chatSelectOptions.switchInline, entities: [] });\r\n            return;\r\n        }\r\n\r\n        const formattedText = getChatDraft(chatId);\r\n        if (formattedText) {\r\n            this.setFormattedText(formattedText);\r\n            this.setState({\r\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\r\n            });\r\n        } else {\r\n            element.innerText = null;\r\n        }\r\n    };\r\n\r\n    setEditMessage() {\r\n        const { chatId, editMessageId } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, editMessageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        const { text, caption } = content;\r\n        if (!text && !caption) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n\r\n        if (text) {\r\n            this.setFormattedText(text);\r\n        } else if (caption) {\r\n            this.setFormattedText(caption);\r\n        } else {\r\n            element.innerText = null;\r\n        }\r\n    }\r\n\r\n    setFormattedText(formattedText) {\r\n        const { t } = this.props;\r\n        const element = this.newMessageRef.current;\r\n\r\n        if (!formattedText) {\r\n            element.innerText = null;\r\n            return;\r\n        }\r\n\r\n        const { text, entities } = formattedText;\r\n        try {\r\n            const nodes = getNodes(text, entities, t);\r\n            element.innerHTML = null;\r\n            nodes.forEach(x => {\r\n                element.appendChild(x);\r\n            });\r\n        } catch (e) {\r\n            element.innerText = text;\r\n        }\r\n    }\r\n\r\n    setInputFocus = () => {\r\n        const { recordingTime } = this.state;\r\n        if (recordingTime) return;\r\n\r\n        setTimeout(() => {\r\n            const element = this.newMessageRef.current;\r\n\r\n            focusInput(element);\r\n        }, 100);\r\n    };\r\n\r\n    setChatDraftMessage = chatDraftMessage => {\r\n        if (!chatDraftMessage) return;\r\n\r\n        const { chatId, draftMessage } = chatDraftMessage;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'setChatDraftMessage',\r\n            chat_id: chatId,\r\n            draft_message: draftMessage\r\n        });\r\n    };\r\n\r\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { draft_message } = chat;\r\n        const { text, entities } = getEntities(innerHTML);\r\n        const draftMessage =\r\n            (text && text.length > 0) || entities.length > 0\r\n                ? {\r\n                      '@type': 'draftMessage',\r\n                      reply_to_message_id: replyToMessageId,\r\n                      input_message_text: {\r\n                          '@type': 'inputMessageText',\r\n                          text: {\r\n                              '@type': 'formattedText',\r\n                              text,\r\n                              entities\r\n                          },\r\n                          disable_web_page_preview: false,\r\n                          clear_draft: false\r\n                      }\r\n                  }\r\n                : null;\r\n\r\n        if (draftEquals(draft_message, draftMessage)) {\r\n            return null;\r\n        }\r\n\r\n        return { chatId, draftMessage };\r\n    };\r\n\r\n    handleSubmit = (startRecord = true) => {\r\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\r\n\r\n        if (recordingTime) {\r\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\r\n                return;\r\n            }\r\n\r\n            this.handleStopRecord();\r\n            return;\r\n        } else if (recordingReady) {\r\n            if (startRecord) this.handleRecord();\r\n            return;\r\n        }\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        let { innerHTML } = element;\r\n\r\n        element.innerText = null;\r\n        this.handleInput();\r\n\r\n        if (!innerHTML) return;\r\n        if (!innerHTML.trim()) return;\r\n\r\n        const { text, entities } = getEntities(innerHTML);\r\n\r\n        const formattedText = {\r\n            '@type': 'formattedText',\r\n            text,\r\n            entities\r\n        };\r\n        const inputContent = {\r\n            '@type': 'inputMessageText',\r\n            text: formattedText,\r\n            disable_web_page_preview: false,\r\n            clear_draft: true\r\n        };\r\n\r\n        if (editMessageId) {\r\n            const editedMessage = MessageStore.get(chatId, editMessageId);\r\n            if (!editedMessage) return;\r\n\r\n            const { content } = editedMessage;\r\n            if (!content) return;\r\n\r\n            const { text, caption } = content;\r\n            if (text) {\r\n                this.editMessageText(inputContent, result => {});\r\n            } else if (caption) {\r\n                this.editMessageCaption(formattedText);\r\n            }\r\n            editMessage(chatId, 0);\r\n        } else {\r\n            this.sendMessage(inputContent, false, result => {});\r\n        }\r\n    };\r\n\r\n    handleAttachPoll = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateNewPoll'\r\n        });\r\n    };\r\n\r\n    handleAttachPhoto = () => {\r\n        if (!this.attachPhotoRef) return;\r\n\r\n        this.attachPhotoRef.current.click();\r\n    };\r\n\r\n    async getNewItem(file, sendAsFile) {\r\n        if (!file) return null;\r\n\r\n        const caption = this.newMessageRef.current.innerHTML;\r\n        if (caption) {\r\n            this.newMessageRef.current.innerHTML = null;\r\n            this.handleInput();\r\n        }\r\n\r\n        const media = sendAsFile\r\n            ? await getMediaPhotoFromFile(file)\r\n            : await getMediaDocumentFromFile(file);\r\n\r\n        return {\r\n            file,\r\n            media,\r\n            caption\r\n        }\r\n    };\r\n\r\n    handleAttachPhotoComplete = async () => {\r\n        const { files } = this.attachPhotoRef.current;\r\n        if (files.length === 0) return;\r\n\r\n        if (files.length === 1) {\r\n            const [ newFile, ...rest ] = Array.from(files);\r\n            if (!newFile) return;\r\n\r\n            const newItem = await this.getNewItem(newFile, true);\r\n\r\n            this.setState({\r\n                openEditMedia: true,\r\n                newItem\r\n            });\r\n        } else {\r\n            Array.from(files).forEach(async file => {\r\n                const [width, height] = await readImageSize(file);\r\n\r\n                const content = {\r\n                    '@type': 'inputMessagePhoto',\r\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\r\n                    width,\r\n                    height\r\n                };\r\n\r\n                this.handleSendPhoto(content, file);\r\n            });\r\n        }\r\n\r\n        this.attachPhotoRef.current.value = '';\r\n    };\r\n\r\n    handleAttachDocument = () => {\r\n        if (!this.attachDocumentRef) return;\r\n\r\n        this.attachDocumentRef.current.click();\r\n    };\r\n\r\n    handleAttachDocumentComplete = async () => {\r\n        const { files } = this.attachDocumentRef.current;\r\n        if (files.length === 0) return;\r\n\r\n        if (files.length === 1) {\r\n            const [ newFile, ...rest ] = Array.from(files);\r\n            if (!newFile) return;\r\n\r\n            const newItem = await this.getNewItem(newFile, false);\r\n\r\n            this.setState({\r\n                openEditMedia: true,\r\n                newItem\r\n            });\r\n        } else {\r\n            Array.from(files).forEach(file => {\r\n                const content = {\r\n                    '@type': 'inputMessageDocument',\r\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\r\n                };\r\n\r\n                this.handleSendDocument(content, file);\r\n            });\r\n        }\r\n\r\n        this.attachDocumentRef.current.value = '';\r\n    };\r\n\r\n    setTyping() {\r\n        const { chatId, editMessageId } = this.state;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n\r\n        const { innerHTML } = element;\r\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\r\n            element.innerHTML = null;\r\n        }\r\n        const { innerText } = element;\r\n\r\n        if (!innerText) return;\r\n        if (isMeChat(chatId)) return;\r\n        if (editMessageId) return;\r\n\r\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\r\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\r\n    }\r\n\r\n    setHints() {\r\n        const { editMessageId } = this.state;\r\n        const innerText = this.newMessageRef.current.innerText;\r\n        if (!innerText || innerText.length > 11 || editMessageId) {\r\n            const { hint } = StickerStore;\r\n            if (hint) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateLocalStickersHint',\r\n                    hint: null\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        const t0 = performance.now();\r\n        const regex = emojiRegex();\r\n        let match = regex.exec(innerText);\r\n        const t1 = performance.now();\r\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\r\n        if (!match || innerText !== match[0]) {\r\n            const { hint } = StickerStore;\r\n            if (hint) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateLocalStickersHint',\r\n                    hint: null\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        const timestamp = Date.now();\r\n        TdLibController.send({\r\n            '@type': 'getStickers',\r\n            emoji: match[0],\r\n            limit: 100\r\n        }).then(stickers => {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateLocalStickersHint',\r\n                hint: {\r\n                    timestamp,\r\n                    emoji: match[0],\r\n                    stickers\r\n                }\r\n            });\r\n        });\r\n\r\n        TdLibController.send({\r\n            '@type': 'searchStickers',\r\n            emoji: match[0],\r\n            limit: 100\r\n        }).then(stickers => {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateRemoteStickersHint',\r\n                hint: {\r\n                    timestamp,\r\n                    emoji: match[0],\r\n                    stickers\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    handleClear = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n    };\r\n\r\n    handleBold = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('bold', false, null);\r\n    };\r\n\r\n    handleItalic = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('italic', false, null);\r\n    };\r\n\r\n    handleMono = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        let text = '';\r\n        const { selection } = this;\r\n        if (selection && !selection.isCollapsed) {\r\n            text = selection.toString();\r\n        }\r\n\r\n        if (!text) return;\r\n        text = `<code>${text}</code>`;\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('insertHTML', false, text);\r\n    };\r\n\r\n    handleUnderline = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('underline', false, null);\r\n    };\r\n\r\n    handleStrikeThrough = () => {\r\n        document.execCommand('removeFormat', false, null);\r\n        document.execCommand('unlink', false, null);\r\n\r\n        document.execCommand('strikeThrough', false, null);\r\n    };\r\n\r\n    handleUrl = () => {\r\n        this.openEditUrlDialog();\r\n    };\r\n\r\n    handleCancel = () => {\r\n        const { chatId, editMessageId, replyToMessageId } = this.state;\r\n        if (editMessageId) {\r\n            editMessage(chatId, 0);\r\n            return true;\r\n        } else if (replyToMessageId) {\r\n            replyMessage(chatId, 0);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    handleKeyDown = event => {\r\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\r\n        const { editMessageId, replyToMessageId } = this.state;\r\n\r\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\r\n        //\r\n        // setTimeout(() => {\r\n        //     const { innerText } = this.newMessageRef.current;\r\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\r\n        // }, 1000);\r\n\r\n        // fix CJK input\r\n        const { isComposing } = nativeEvent;\r\n        if (isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (nativeEvent.code) {\r\n            // ctrl+alt+0 fix\r\n            case 'Digit0': {\r\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\r\n                    if (editMessageId) return;\r\n                    if (replyToMessageId) return;\r\n\r\n                    event.preventDefault();\r\n                }\r\n                break;\r\n            }\r\n            case 'Enter':\r\n            case 'NumpadEnter': {\r\n                // enter+cmd, enter+ctrl, enter+shift\r\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\r\n                    document.execCommand('insertLineBreak');\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // enter\r\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\r\n                    this.handleSubmit(false);\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // esc\r\n            case 'Escape': {\r\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    if (!repeat && this.handleCancel()) {\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            // arrow up\r\n            case 'ArrowUp': {\r\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\r\n                    const element = this.newMessageRef.current;\r\n                    if (element && !element.innerText) {\r\n                        const { editMessageId } = this.state;\r\n                        if (editMessageId) return;\r\n\r\n                        TdLibController.clientUpdate({\r\n                            '@type': 'clientUpdateTryEditMessage'\r\n                        });\r\n\r\n                        event.preventDefault();\r\n                        event.stopPropagation();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            // cmd + b\r\n            case 'KeyB': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleBold();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // cmd + i\r\n            case 'KeyI': {\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleItalic();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            case 'KeyK': {\r\n                // cmd + k\r\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleUrl();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                // alt + cmd + k\r\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleMono();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n            // alt + cmd + n\r\n            case 'KeyN': {\r\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\r\n                    this.handleClear();\r\n\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleSendPhoto = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => {\r\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\r\n            if (cachedMessage != null) {\r\n                this.handleSendingMessage(cachedMessage, file);\r\n            }\r\n\r\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\r\n        });\r\n    };\r\n\r\n    handleSendPoll = poll => {\r\n        this.sendMessage(poll, true, () => {});\r\n    };\r\n\r\n    handleSendDocument = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\r\n    };\r\n\r\n    handleSendAudio = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\r\n    };\r\n\r\n    handleSendVoiceNote = (content, file) => {\r\n        if (!content) return;\r\n\r\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\r\n    };\r\n\r\n    async handleSendFiles(files) {\r\n        if (!files) return;\r\n        if (!files.length) return;\r\n\r\n        if (files.length === 1) {\r\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\r\n            if (!newItem) return;\r\n\r\n            this.setState({\r\n                openEditMedia: true,\r\n                newItem\r\n            });\r\n        } else {\r\n            this.setState({ files });\r\n        }\r\n    }\r\n\r\n    handlePaste = async event => {\r\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\r\n        if (!items) return;\r\n\r\n        const files = [];\r\n        Array.from(items).forEach(item => {\r\n            if (item.kind.indexOf('file') === 0) {\r\n                const file = item.getAsFile();\r\n                if (file) {\r\n                    files.push(file);\r\n                }\r\n            }\r\n        });\r\n\r\n        if (files.length > 0) {\r\n            event.preventDefault();\r\n\r\n            this.handleSendFiles(files);\r\n            return;\r\n        }\r\n\r\n        const plainText = event.clipboardData.getData('text/plain');\r\n        if (plainText) {\r\n            event.preventDefault();\r\n            document.execCommand('insertText', false, plainText);\r\n            return;\r\n        }\r\n    };\r\n\r\n    handlePasteConfirm = () => {\r\n        const { files } = this.state;\r\n        if (!files) return;\r\n        if (!files.length) return;\r\n\r\n        files.forEach(file => {\r\n            const content = {\r\n                '@type': 'inputMessageDocument',\r\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\r\n            };\r\n\r\n            this.handleSendDocument(content, file);\r\n        });\r\n\r\n        this.handlePasteCancel();\r\n    };\r\n\r\n    handlePasteCancel = () => {\r\n        this.setState({ files: null });\r\n    };\r\n\r\n    handleUpdateDraftConfirm = () => {\r\n        const { newDraft } = this.state;\r\n        if (!newDraft) return;\r\n\r\n        this.loadDraft();\r\n        this.handleUpdateDraftCancel();\r\n    };\r\n\r\n    handleUpdateDraftCancel = () => {\r\n        this.setState({ newDraft: null });\r\n    };\r\n\r\n    handleSendingMessage = (message, blob) => {\r\n        if (!message) return;\r\n\r\n        const { sending_state, content, chat_id, id } = message;\r\n        if (!sending_state) return;\r\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\r\n        if (content['@type'] !== 'messagePhoto') return;\r\n\r\n        const { photo } = content;\r\n        if (!photo) return;\r\n\r\n        const size = getSize(photo.sizes, PHOTO_SIZE);\r\n        if (!size) return;\r\n\r\n        const { photo: file } = size;\r\n        if (!file) return;\r\n\r\n        FileStore.setBlob(file.id, blob);\r\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\r\n    };\r\n\r\n    async editMessageMedia(content) {\r\n        const { chatId, editMessageId } = this.state;\r\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\r\n\r\n        if (!chatId) return;\r\n        if (!editMessageId) return;\r\n        if (!content) return;\r\n\r\n        return TdLibController.send({\r\n            '@type': 'editMessageMedia',\r\n            chat_id: chatId,\r\n            message_id: editMessageId,\r\n            input_message_content: content\r\n        });\r\n    }\r\n\r\n    editMessageCaption(caption) {\r\n        const { chatId, editMessageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!editMessageId) return;\r\n        if (!caption) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'editMessageCaption',\r\n            chat_id: chatId,\r\n            message_id: editMessageId,\r\n            caption\r\n        });\r\n    }\r\n\r\n    async editMessageText(content, callback) {\r\n        const { chatId, editMessageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!editMessageId) return;\r\n        if (!content) return;\r\n\r\n        try {\r\n            const result = await TdLibController.send({\r\n                '@type': 'editMessageText',\r\n                chat_id: chatId,\r\n                message_id: editMessageId,\r\n                input_message_content: content\r\n            });\r\n\r\n            callback(result);\r\n        } finally {\r\n        }\r\n    }\r\n\r\n    sendMessage = async (content, clearDraft, callback) => {\r\n        const { chatId, replyToMessageId } = this.state;\r\n\r\n        if (!chatId) return;\r\n        if (!content) return;\r\n\r\n        try {\r\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n            const result = await TdLibController.send({\r\n                '@type': 'sendMessage',\r\n                chat_id: chatId,\r\n                reply_to_message_id: replyToMessageId,\r\n                input_message_content: content\r\n            });\r\n\r\n            this.setState({ replyToMessageId: 0 }, () => {\r\n                if (clearDraft) {\r\n                    this.saveDraft();\r\n                }\r\n            });\r\n            //MessageStore.set(result);\r\n\r\n            TdLibController.send({\r\n                '@type': 'viewMessages',\r\n                chat_id: chatId,\r\n                message_ids: [result.id]\r\n            });\r\n\r\n            if (replyToMessageId) {\r\n                replyMessage(chatId, 0);\r\n            }\r\n\r\n            callback(result);\r\n        } catch (error) {\r\n            alert('sendMessage error ' + JSON.stringify(error));\r\n        }\r\n    };\r\n\r\n    handleEmojiSelect = emoji => {\r\n        if (!emoji) return;\r\n\r\n        this.restoreSelection();\r\n        document.execCommand('insertText', false, emoji.native);\r\n        this.handleInput();\r\n    };\r\n\r\n    handleInput = async event => {\r\n        this.setTyping();\r\n        this.setHints();\r\n        this.setRecordingReadyState();\r\n\r\n        // const { text, position } = this.getTextAndCaretPosition();\r\n        // this.searchUsernameOrHashtag(text, position, [], false);\r\n    };\r\n\r\n    getTextAndCaretPosition = () => {\r\n        const { current: input } = this.newMessageRef;\r\n        if (!input) return;\r\n\r\n        input.focus()\r\n        let _range = document.getSelection().getRangeAt(0);\r\n        let range = _range.cloneRange();\r\n        range.selectNodeContents(input);\r\n        range.setEnd(_range.endContainer, _range.endOffset);\r\n\r\n        return { text: input.innerText, position: range.toString().length };\r\n    };\r\n\r\n    searchUsernameOrHashtag(text, position, messages, usernameOnly) {\r\n        const { chatId } = this.state;\r\n\r\n        const searchResultUsernames = [];\r\n\r\n        if (this.cancelDelayRunnable) {\r\n            clearTimeout(this.cancelDelayRunnable);\r\n            this.cancelDelayRunnable = null;\r\n        }\r\n\r\n        const info = getChatFullInfo(chatId);\r\n        const needUsernames = true;\r\n        const needBotContext = true;\r\n\r\n        const now = Date.now();\r\n        this.now = now;\r\n\r\n        let searchPosition = position;\r\n        if (text.length > 0) {\r\n            searchPosition--;\r\n        }\r\n\r\n        this.lastText = text;\r\n        this.lastUsernameOnly = usernameOnly;\r\n\r\n        let foundType = -1;\r\n        let result = '';\r\n        let resultStartPosition;\r\n        let resultLength;\r\n\r\n        let dogPosition = -1;\r\n        if (usernameOnly) {\r\n            result += text.substring(1);\r\n            resultStartPosition = 0;\r\n            resultLength = result.length;\r\n            foundType = 0;\r\n        } else {\r\n            for (let i = searchPosition; i >= 0; i--) {\r\n                if (i >= text.length){\r\n                    continue;\r\n                }\r\n                let ch = text[i];\r\n                if (i === 0 || text[i - 1] === ' ' || text[i - 1] === '\\n' || text[i - 1] === ':') {\r\n                    if (ch === '@') {\r\n                        if (needUsernames || needBotContext && i === 0){\r\n                            if (!info && i !== 0) {\r\n                                this.lastText = text;\r\n                                this.lastPosition = position;\r\n                                this.messages = messages;\r\n                                this.closeHints(now);\r\n                                return;\r\n                            }\r\n                            dogPosition = i;\r\n                            foundType = 0;\r\n                            resultStartPosition = i;\r\n                            resultLength = result.length + 1;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                result = ch + result;\r\n            }\r\n        }\r\n\r\n        if (foundType === -1) {\r\n            this.closeHints(now);\r\n            return;\r\n        }\r\n\r\n        if (foundType === 0) {\r\n            const users = [];\r\n            const usersMap = new Map();\r\n            for (let i = 0; i < Math.min(100, messages.length); i++) {\r\n                const { sender } = messages[i];\r\n                if (sender && sender.user_id && !usersMap.has(sender.user_id)) {\r\n                    usersMap.set(sender.user_id, sender.user_id);\r\n                    users.push(sender.user_id);\r\n                }\r\n            }\r\n\r\n            let usernameString = result.substr(resultStartPosition, resultLength).toLowerCase();\r\n            const hasSpace = usernameString.indexOf(' ') >= 0;\r\n            const newResult = [];\r\n            const newResultsMap = new Map();\r\n            const newMap = new Map();\r\n\r\n            const inlineBots = [];\r\n            if (!usernameOnly && needBotContext && dogPosition === 0 && inlineBots.length > 0) {\r\n\r\n            }\r\n\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat && info && info.members) {\r\n                for (let i = -1; i < info.members.length; i++) {\r\n                    let username;\r\n                    let firstName;\r\n                    let lastName;\r\n                    let object;\r\n                    let id;\r\n                    if (i === -1) {\r\n                        if (!usernameString.length) {\r\n                            newResult.push(chat);\r\n                            continue;\r\n                        }\r\n                        firstName = chat.title;\r\n                        lastName = '';\r\n                        username = chat.username;\r\n                        object = chat;\r\n                        id = -chat.id;\r\n                    } else {\r\n                        const { user_id } = info.members[i];\r\n                        const user = UserStore.get(user_id);\r\n                        if (!user || !usernameOnly && isMeUser(user_id) || newResultsMap.has(user_id)) {\r\n                            continue;\r\n                        }\r\n                        if (!usernameString.length) {\r\n                            if (!isDeletedUser(user_id)) {\r\n                                newResult.push(user);\r\n                                continue;\r\n                            }\r\n                        }\r\n                        firstName = user.first_name;\r\n                        lastName = user.last_name;\r\n                        username = user.username;\r\n                        object = user;\r\n                        id = user.id;\r\n                    }\r\n\r\n                    if (username.length > 0 && username.toLowerCase().startsWith(usernameString)\r\n                        || firstName.length > 0 && firstName.toLowerCase().startsWith(usernameString)\r\n                        || lastName.length > 0 && lastName.toLowerCase().startsWith(usernameString)\r\n                        || hasSpace && `${firstName} ${lastName}`.toLowerCase().startsWith(usernameString)) {\r\n                        newResult.push(object);\r\n                        newMap.set(id, object);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (isSupergroup(chatId) && usernameString.length > 0) {\r\n                if (newResult.length < 5) {\r\n                    this.cancelDelayRunnable = setTimeout(() => {\r\n                        this.cancelDelayRunnable = null;\r\n                        this.showUsersResult(now, newResult, newMap, true);\r\n                    }, 0);\r\n                } else {\r\n                    this.showUsersResult(now, newResult, newMap, true);\r\n                }\r\n\r\n                setTimeout(async () => {\r\n                    if (this.now !== now) {\r\n                        return;\r\n                    }\r\n\r\n                    const result = await TdLibController.send({\r\n                        '@type': 'searchChatMembers',\r\n                        chat_id: chatId,\r\n                        query: usernameString,\r\n                        limit: 20,\r\n                        filter: { '@type': 'chatMembersFilterMention', message_thread_id: 0 }\r\n                    });\r\n\r\n                    if (this.now !== now) {\r\n                        return;\r\n                    }\r\n\r\n                    const { members } = result;\r\n                    if (members.length > 0) {\r\n                        for (let i = 0; i < members.length; i++) {\r\n                            const { user_id } = members[i];\r\n                            if (isMeUser(user_id)) {\r\n                                continue;\r\n                            }\r\n                            const user = UserStore.get(user_id);\r\n                            if (!user) {\r\n                                continue;\r\n                            }\r\n\r\n                            searchResultUsernames.push(user);\r\n                        }\r\n\r\n                        this.notifyDataSetChanged(now, searchResultUsernames);\r\n                    }\r\n\r\n\r\n                }, 200);\r\n            } else {\r\n                this.showUsersResult(now, newResult, newMap, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    notifyDataSetChanged(id, searchResultUsernames) {\r\n        console.log('[search] global', searchResultUsernames);\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateHintsGlobal',\r\n            id,\r\n            global: searchResultUsernames\r\n        });\r\n    }\r\n\r\n    showUsersResult(id, newResult, newMap, notify) {\r\n        console.log('[search] local', newResult);\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateHintsLocal',\r\n            id,\r\n            local: newResult\r\n        });\r\n    }\r\n\r\n    closeHints(id) {\r\n        console.log('[search] close');\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateHintsClose',\r\n            id\r\n        });\r\n    }\r\n\r\n    openHints() {\r\n\r\n    }\r\n\r\n    setRecordingReadyState() {\r\n        const { editMessageId } = this.state;\r\n        const innerText = this.newMessageRef.current.innerText;\r\n        if (!innerText && !editMessageId) {\r\n            this.setState({\r\n                recordingReady: true\r\n            });\r\n        } else {\r\n            this.setState({\r\n                recordingReady: false\r\n            });\r\n        }\r\n    }\r\n\r\n    openEditUrlDialog = () => {\r\n        let defaultText = '';\r\n        let defaultUrl = '';\r\n\r\n        const { selection, range } = this;\r\n        if (range) {\r\n            let { startContainer, endContainer } = range;\r\n            if (startContainer === endContainer) {\r\n                const { parentElement } = startContainer;\r\n                if (parentElement && parentElement.nodeName === 'A') {\r\n                    defaultText = parentElement.innerText;\r\n                    defaultUrl = parentElement.href;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!defaultText && selection && !selection.isCollapsed) {\r\n            defaultText = selection.toString();\r\n        }\r\n\r\n        this.setState({\r\n            openEditUrl: true,\r\n            defaultUrl,\r\n            defaultText\r\n        });\r\n    };\r\n\r\n    closeEditUrlDialog = () => {\r\n        this.setState(\r\n            {\r\n                openEditUrl: false\r\n            },\r\n            () => {\r\n                this.restoreSelection();\r\n            }\r\n        );\r\n    };\r\n\r\n    saveSelection() {\r\n        this.selection = document.getSelection();\r\n        if (!this.selection) return;\r\n        if (!this.selection.rangeCount) return;\r\n\r\n        this.range = this.selection.getRangeAt(0);\r\n    }\r\n\r\n    restoreSelection() {\r\n        const { range } = this;\r\n\r\n        if (!range) {\r\n            this.focusInput();\r\n            return;\r\n        }\r\n\r\n        const selection = document.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        this.newMessageRef.current.focus();\r\n    }\r\n\r\n    focusInput = () => {\r\n        const element = this.newMessageRef.current;\r\n        if (!element) return;\r\n        if (!element.childNodes.length) {\r\n            element.focus();\r\n            return;\r\n        }\r\n\r\n        const lastTextNode = findLastTextNode(element);\r\n        if (!lastTextNode) {\r\n            return;\r\n        }\r\n\r\n        const range = document.createRange();\r\n        range.setStart(lastTextNode, lastTextNode.length);\r\n        range.collapse(true);\r\n\r\n        const selection = window.getSelection();\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n\r\n        element.focus();\r\n    };\r\n\r\n    handleCancelEditUrl = () => {\r\n        this.closeEditUrlDialog();\r\n    };\r\n\r\n    handleDoneEditUrl = (text, url) => {\r\n        this.closeEditUrlDialog();\r\n        setTimeout(() => {\r\n            // edit current link node\r\n            const { range } = this;\r\n            if (range) {\r\n                const { startContainer, endContainer } = range;\r\n                if (startContainer && startContainer === endContainer) {\r\n                    const { parentNode } = startContainer;\r\n                    if (parentNode && parentNode.nodeName === 'A') {\r\n                        parentNode.href = url;\r\n                        parentNode.title = url;\r\n                        parentNode.innerText = text;\r\n\r\n                        // move cursor to end of editing node\r\n                        const { lastChild } = parentNode;\r\n                        if (lastChild) {\r\n                            const range = document.createRange();\r\n                            range.setStart(lastChild, lastChild.textContent.length);\r\n                            range.setEnd(lastChild, lastChild.textContent.length);\r\n\r\n                            const selection = document.getSelection();\r\n                            selection.removeAllRanges();\r\n                            selection.addRange(range);\r\n                        }\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // replace selected text with new link node\r\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\r\n            document.execCommand('removeFormat', false, null);\r\n            document.execCommand('insertHTML', false, link);\r\n        }, 0);\r\n    };\r\n\r\n    handleCancelEditMedia = () => {\r\n        this.closeEditMediaDialog();\r\n    };\r\n\r\n    handleEditMedia = async (caption, content) => {\r\n        if (content) {\r\n            const message = await this.editMessageMedia(content);\r\n            if (message) {\r\n                const { content: editContent } = message;\r\n                switch (editContent['@type']) {\r\n                    case 'messagePhoto': {\r\n                        const { photo: sendPhoto } = content;\r\n                        if (!sendPhoto) break;\r\n\r\n                        const { data: blob } = sendPhoto;\r\n                        if (!blob) break;\r\n\r\n                        const { photo } = editContent;\r\n                        if (!photo) break;\r\n\r\n                        const iSize = photo.sizes.find(x => x.type === 'i');\r\n                        if (!iSize) break;\r\n\r\n                        const { photo: file } = iSize;\r\n                        if (file) {\r\n                            FileStore.setBlob(file.id, blob);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        this.editMessageCaption(caption);\r\n    };\r\n\r\n    handleSendMedia = (content, file) => {\r\n        this.closeEditMediaDialog(false);\r\n\r\n        switch (content['@type']) {\r\n            case 'inputMessageAudio': {\r\n                this.handleSendAudio(content, file);\r\n                break;\r\n            }\r\n            case 'inputMessagePhoto': {\r\n                this.handleSendPhoto(content, file);\r\n                break;\r\n            }\r\n            case 'inputMessageDocument': {\r\n                this.handleSendDocument(content, file);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    closeEditMediaDialog(cancel = true) {\r\n        const { newItem } = this.state;\r\n\r\n        this.setState(\r\n            {\r\n                openEditMedia: false,\r\n                newItem: null\r\n            },\r\n            () => {\r\n                if (cancel && newItem && newItem.caption) {\r\n                    this.newMessageRef.current.innerHTML = newItem.caption;\r\n                    this.focusInput();\r\n                    this.handleInput();\r\n                } else {\r\n                    this.restoreSelection();\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    handleHeaderClick = () => {\r\n        setTimeout(() => this.restoreSelection(), 0);\r\n    };\r\n\r\n    handleStopRecord = (cancelled = false) => {\r\n        if (!this.recorder) return;\r\n\r\n        this.recorder.cancelled = cancelled;\r\n        this.recorder.stop();\r\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\r\n    }\r\n\r\n    handleCancelRecord = () => {\r\n        this.handleStopRecord(true);\r\n    }\r\n\r\n    handleRecord = async () => {\r\n        if (this.recorder) return;\r\n\r\n        let stream = null;\r\n        try{\r\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n            if (this.recorder) return;\r\n        } catch { }\r\n\r\n        if (!stream) {\r\n            this.setState({\r\n                recordPermissionDenied: true\r\n            });\r\n            return;\r\n        }\r\n\r\n        const constraints = {\r\n            channelCount: 1,\r\n            sampleRate: 48000,\r\n        };\r\n\r\n        const track = stream.getAudioTracks()[0];\r\n        track.applyConstraints(constraints)\r\n\r\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\r\n        const workerOptions = {\r\n            encoderWorkerFactory: function () {\r\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\r\n            },\r\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\r\n        };\r\n\r\n        const recorder = new MediaRecorder(stream, options, workerOptions);\r\n\r\n        const chunks = [];\r\n\r\n        recorder.ondataavailable = e => {\r\n            chunks.push(e.data);\r\n        };\r\n        recorder.onstart = () => {\r\n\r\n        };\r\n        recorder.onstop = () => {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\r\n            this.setState({ recordingTime: null });\r\n\r\n            const { cancelled } = this.recorder;\r\n            this.recorder = null;\r\n\r\n            this.loadDraft();\r\n            if (cancelled) {\r\n                return;\r\n            }\r\n\r\n            // console.log('stop');\r\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\r\n            const audioURL = window.URL.createObjectURL(blob);\r\n\r\n            const audio = new Audio(audioURL);\r\n            audio.oncanplay = () => {\r\n                const content = {\r\n                    '@type': 'inputMessageVoiceNote',\r\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\r\n                    duration: Math.trunc(audio.duration),\r\n                    waveform: '',\r\n                    caption: null\r\n                };\r\n\r\n                this.handleSendVoiceNote(content, blob);\r\n            };\r\n        };\r\n        recorder.onerror = () => {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\r\n            this.setState({ recordingTime: null });\r\n\r\n            this.loadDraft();\r\n            // console.log('error', e);\r\n        };\r\n\r\n        this.recorder = recorder;\r\n        this.recorder.start(50);\r\n        this.startTime = new Date();\r\n\r\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\r\n        this.setState({ recordingTime: new Date() });\r\n    }\r\n\r\n    handleClosePermission = () => {\r\n        this.setState({\r\n            recordPermissionDenied: false\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            chatId,\r\n            editMessageId,\r\n            newItem,\r\n            replyToMessageId,\r\n            files,\r\n            newDraft,\r\n            defaultText,\r\n            defaultUrl,\r\n            openEditUrl,\r\n            openEditMedia,\r\n            recordingReady,\r\n            recordingTime,\r\n            recordPermissionDenied,\r\n            shook\r\n        } = this.state;\r\n\r\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\r\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\r\n        if (editMessageId) {\r\n            icon = <DoneIcon/>;\r\n        }\r\n\r\n        return (\r\n            <div className='inputbox-background'>\r\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\r\n                    <div className={classNames('inputbox-bubble')}>\r\n                        <InputBoxHeader\r\n                            chatId={chatId}\r\n                            messageId={replyToMessageId}\r\n                            editMessageId={openEditMedia ? 0 : editMessageId}\r\n                            onClick={this.handleHeaderClick}\r\n                        />\r\n                        <div className='inputbox-wrapper'>\r\n                            <div className='inputbox-left-column'>\r\n                                <React.Suspense\r\n                                    fallback={\r\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\r\n                                            <InsertEmoticonIcon />\r\n                                        </IconButton>\r\n                                    }>\r\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\r\n                                </React.Suspense>\r\n                            </div>\r\n                            <div className='inputbox-middle-column'>\r\n                                <div\r\n                                    id='inputbox-message'\r\n                                    className='scrollbars-hidden'\r\n                                    ref={this.newMessageRef}\r\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\r\n                                    contentEditable\r\n                                    suppressContentEditableWarning\r\n                                    onKeyDown={this.handleKeyDown}\r\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\r\n                                    onPaste={this.handlePaste}\r\n                                    onInput={this.handleInput}\r\n                                />\r\n                            </div>\r\n                            <div className='inputbox-right-column'>\r\n                                <RecordTimer/>\r\n                                <input\r\n                                    ref={this.attachDocumentRef}\r\n                                    className='inputbox-attach-button'\r\n                                    type='file'\r\n                                    multiple='multiple'\r\n                                    onChange={this.handleAttachDocumentComplete}\r\n                                />\r\n                                <input\r\n                                    ref={this.attachPhotoRef}\r\n                                    className='inputbox-attach-button'\r\n                                    type='file'\r\n                                    multiple='multiple'\r\n                                    accept='image/*'\r\n                                    onChange={this.handleAttachPhotoComplete}\r\n                                />\r\n                                {!Boolean(editMessageId) && !recordingTime && (\r\n                                    <AttachButton\r\n                                        chatId={chatId}\r\n                                        onAttachPhoto={this.handleAttachPhoto}\r\n                                        onAttachDocument={this.handleAttachDocument}\r\n                                        onAttachPoll={this.handleAttachPoll}\r\n                                    />\r\n                                )}\r\n\r\n                                {/*<IconButton>*/}\r\n                                {/*<KeyboardVoiceIcon />*/}\r\n                                {/*</IconButton>*/}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    { recordingTime && (\r\n                        <div className='inputbox-cancel-record-button-background'>\r\n                            <IconButton\r\n                                className='inputbox-cancel-record-button'\r\n                                aria-label='Delete'\r\n                                size='small'\r\n                                color='secondary'\r\n                                onClick={this.handleCancelRecord}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                    )}\r\n                    <div className='inputbox-send-button-background'>\r\n                        <IconButton\r\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\r\n                            aria-label='Send'\r\n                            size='small'\r\n                            onClick={this.handleSubmit}>\r\n                            {icon}\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\r\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\r\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\r\n                <EditUrlDialog\r\n                    open={openEditUrl}\r\n                    defaultText={defaultText}\r\n                    defaultUrl={defaultUrl}\r\n                    onDone={this.handleDoneEditUrl}\r\n                    onCancel={this.handleCancelEditUrl}\r\n                />\r\n                <EditMediaDialog\r\n                    open={openEditMedia}\r\n                    chatId={chatId}\r\n                    messageId={editMessageId}\r\n                    newItem={newItem}\r\n                    onEdit={this.handleEditMedia}\r\n                    onSend={this.handleSendMedia}\r\n                    onCancel={this.handleCancelEditMedia}\r\n                />\r\n                <Dialog\r\n                    transitionDuration={0}\r\n                    open={recordPermissionDenied}\r\n                    onClose={this.handleClosePermission}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClosePermission} color='primary'>\r\n                            {t('Ok')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(InputBox);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Button from '@material-ui/core/Button/Button';\r\nimport './FooterCommand.css';\r\n\r\nclass FooterCommand extends React.Component {\r\n    render() {\r\n        const { command, onCommand } = this.props;\r\n\r\n        return (\r\n            <div className='footer-command'>\r\n                <div className='inputbox'>\r\n                    <div className='inputbox-bubble'>\r\n                        <Button color='primary' className='footer-command-button' onClick={onCommand}>\r\n                            {command}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FooterCommand;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FooterCommand from './FooterCommand';\r\nimport Notifications from './Notifications';\r\n\r\nclass NotificationsCommand extends Notifications {\r\n    render() {\r\n        const { t } = this.props;\r\n        const { isMuted } = this.state;\r\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\r\n\r\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(NotificationsCommand);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport InputBox from './InputBox';\r\nimport FooterCommand from './FooterCommand';\r\nimport NotificationsCommand from './NotificationsCommand';\r\nimport { hasBasicGroupId, hasSupergroupId, isBotChat } from '../../Utils/Chat';\r\nimport { sendBotStartMessage, unblockSender } from '../../Actions/Message';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Footer.css';\r\n\r\nclass Footer extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n        const { prevChatId } = state;\r\n\r\n        if (prevChatId !== chatId) {\r\n            const chat = ChatStore.get(chatId);\r\n            if (chat) {\r\n                const { is_blocked, last_message } = chat;\r\n\r\n                return {\r\n                    prevChatId: chatId,\r\n\r\n                    isBlocked: is_blocked,\r\n                    hasLastMessage: Boolean(last_message)\r\n                };\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { t, chatId, options } = this.props;\r\n        const { hasLastMessage, isBlocked, clearHistory } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.options !== options) {\r\n            return true;\r\n        }\r\n\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasLastMessage !== hasLastMessage) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.isBlocked !== isBlocked) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clearHistory !== clearHistory) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.on('updateChatIsBlocked', this.onUpdateChatIsBlocked);\r\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        ChatStore.off('updateChatIsBlocked', this.onUpdateChatIsBlocked);\r\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId !== update.chatId) return;\r\n\r\n        this.setState({\r\n            clearHistory: update.inProgress\r\n        });\r\n    };\r\n\r\n    onUpdateChatLastMessage = update => {\r\n        const { chat_id, last_message } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.setState({\r\n            hasLastMessage: Boolean(last_message)\r\n        });\r\n    };\r\n\r\n    onUpdateChatIsBlocked = update => {\r\n        const { chat_id, is_blocked } = update;\r\n        const { chatId } = this.props;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.setState({\r\n            isBlocked: is_blocked\r\n        });\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleJoin = () => {\r\n        const { chatId } = this.props;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'joinChat',\r\n            chat_id: chatId\r\n        });\r\n    };\r\n\r\n    handleDeleteAndExit = () => {\r\n        const { chatId } = this.props;\r\n        if (!chatId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteChatHistory',\r\n            chat_id: chatId,\r\n            remove_from_chat_list: true\r\n        });\r\n\r\n        // TdLibController\r\n        //     .send({\r\n        //         '@type': 'leaveChat',\r\n        //         chat_id: this.props.chatId\r\n        //     });\r\n    };\r\n\r\n    handleUnblock = () => {\r\n        const { chatId } = this.props;\r\n\r\n        unblockSender({ '@type': 'messageSenderChat', chat_id: chatId });\r\n    };\r\n\r\n    handleStartBot = async () => {\r\n        const { chatId, options } = this.props;\r\n\r\n        await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\r\n        if (options && options.botStartMessage) {\r\n            const { botUserId, parameter } = options.botStartMessage;\r\n\r\n            await sendBotStartMessage(chatId, botUserId, parameter);\r\n        } else {\r\n            await TdLibController.send({\r\n                '@type': 'sendMessage',\r\n                chat_id: chatId,\r\n                reply_to_message_id: 0,\r\n                input_message_content: {\r\n                    '@type': 'inputMessageText',\r\n                    text: {\r\n                        '@type': 'formattedText',\r\n                        text: '/start',\r\n                        entities: []\r\n                    },\r\n                    disable_web_page_preview: true,\r\n                    clear_draft: true\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId, options, t } = this.props;\r\n        const { hasLastMessage, clearHistory } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { type, is_blocked } = chat;\r\n        if (!type) return null;\r\n\r\n        if (is_blocked) {\r\n            return <FooterCommand command={t('Unblock')} onCommand={this.handleUnblock} />;\r\n        }\r\n\r\n        if (options && options.botStartMessage) {\r\n            const isBot = isBotChat(chatId);\r\n            if (isBot) {\r\n                return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\r\n            }\r\n        }\r\n\r\n        switch (type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\r\n                if (!basicGroup) return null;\r\n\r\n                const { status } = basicGroup;\r\n                if (!status) return null;\r\n\r\n                const { is_member, permissions } = status;\r\n\r\n                switch (status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return null;\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        if (is_member) {\r\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\r\n                        } else {\r\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret':\r\n            case 'chatTypePrivate': {\r\n                const isBot = isBotChat(chatId);\r\n                if (isBot && (!hasLastMessage || clearHistory)) {\r\n                    return <FooterCommand command={t('BotStart')} onCommand={this.handleStartBot} />;\r\n                }\r\n\r\n                return <InputBox />;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(type.supergroup_id);\r\n                if (!supergroup) return null;\r\n\r\n                const { is_channel, status } = supergroup;\r\n                if (!status) return null;\r\n\r\n                const { is_member, permissions } = status;\r\n\r\n                switch (status['@type']) {\r\n                    case 'chatMemberStatusAdministrator': {\r\n                        return <InputBox />;\r\n                    }\r\n                    case 'chatMemberStatusBanned': {\r\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\r\n                    }\r\n                    case 'chatMemberStatusCreator': {\r\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\r\n                    }\r\n                    case 'chatMemberStatusLeft': {\r\n                        return (\r\n                            <FooterCommand\r\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\r\n                                onCommand={this.handleJoin}\r\n                            />\r\n                        );\r\n                    }\r\n                    case 'chatMemberStatusMember': {\r\n                        if (is_channel) {\r\n                            return <NotificationsCommand chatId={chatId} />;\r\n                        } else {\r\n                            return <InputBox />;\r\n                        }\r\n                    }\r\n                    case 'chatMemberStatusRestricted': {\r\n                        if (is_member) {\r\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\r\n                        } else {\r\n                            return (\r\n                                <FooterCommand\r\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\r\n                                    onCommand={this.handleJoin}\r\n                                />\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Footer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\r\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M18.8833789,7.00672773 L19,7 C19.5128358,7 19.9355072,7.38604019 19.9932723,7.88337887 L20,8 L20,10 L22,10 C22.5128358,10 22.9355072,10.3860402 22.9932723,10.8833789 L23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L20,12 L20,14 C20,14.5128358 19.6139598,14.9355072 19.1166211,14.9932723 L19,15 C18.4871642,15 18.0644928,14.6139598 18.0067277,14.1166211 L18,14 L18,12 L16,12 C15.4871642,12 15.0644928,11.6139598 15.0067277,11.1166211 L15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L18,10 L18,8 C18,7.48716416 18.3860402,7.06449284 18.8833789,7.00672773 L19,7 L18.8833789,7.00672773 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\r\n    </g>,\r\n    'AddMember'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\r\n    'Broom'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AddMemberIcon from '../../Assets/Icons/AddMember';\r\nimport BroomIcon from '../../Assets/Icons/Broom';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport MoreVertIcon from '../../Assets/Icons/More';\r\nimport RemoveMemberIcon from '../../Assets/Icons/RemoveMember';\r\nimport UnpinIcon from '../../Assets/Icons/PinOff';\r\nimport UserIcon from '../../Assets/Icons/User';\r\nimport GroupIcon from '../../Assets/Icons/Group';\r\nimport { requestUnpinMessage } from '../../Actions/Client';\r\nimport { clearHistory, leaveChat } from '../../Actions/Chat';\r\nimport { canClearHistory, canDeleteChat, getViewInfoTitle, isPrivateChat, getDeleteChatTitle, hasOnePinnedMessage, canSwitchBlocked, getChatSender } from '../../Utils/Chat';\r\nimport { requestBlockSender, unblockSender } from '../../Actions/Message';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MainMenuButton.css';\r\n\r\nclass MainMenuButton extends React.Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleButtonClick = async event => {\r\n        const { currentTarget: anchorEl } = event;\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\r\n        ChatStore.set(chat);\r\n\r\n        this.setState({ anchorEl });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleChatInfo = () => {\r\n        this.handleMenuClose();\r\n        setTimeout(() => this.props.openChatDetails(), 150);\r\n    };\r\n\r\n    handleClearHistory = () => {\r\n        this.handleMenuClose();\r\n\r\n        clearHistory(AppStore.getChatId());\r\n    };\r\n\r\n    handleDeleteChat = () => {\r\n        this.handleMenuClose();\r\n\r\n        leaveChat(AppStore.getChatId());\r\n    };\r\n\r\n    handleUnpin = () => {\r\n        this.handleMenuClose();\r\n\r\n        const chatId = AppStore.getChatId();\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        if (!media) return false;\r\n\r\n        const { pinned } = media;\r\n        if (!pinned) return false;\r\n        if (pinned.length !== 1) return false;\r\n\r\n        requestUnpinMessage(chatId, pinned[0].id);\r\n    };\r\n\r\n    handleSwitchBlocked = () => {\r\n        this.handleMenuClose();\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const sender = getChatSender(chatId);\r\n        const { is_blocked } = chat;\r\n        if (is_blocked) {\r\n            unblockSender(sender);\r\n        } else {\r\n            requestBlockSender(sender);\r\n        }\r\n\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { is_blocked } = chat;\r\n\r\n        const clearHistory = canClearHistory(chatId);\r\n        const deleteChat = canDeleteChat(chatId);\r\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\r\n        const unpinMessage = hasOnePinnedMessage(chatId);\r\n        const switchBlocked = canSwitchBlocked(chatId);\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    aria-owns={anchorEl ? 'simple-menu' : null}\r\n                    aria-haspopup='true'\r\n                    className='main-menu-button'\r\n                    aria-label='Menu'\r\n                    onClick={this.handleButtonClick}>\r\n                    <MoreVertIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='main-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={this.handleMenuClose}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}>\r\n                    <MenuItem onClick={this.handleChatInfo}>\r\n                        <ListItemIcon>\r\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\r\n                    </MenuItem>\r\n                    {clearHistory && (\r\n                        <MenuItem onClick={this.handleClearHistory}>\r\n                            <ListItemIcon>\r\n                                <BroomIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('ClearHistory')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {deleteChat && deleteChatTitle && (\r\n                        <MenuItem onClick={this.handleDeleteChat}>\r\n                            <ListItemIcon>\r\n                                <DeleteIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={deleteChatTitle} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {unpinMessage && (\r\n                        <MenuItem onClick={this.handleUnpin}>\r\n                            <ListItemIcon>\r\n                                <UnpinIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\r\n                        </MenuItem>\r\n                    )}\r\n                    {switchBlocked && (\r\n                        <MenuItem onClick={this.handleSwitchBlocked}>\r\n                            <ListItemIcon>\r\n                                {is_blocked ? <AddMemberIcon /> : <RemoveMemberIcon />}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={is_blocked ? t('Unblock') : t('BlockContact')} />\r\n                        </MenuItem>\r\n                    )}\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(MainMenuButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport './HeaderChatSubtitle.css';\r\n\r\nclass HeaderChatSubtitle extends React.Component {\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\r\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\r\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\r\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\r\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\r\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\r\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\r\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\r\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\r\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\r\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\r\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\r\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\r\n    }\r\n\r\n    onUpdateChatOnlineMemberCount = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateChatTitle = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUserChatAction = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chat_id) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateUserStatus = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\r\n                if (fullInfo && fullInfo.members) {\r\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\r\n                    if (member) {\r\n                        this.forceUpdate();\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypePrivate': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSecret': {\r\n                if (chat.type.user_id === update.user_id) {\r\n                    this.forceUpdate();\r\n                }\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateUserFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (\r\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\r\n            chat.type.user_id === update.user_id\r\n        ) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroupFullInfo = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateBasicGroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    onUpdateSupergroup = update => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n        if (!chat.type) return;\r\n\r\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { chatId } = this.props;\r\n\r\n        const subtitle = getChatSubtitle(chatId, true);\r\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\r\n\r\n        return (\r\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\r\n                {subtitle}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderChatSubtitle.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default HeaderChatSubtitle;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport ChatTile from './ChatTile';\r\nimport DialogTitle from './DialogTitle';\r\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\r\nimport './HeaderChat.css';\r\n\r\nclass HeaderChat extends React.Component {\r\n    render() {\r\n        const { className, chatId, onClick } = this.props;\r\n\r\n        return (\r\n            <div className={classNames('header-chat', className)} onClick={onClick}>\r\n                <ChatTile chatId={chatId} size={44} />\r\n                <div className='header-chat-content'>\r\n                    <DialogTitle chatId={chatId} />\r\n                    <HeaderChatSubtitle chatId={chatId} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderChat.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default HeaderChat;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './AnimatedItem.css';\r\n\r\nclass AnimatedItem extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.containerRef = React.createRef();\r\n        this.item1Ref = React.createRef();\r\n        this.item2Ref = React.createRef();\r\n\r\n        this.state = { };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        return nextProps.item !== this.props.item;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { item } = props;\r\n        const { to, prevItem } = state;\r\n\r\n        if (item !== prevItem) {\r\n            return {\r\n                prevItem: item,\r\n                from: to,\r\n                to: item,\r\n                scrollDown: item > to\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { scrollDown } = this.props;\r\n        const { to } = this.state;\r\n\r\n        this.animate('', to, scrollDown);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { item, scrollDown } = this.props;\r\n        const { from, to } = this.state;\r\n\r\n        if (prevProps.item !== item) {\r\n            this.animate(from, to, scrollDown);\r\n        }\r\n    }\r\n\r\n    animate = (from, to, scrollDown) => {\r\n        const { height } = this.props;\r\n\r\n        const container = this.containerRef.current;\r\n        const item1 = this.item1Ref.current;\r\n        const item2 = this.item2Ref.current;\r\n\r\n        if (!container || !item1 || !item2) return;\r\n\r\n        const duration = '250ms';\r\n        const timingFunction = 'ease-in-out';\r\n\r\n        if (scrollDown) {\r\n            container.style.cssText = `transform: translateY(-${height}px)`;\r\n            item1.style.cssText = 'opacity: 0';\r\n            item2.style.cssText = 'opacity: 1';\r\n            requestAnimationFrame(() => {\r\n                container.style.cssText = `transform: translateY(0); transition: transform ${duration} ${timingFunction}`;\r\n                item1.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n                item2.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n            });\r\n        } else {\r\n            container.style.cssText = 'transform: translateY(0px)';\r\n            item1.style.cssText = 'opacity: 1';\r\n            item2.style.cssText = 'opacity: 0';\r\n            requestAnimationFrame(() => {\r\n                container.style.cssText = `transform: translateY(-${height}px); transition: transform ${duration} ${timingFunction}`;\r\n                item1.style.cssText = `opacity: 0; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n                item2.style.cssText = `opacity: 1; transition: opacity ${duration} ${timingFunction}; height: ${height}px`;\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { scrollDown, height } = this.props;\r\n        const { from, to } = this.state;\r\n\r\n        // console.log('[c] render', [from, to, scrollDown]);\r\n\r\n        return (\r\n            <div className='animated-item' style={{ height }}>\r\n                <div className='animated-item-placeholder'>{to}</div>\r\n                <div ref={this.containerRef} className='animated-item-wrapper'>\r\n                    <div ref={this.item1Ref} className='animated-item-1' style={{ height }}>{scrollDown ? to : from }</div>\r\n                    <div ref={this.item2Ref} className='animated-item-2' style={{ height }}>{scrollDown ? from : to }</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAnimatedItem.propTypes = {\r\n    item: PropTypes.string,\r\n    scrollDown: PropTypes.bool,\r\n    height: PropTypes.number\r\n};\r\n\r\nAnimatedItem.defaultProps = {\r\n    item: null,\r\n    scrollDown: true,\r\n    height: 21\r\n}\r\n\r\nexport default AnimatedItem;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AnimatedItem from './AnimatedItem';\r\nimport './AnimatedCounter.css';\r\n\r\nclass AnimatedCounter extends React.Component {\r\n\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { counter } = props;\r\n        const { prevCounter } = state;\r\n\r\n        if (counter !== prevCounter) {\r\n            return {\r\n                prevCounter: counter,\r\n\r\n                scrollDown: counter > prevCounter\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { counter, height, reverse } = this.props;\r\n        const { scrollDown } = this.state;\r\n        if (!counter) return null;\r\n\r\n        const counterStr = counter + '';\r\n\r\n        return (\r\n            <div className='animated-counter' style={{ height }}>\r\n                {[...counterStr].reverse().map((x, index) => <AnimatedItem key={index} item={x} scrollDown={reverse ? !scrollDown : scrollDown} height={height} />)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAnimatedCounter.propTypes = {\r\n    counter: PropTypes.number,\r\n    height: PropTypes.number,\r\n    reverse: PropTypes.bool\r\n};\r\n\r\nAnimatedCounter.defaultProps = {\r\n    counter: 0,\r\n    height: 21,\r\n    reverse: false\r\n}\r\n\r\nexport default AnimatedCounter;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './HeaderCommand.css';\r\nimport AnimatedCounter from './AnimatedCounter';\r\n\r\nclass HeaderCommand extends React.Component {\r\n    handleCancel = () => {\r\n        clearSelection();\r\n    };\r\n\r\n    handleDelete = () => {\r\n        let id = 0;\r\n        let messageIds = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            id = chatId;\r\n            messageIds.push(messageId);\r\n        }\r\n\r\n        deleteMessages(id, messageIds);\r\n    };\r\n\r\n    handleForward = () => {\r\n        let id;\r\n        const messageIds = [];\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            id = chatId;\r\n            messageIds.push(messageId);\r\n        }\r\n\r\n        forwardMessages(id, messageIds);\r\n    };\r\n\r\n    render() {\r\n        const { t, count } = this.props;\r\n\r\n        let canBeDeleted = true;\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeDeleted = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\r\n                canBeDeleted = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        let canBeForwarded = true;\r\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeForwarded = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_forwarded) {\r\n                canBeForwarded = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='header-command'>\r\n                {canBeForwarded && (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\r\n                        {t('Forward')}\r\n                        <span>&nbsp;</span>\r\n                        <AnimatedCounter counter={count}/>\r\n                    </Button>\r\n                )}\r\n                {canBeDeleted && (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\r\n                        {t('Delete')}\r\n                        <span>&nbsp;</span>\r\n                        <AnimatedCounter counter={count}/>\r\n                    </Button>\r\n                )}\r\n                <div className='header-command-space' />\r\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\r\n                    {t('Cancel')}\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHeaderCommand.propTypes = {\r\n    count: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(HeaderCommand);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M13.3888889,16 C13.7263962,16 14,16.4477153 14,17 C14,17.5128358 13.7640866,17.9355072 13.4601574,17.9932723 L13.3888889,18 L3.61111111,18 C3.27360376,18 3,17.5522847 3,17 C3,16.4871642 3.23591345,16.0644928 3.53984265,16.0067277 L3.61111111,16 L13.3888889,16 Z M21.6775853,3 L21.7874884,3.00503549 C22.3661813,3.05833764 22.8187635,3.52822285 22.8187635,4.1 C22.8187635,4.42111738 22.6731917,4.72620184 22.4202543,4.93518226 L20.7728252,6.29631085 L20.4502303,9.71680948 L22.7117368,12.1691998 C23.1304556,12.6232608 23.0880258,13.3185404 22.6169671,13.7221503 C22.4080732,13.9011336 22.1383003,14 21.8588096,14 L18,14 L18,17.375 C18,17.6936258 17.6185148,17.9565637 17.1254379,17.9951304 L17,18 C16.4477153,18 16,17.720178 16,17.375 L16,17.375 L16,14 L12.1411782,14 C11.5109229,14 11,13.5075132 11,12.9 C11,12.6305944 11.1025675,12.370556 11.288251,12.1691998 L13.5497575,9.71680948 L13.2271626,6.29631085 L11.5797335,4.93518226 C11.101208,4.5398179 11.0457907,3.84538792 11.4559554,3.38412949 C11.6727589,3.140319 11.9892641,3 12.3224024,3 L21.6775853,3 Z M8.66666667,11 C8.85076158,11 9,11.4477153 9,12 C9,12.5128358 8.87131994,12.9355072 8.70554038,12.9932723 L8.66666667,13 L3.33333333,13 C3.14923842,13 3,12.5522847 3,12 C3,11.4871642 3.12868006,11.0644928 3.29445962,11.0067277 L3.33333333,11 L8.66666667,11 Z M19.7289592,5 L14.2710408,5 L14.919153,5.62138118 C15.1441218,5.83707131 15.2849972,6.14241408 15.3118231,6.47248045 L15.5530612,9.44068174 C15.5815232,9.79087913 15.4791848,10.1386429 15.2703267,10.401463 L14,12 L20,12 L18.7296733,10.401463 C18.5208152,10.1386429 18.4184768,9.79087913 18.4469388,9.44068174 L18.6881769,6.47248045 C18.7150028,6.14241408 18.8558782,5.83707131 19.080847,5.62138118 L19.7289592,5 Z M10.5555556,6 C10.8010154,6 11,6.44771525 11,7 C11,7.51283584 10.8284266,7.93550716 10.6073872,7.99327227 L10.5555556,8 L3.44444444,8 C3.19898456,8 3,7.55228475 3,7 C3,6.48716416 3.17157342,6.06449284 3.39261283,6.00672773 L3.44444444,6 L10.5555556,6 Z'/>,\r\n    'PlaylistEdit'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './PinnedMessageBorder.css';\r\n\r\nclass PinnedMessageBorder extends React.Component {\r\n\r\n    drawRect = (x, y, width, height, radius) => {\r\n        return `M${x},${y + radius}a${radius},${radius},0,0,1,${width},0v${height - 2 * radius}a${radius},${radius},0,0,1,${-width},0Z`;\r\n    };\r\n\r\n    getClipPath = (id, barHeight, count) => {\r\n        const radius = 1;\r\n\r\n        let d = '';\r\n        if (count === 3) {\r\n            d = this.drawRect(0, 0, 2, barHeight, radius)\r\n                + this.drawRect(0, 11, 2, barHeight + 1, radius)\r\n                + this.drawRect(0, 23, 2, barHeight, radius);\r\n        } else {\r\n            for (let i = 0; i < count; i++) {\r\n                d += this.drawRect(0, (barHeight + 2) * i, 2, barHeight, radius);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <clipPath id={id}>\r\n                <path d={d}/>\r\n            </clipPath>\r\n        );\r\n    };\r\n\r\n    getBarHeight = (count, index) => {\r\n        let barHeight = 32;\r\n        if (count === 1) {\r\n            barHeight = 32;\r\n        } else if (count === 2) {\r\n            barHeight = 15;\r\n        } else if (count === 3) {\r\n            barHeight = 9;\r\n        } else if (count === 4) {\r\n            barHeight = 7;\r\n        } else if (count > 3) {\r\n            barHeight = 7;\r\n        }\r\n\r\n        return barHeight;\r\n    };\r\n\r\n    getMarkHeight = (count, index) => {\r\n        let barHeight = 32;\r\n        if (count === 1) {\r\n            barHeight = 32;\r\n        } else if (count === 2) {\r\n            barHeight = 15;\r\n        } else if (count === 3) {\r\n            barHeight = index === 1 ? 10 : 9;\r\n        } else if (count === 4) {\r\n            barHeight = 7;\r\n        } else if (count > 3) {\r\n            barHeight = 7;\r\n        }\r\n\r\n        return barHeight;\r\n    };\r\n\r\n    getMarkTranslateY = (index, barHeight, count) => {\r\n        if (count === 1) {\r\n            return 0;\r\n        } else if (count === 2) {\r\n            return index === 0 ? 0 : barHeight + 2;\r\n        }\r\n\r\n        if (count === 3) {\r\n            if (index === 0) {\r\n                return 0;\r\n            } else if (index === 1) {\r\n                return 11;\r\n            }\r\n\r\n            return 23;\r\n        } else {\r\n            return (barHeight + 2) * index;\r\n        }\r\n    };\r\n\r\n    getTrackTranslateY = (index, count, barHeight, trackHeight) => {\r\n        if (count <= 4) {\r\n            return 0;\r\n        }\r\n\r\n        if (index <= 1) {\r\n            return 0;\r\n        } else if (index >= count - 2) {\r\n            return trackHeight - 32;\r\n        }\r\n\r\n        return (barHeight + 4) / 2 + (index - 2) * (barHeight + 2);\r\n    };\r\n\r\n    getTrackHeight = (count, barHeight) => {\r\n        return count <= 3 ? 32 : barHeight * count + 2 * (count - 1);\r\n    };\r\n\r\n    render() {\r\n        const { count, index } = this.props;\r\n        if (count === 1) {\r\n            return (\r\n                <div className='pinned-message-border'>\r\n                    <div className='pinned-message-border-wrapper-1'/>\r\n                </div>);\r\n        }\r\n\r\n        const barHeight = this.getBarHeight(count, index);\r\n        const markHeight = this.getMarkHeight(count, index);\r\n        const trackHeight = this.getTrackHeight(count, barHeight);\r\n\r\n        const clipPathId = `clipPath_${count}`;\r\n        const clipPath = this.getClipPath(clipPathId, barHeight, count);\r\n\r\n        const markTranslateY = this.getMarkTranslateY(index, barHeight, count);\r\n        const trackTranslateY = this.getTrackTranslateY(index, count, barHeight, trackHeight);\r\n\r\n        return (\r\n            <div className={classNames('pinned-message-border', { 'pinned-message-border-mask': count > 4 })}>\r\n                <div className='pinned-message-border-wrapper' style={{ clipPath: `url(#${clipPathId})`, width: 2, height: trackHeight, transform: `translateY(-${trackTranslateY}px)` }}>\r\n                    <svg height='0' width='0'>\r\n                        <defs>{clipPath}</defs>\r\n                    </svg>\r\n                    <div className='pinned-message-border-mark' style={{ height: markHeight, transform: `translateY(${markTranslateY}px)` }}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPinnedMessageBorder.propTypes = {\r\n    count: PropTypes.number,\r\n    index: PropTypes.number\r\n};\r\n\r\nexport default PinnedMessageBorder;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport CSSTransition from 'react-transition-group/CSSTransition';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ReplyTile from '../Tile/ReplyTile';\r\nimport PlaylistEditIcon from '../../Assets/Icons/PlaylistEdit';\r\nimport { getContent, getReplyMinithumbnail, getReplyThumbnail, isDeletedMessage } from '../../Utils/Message';\r\nimport { openChat } from '../../Actions/Client';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './PinnedMessage.css';\r\nimport AnimatedCounter from './AnimatedCounter';\r\nimport PinnedMessageBorder from './PinnedMessageBorder';\r\n\r\nclass PinnedMessage extends React.Component {\r\n    state = {};\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevPropsChatId } = state;\r\n        const { chatId } = props;\r\n\r\n        if (prevPropsChatId !== chatId) {\r\n            const media = MessageStore.getMedia(chatId);\r\n\r\n            const pinned = media ? media.pinned : [];\r\n\r\n            const messageId = pinned && pinned.length > 0 ? pinned[0].id : 0;\r\n            const thumbnail = getReplyThumbnail(chatId, messageId);\r\n            const minithumbnail = getReplyMinithumbnail(chatId, messageId);\r\n\r\n            return {\r\n                prevPropsChatId: chatId,\r\n                clientData: ChatStore.getClientData(chatId),\r\n                pinned,\r\n                prevMessageId: 0,\r\n                messageId,\r\n                minithumbnail,\r\n                thumbnail,\r\n                lastPhoto: {\r\n                    messageId,\r\n                    minithumbnail,\r\n                    thumbnail\r\n                }\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { chatId } = this.props;\r\n        const { clientData, pinned, messageId } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clientData !== clientData) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.pinned !== pinned) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId } = this.props;\r\n        const { prevMessageId, messageId } = this.state;\r\n\r\n        if (prevProps.chatId !== chatId) {\r\n            this.animateText(messageId, prevMessageId, 0);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\r\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.on('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\r\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\r\n        MessageStore.off('clientUpdateCurrentPinnedMessage', this.onClientUpdateCurrentPinnedMessage);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    onClientUpdateCurrentPinnedMessage = update => {\r\n        const { chatId } = this.props;\r\n        if (chatId !== update.chatId) {\r\n            return;\r\n        }\r\n\r\n        this.scrollToMessageId(update.messageId);\r\n    };\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { message } = update;\r\n        if (chatId !== message.chat_id) {\r\n            return;\r\n        }\r\n        if (!message.is_pinned) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { pinned } = this.state;\r\n        const { chat_id, is_permanent, message_ids } = update;\r\n        const messageIds = new Map(message_ids.map(x => [x, x]));\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n        if (!pinned.some(x => messageIds.has(x.id))) {\r\n            return;\r\n        }\r\n        if (!is_permanent) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId } = this.props;\r\n        const { pinned } = this.state;\r\n        const { chat_id, message_id } = update;\r\n        if (chatId !== chat_id) {\r\n            return;\r\n        }\r\n        if (!pinned.some(x => x.id === message_id)) {\r\n            return;\r\n        }\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    animateText = (messageId, prevMessageId, duration = 250) => {\r\n        const textElement = document.getElementById('pinned-message-animated-text');\r\n        const text1Element = document.getElementById('pinned-message-animated-text-1');\r\n        const text2Element = document.getElementById('pinned-message-animated-text-2');\r\n        if (!textElement || !text1Element || !text2Element) return;\r\n\r\n        const timingFunction = 'ease-in-out';\r\n\r\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\r\n        if (scrollDown) {\r\n            textElement.style.cssText = 'transform: translateY(-19px)';\r\n            text1Element.style.cssText = 'opacity: 0';\r\n            text2Element.style.cssText = 'opacity: 1';\r\n            requestAnimationFrame(() => {\r\n                textElement.style.cssText = `transform: translateY(0); transition: transform ${duration}ms ${timingFunction}`;\r\n                text1Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\r\n                text2Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\r\n            });\r\n        } else {\r\n            textElement.style.cssText = 'transform: translateY(0px)';\r\n            text1Element.style.cssText = 'opacity: 1';\r\n            text2Element.style.cssText = 'opacity: 0';\r\n            requestAnimationFrame(() => {\r\n                textElement.style.cssText = `transform: translateY(-19px); transition: transform ${duration}ms ${timingFunction}`;\r\n                text1Element.style.cssText = `opacity: 0; transition: opacity ${duration}ms ${timingFunction}`;\r\n                text2Element.style.cssText = `opacity: 1; transition: opacity ${duration}ms ${timingFunction}`;\r\n            });\r\n        }\r\n    };\r\n\r\n    setPinnedState = () => {\r\n        const { chatId } = this.props;\r\n        const { messageId: currentMessageId, prevMessageId: currentPrevMessageId } = this.state;\r\n\r\n        const clientData = ChatStore.getClientData(chatId);\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinned = media ? media.pinned : [];\r\n\r\n        let messageId = pinned.some(x => x.id === currentMessageId) ? currentMessageId : 0;\r\n        if (!messageId && pinned.length > 0) {\r\n            messageId = pinned[0].id;\r\n        }\r\n        let prevMessageId = currentMessageId === messageId ? currentPrevMessageId : currentMessageId;\r\n\r\n        const thumbnail = getReplyThumbnail(chatId, messageId);\r\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\r\n\r\n        MessageStore.currentPinned = { chatId, id: messageId };\r\n        this.setState({\r\n            clientData,\r\n            pinned,\r\n            prevMessageId,\r\n            messageId,\r\n            thumbnail,\r\n            minithumbnail,\r\n            lastPhoto: {\r\n                messageId,\r\n                thumbnail,\r\n                minithumbnail\r\n            }\r\n        }, () => {\r\n            if (this.state.prevMessageId === 0) return;\r\n            if (currentMessageId === this.state.messageId) return;\r\n\r\n            this.animateText(this.state.messageId, this.state.prevMessageId);\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatMedia = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { chatId } = update;\r\n        if (chatId !== currentChatId) return;\r\n\r\n        this.setPinnedState();\r\n    };\r\n\r\n    onClientUpdateSetChatClientData = update => {\r\n        const { chatId, clientData } = update;\r\n\r\n        if (this.props.chatId !== chatId) return;\r\n\r\n        this.setState({ clientData });\r\n    };\r\n\r\n    scrollToMessageId = nextMessageId => {\r\n        const { chatId } = this.props;\r\n        const { messageId, thumbnail, minithumbnail } = this.state;\r\n\r\n        const nextThumbnail = getReplyThumbnail(chatId, nextMessageId);\r\n        const nextMinithumbnail = getReplyMinithumbnail(chatId, nextMessageId);\r\n\r\n        const lastPhoto = nextThumbnail ? {\r\n            messageId: nextMessageId,\r\n            thumbnail: nextThumbnail,\r\n            minithumbnail: nextMinithumbnail\r\n        } : {\r\n            messageId,\r\n            thumbnail,\r\n            minithumbnail\r\n        }\r\n\r\n        MessageStore.currentPinned = { chatId, id: messageId };\r\n        this.setState({\r\n            prevMessageId: messageId,\r\n            messageId: nextMessageId,\r\n            thumbnail: nextThumbnail,\r\n            minithumbnail: nextMinithumbnail,\r\n            lastPhoto\r\n        }, () => {\r\n            if (this.state.prevMessageId === 0) return;\r\n            if (messageId === this.state.messageId) return;\r\n\r\n            this.animateText(this.state.messageId, this.state.prevMessageId);\r\n        });\r\n    };\r\n\r\n    handleClick = event => {\r\n        const { chatId } = this.props;\r\n        const { pinned, messageId } = this.state;\r\n        if (!pinned.length) return;\r\n\r\n        if (!messageId) return;\r\n        if (event.nativeEvent.which !== 1) return;\r\n\r\n        MessageStore.clickedPinned = { chatId, id: messageId };\r\n\r\n        openChat(chatId, messageId);\r\n\r\n        const index = pinned.findIndex(x => x.id === messageId);\r\n        if (index === -1) return;\r\n\r\n        const nextIndex = index >= pinned.length - 1 ? 0 : index + 1;\r\n\r\n        this.scrollToMessageId(pinned[nextIndex].id);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleEditClick = event => {\r\n        const { chatId } = this.props;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateOpenPinned',\r\n            chatId\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const { messageId, prevMessageId, pinned, thumbnail, minithumbnail, lastPhoto, clientData } = this.state;\r\n\r\n        if (!chatId) return null;\r\n\r\n        if (clientData) {\r\n            const { unpinned } = clientData;\r\n            if (unpinned) return null;\r\n        }\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const prevMessage = MessageStore.get(chatId, prevMessageId);\r\n\r\n        let content = !message ? t('Loading') : getContent(message, t);\r\n        if (isDeletedMessage(message)) {\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        let prevContent = !prevMessage ? '' : getContent(prevMessage, t);\r\n        if (isDeletedMessage(prevMessage)) {\r\n            content = t('DeletedMessage');\r\n        }\r\n\r\n        let index = 0;\r\n        let caption = t('PinnedMessage');\r\n        if (pinned && pinned.length > 1) {\r\n            index = pinned ? pinned.findIndex(x => x.id === messageId) : -1;\r\n            if (pinned.length === 2) {\r\n                caption = index === 1 ? t('PreviousPinnedMessage') : t('PinnedMessage');\r\n            } else {\r\n                caption = (\r\n                    <>\r\n                        {t('PinnedMessage')}\r\n                        {index > 0 && (\r\n                            <>\r\n                                {' #'}\r\n                                <AnimatedCounter counter={pinned.length - index} height={19} reverse={true}/>\r\n                            </>)\r\n                        }\r\n                    </>);\r\n            }\r\n        }\r\n\r\n        const scrollDown = prevMessageId === 0 || messageId < prevMessageId;\r\n\r\n        return (\r\n            <>\r\n                <ListItem button className={classNames('pinned-message', { 'pinned-message-photo': thumbnail })} onMouseDown={this.handleClick}>\r\n                    <PinnedMessageBorder index={pinned.length - index - 1} count={pinned.length}/>\r\n                    <CSSTransition\r\n                        in={!!thumbnail}\r\n                        classNames='pinned-message-tile'\r\n                        timeout={250}\r\n                        mountOnEnter={true}\r\n                        unmountOnExit={true}>\r\n                        <div>\r\n                            <ReplyTile\r\n                                chatId={chatId}\r\n                                messageId={lastPhoto ? lastPhoto.messageId : null}\r\n                                thumbnail={lastPhoto ? lastPhoto.thumbnail : null}\r\n                                minithumbnail={lastPhoto ? lastPhoto.minithumbnail : null}\r\n                            />\r\n                        </div>\r\n                    </CSSTransition>\r\n                    <div className='pinned-message-content'>\r\n                        <div className='pinned-message-title'>{caption}</div>\r\n                        <div className='pinned-message-subtitle'>\r\n                            <div id='pinned-message-animated-text'>\r\n                                <div id='pinned-message-animated-text-1'>{scrollDown ? content : prevContent}</div>\r\n                                <div id='pinned-message-animated-text-2'>{scrollDown ? prevContent : content}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    { pinned.length > 1 && (\r\n                        <IconButton\r\n                            className='pinned-message-edit-button'\r\n                            aria-label='Edit'\r\n                            onClick={this.handleEditClick}\r\n                            onMouseDown={this.handleMouseDown}>\r\n                            <PlaylistEditIcon />\r\n                        </IconButton>\r\n                    )}\r\n                </ListItem>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nPinnedMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(PinnedMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '../../Assets/Icons/Search';\r\nimport MainMenuButton from './MainMenuButton';\r\nimport HeaderChat from '../Tile/HeaderChat';\r\nimport HeaderCommand from './HeaderCommand';\r\nimport HeaderProgress from './HeaderProgress';\r\nimport PinnedMessage from './PinnedMessage';\r\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\r\nimport {\r\n    getChatSubtitle,\r\n    getChatTitle,\r\n    isAccentChatSubtitle\r\n} from '../../Utils/Chat';\r\nimport { openChat, searchChat } from '../../Actions/Client';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Header.css';\r\n\r\nclass Header extends Component {\r\n    state = {\r\n        authorizationState: AppStore.getAuthorizationState(),\r\n        connectionState: AppStore.getConnectionState()\r\n    };\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\r\n\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\r\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\r\n\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n    }\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onUpdateConnectionState = update => {\r\n        this.setState({ connectionState: update.state });\r\n    };\r\n\r\n    onUpdateAuthorizationState = update => {\r\n        this.setState({ authorizationState: update.authorization_state });\r\n    };\r\n\r\n    openChatDetails = () => {\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        const { isSmallWidth } = AppStore;\r\n\r\n        if (isSmallWidth) {\r\n            openChat(chatId, null, true);\r\n        } else {\r\n            changeChatDetailsVisibility(true);\r\n        }\r\n    };\r\n\r\n    handleSearchChat = () => {\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        searchChat(chatId);\r\n    };\r\n\r\n    localize = str => {\r\n        const { t } = this.props;\r\n\r\n        return t(str)\r\n            .replace('...', '')\r\n            .replace('…', '');\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const {\r\n            authorizationState,\r\n            connectionState,\r\n            selectionCount,\r\n        } = this.state;\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\r\n        let title = getChatTitle(chatId, true, t);\r\n        let subtitle = getChatSubtitle(chatId, true);\r\n        let showProgressAnimation = false;\r\n\r\n        if (connectionState) {\r\n            switch (connectionState['@type']) {\r\n                case 'connectionStateConnecting':\r\n                    title = this.localize('Connecting');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateConnectingToProxy':\r\n                    title = this.localize('Connecting to proxy');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateReady':\r\n                    break;\r\n                case 'connectionStateUpdating':\r\n                    title = this.localize('Updating');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'connectionStateWaitingForNetwork':\r\n                    title = this.localize('Waiting for network');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n            }\r\n        } else if (authorizationState) {\r\n            switch (authorizationState['@type']) {\r\n                case 'authorizationStateClosed':\r\n                    break;\r\n                case ' authorizationStateClosing':\r\n                    break;\r\n                case 'authorizationStateLoggingOut':\r\n                    title = this.localize('Logging out');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'authorizationStateReady':\r\n                    break;\r\n                case 'authorizationStateWaitCode':\r\n                    break;\r\n                case 'authorizationStateWaitEncryptionKey':\r\n                    title = this.localize('Loading');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n                case 'authorizationStateWaitPassword':\r\n                    break;\r\n                case 'authorizationStateWaitPhoneNumber':\r\n                    break;\r\n                case 'authorizationStateWaitTdlibParameters':\r\n                    title = this.localize('Loading');\r\n                    subtitle = '';\r\n                    showProgressAnimation = true;\r\n                    break;\r\n            }\r\n        } else {\r\n            title = this.localize('Loading');\r\n            subtitle = '';\r\n            showProgressAnimation = true;\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('header-details', { 'header-details-selection': selectionCount > 0 })}>\r\n                <div className='header-details-content'>\r\n                    <HeaderCommand count={selectionCount} />\r\n                    <div className='header-details-row'>\r\n                        {showProgressAnimation ? (\r\n                            <div\r\n                                className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\r\n                                onClick={this.openChatDetails}>\r\n                                <span className='header-status-content'>{title}</span>\r\n                                <HeaderProgress />\r\n                                <span className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\r\n                                    {subtitle}\r\n                                </span>\r\n                                <span className='header-status-tail' />\r\n                            </div>\r\n                        ) : (\r\n                            <HeaderChat\r\n                                className={classNames('grow', 'cursor-pointer')}\r\n                                chatId={chatId}\r\n                                onClick={this.openChatDetails}\r\n                            />\r\n                        )}\r\n                        <PinnedMessage chatId={chatId} />\r\n                        {chat && (\r\n                            <>\r\n                                <IconButton\r\n                                    className='header-right-second-button'\r\n                                    aria-label='Search'\r\n                                    onClick={this.handleSearchChat}>\r\n                                    <SearchIcon />\r\n                                </IconButton>\r\n                                <MainMenuButton openChatDetails={this.openChatDetails} />\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Header);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './VolumeButton.css';\r\n\r\nclass VolumeButton extends React.Component {\r\n    state = {\r\n        anchorEl: null,\r\n        value: PlayerStore.volume,\r\n        prevValue: PlayerStore.volume,\r\n        dragging: false,\r\n        buttonOver: false,\r\n        popupOver: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n    }\r\n\r\n    onClientUpdateMediaVolume = update => {\r\n        const { volume, prevVolume } = update;\r\n\r\n        if (prevVolume === undefined) {\r\n            this.setState({ value: volume });\r\n        } else {\r\n            this.setState({ value: volume, prevValue: prevVolume });\r\n        }\r\n    };\r\n\r\n    handlePopoverOpen = anchorEl => {\r\n        this.setState({ anchorEl: anchorEl });\r\n    };\r\n\r\n    handlePopoverClose = () => {\r\n        const { dragging, buttonOver, popupOver } = this.state;\r\n\r\n        if (dragging) return;\r\n        if (buttonOver) return;\r\n        if (popupOver) return;\r\n\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleMouseEnter = (event, openPopover) => {\r\n        this.setState({ buttonOver: true });\r\n\r\n        if (openPopover) {\r\n            this.handlePopoverOpen(event.currentTarget);\r\n        }\r\n    };\r\n\r\n    handleMouseLeave = () => {\r\n        this.setState({ buttonOver: false }, () => {\r\n            this.handlePopoverClose();\r\n        });\r\n    };\r\n\r\n    handlePopupMouseLeave = () => {\r\n        this.setState({ popupOver: false }, () => {\r\n            this.handlePopoverClose();\r\n        });\r\n    };\r\n\r\n    handleVoiceClick = () => {\r\n        const { value, prevValue } = this.state;\r\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaVolume',\r\n            volume: nextValue\r\n        });\r\n    };\r\n\r\n    handleChange = (event, value) => {\r\n        const { dragging, prevValue } = this.state;\r\n\r\n        if (dragging) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaVolume',\r\n                volume: value\r\n            });\r\n        } else {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaVolume',\r\n                prevVolume: value > 0 ? value : prevValue,\r\n                volume: value\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDragStart = () => {\r\n        const { value } = this.state;\r\n\r\n        this.setState({\r\n            dragging: true,\r\n            prevValue: value\r\n        });\r\n    };\r\n\r\n    handleDragEnd = () => {\r\n        const { value, prevValue } = this.state;\r\n\r\n        this.setState(\r\n            {\r\n                dragging: false,\r\n                prevValue: value > 0 ? value : prevValue\r\n            },\r\n            () => {\r\n                this.handlePopoverClose();\r\n            }\r\n        );\r\n    };\r\n\r\n    getVolumeIcon = value => {\r\n        if (value === 0) {\r\n            return <VolumeOffIcon fontSize='small' />;\r\n        }\r\n\r\n        if (value < 0.25) {\r\n            return <VolumeMuteIcon fontSize='small' />;\r\n        }\r\n\r\n        if (value < 0.5) {\r\n            return <VolumeDownIcon fontSize='small' />;\r\n        }\r\n\r\n        return <VolumeUpIcon fontSize='small' />;\r\n    };\r\n\r\n    render() {\r\n        const { anchorEl, value } = this.state;\r\n        const open = Boolean(anchorEl);\r\n\r\n        return (\r\n            <div\r\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\r\n                onMouseLeave={this.handleMouseLeave}\r\n                style={{\r\n                    position: 'relative',\r\n                    background: 'transparent'\r\n                }}>\r\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\r\n                    {this.getVolumeIcon(value)}\r\n                </IconButton>\r\n                <div\r\n                    style={{\r\n                        position: 'absolute',\r\n                        background: 'transparent',\r\n                        visibility: open ? 'visible' : 'hidden',\r\n                        zIndex: 1\r\n                    }}\r\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\r\n                    onMouseLeave={this.handlePopupMouseLeave}>\r\n                    <div className='volume-button-panel'>\r\n                        <Slider\r\n                            min={0}\r\n                            max={1}\r\n                            step={0.01}\r\n                            value={value}\r\n                            onChange={this.handleChange}\r\n                            onDragStart={this.handleDragStart}\r\n                            onDragEnd={this.handleDragEnd}\r\n                            orientation='vertical'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default VolumeButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\r\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass RepeatButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { repeat } = PlayerStore;\r\n\r\n        this.state = {\r\n            repeat\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\r\n    }\r\n\r\n    onClientUpdateMediaRepeat = update => {\r\n        const { repeat } = update;\r\n\r\n        this.setState({ repeat });\r\n    };\r\n\r\n    handleRepeat = () => {\r\n        const { repeat } = this.state;\r\n\r\n        let nextRepeat = repeat;\r\n        switch (repeat) {\r\n            case RepeatEnum.NONE: {\r\n                nextRepeat = RepeatEnum.REPEAT;\r\n                break;\r\n            }\r\n            case RepeatEnum.REPEAT: {\r\n                nextRepeat = RepeatEnum.REPEAT_ONE;\r\n                break;\r\n            }\r\n            case RepeatEnum.REPEAT_ONE: {\r\n                nextRepeat = RepeatEnum.NONE;\r\n                break;\r\n            }\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaRepeat',\r\n            repeat: nextRepeat\r\n        });\r\n    };\r\n\r\n    getIcon = repeat => {\r\n        switch (repeat) {\r\n            case RepeatEnum.NONE: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n            case RepeatEnum.REPEAT: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n            case RepeatEnum.REPEAT_ONE: {\r\n                return <RepeatOneIcon fontSize='small' />;\r\n            }\r\n            default: {\r\n                return <RepeatIcon fontSize='small' />;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { repeat } = this.state;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\r\n                onClick={this.handleRepeat}>\r\n                {this.getIcon(repeat)}\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RepeatButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass ShuffleButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { shuffle } = PlayerStore;\r\n\r\n        this.state = {\r\n            shuffle\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\r\n    }\r\n\r\n    onClientUpdateMediaShuffle = update => {\r\n        const { shuffle } = update;\r\n\r\n        this.setState({ shuffle });\r\n    };\r\n\r\n    handleShuffle = () => {\r\n        const { shuffle } = this.state;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaShuffle',\r\n            shuffle: !shuffle\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { shuffle } = this.state;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={!shuffle ? 'default' : 'primary'}\r\n                onClick={this.handleShuffle}>\r\n                <ShuffleIcon fontSize='small' />\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShuffleButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass PlaybackRateButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\r\n\r\n        this.state = {\r\n            audioPlaybackRate,\r\n            playbackRate\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n    }\r\n\r\n    onClientUpdateMediaPlaybackRate = update => {\r\n        const { playbackRate } = update;\r\n\r\n        this.setState({ playbackRate });\r\n    };\r\n\r\n    onClientUpdateMediaAudioPlaybackRate = update => {\r\n        const { audioPlaybackRate } = update;\r\n\r\n        this.setState({ audioPlaybackRate });\r\n    };\r\n\r\n    handlePlaybackRate = () => {\r\n        const { audio } = this.props;\r\n        const { audioPlaybackRate, playbackRate } = this.state;\r\n\r\n        const rate = audio ? audioPlaybackRate : playbackRate;\r\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\r\n            ? PLAYER_PLAYBACKRATE_FAST\r\n            : PLAYER_PLAYBACKRATE_NORMAL;\r\n\r\n        if (audio) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\r\n                audioPlaybackRate: nextRate\r\n            });\r\n        } else {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaybackRate',\r\n                playbackRate: nextRate\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { audio } = this.props;\r\n        const { audioPlaybackRate, playbackRate } = this.state;\r\n\r\n        const rate = audio ? audioPlaybackRate : playbackRate;\r\n\r\n        return (\r\n            <IconButton\r\n                className='header-player-button'\r\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\r\n                onClick={this.handlePlaybackRate}>\r\n                <div className='header-player-playback-icon'>2X</div>\r\n            </IconButton>\r\n        );\r\n    }\r\n}\r\n\r\nPlaybackRateButton.defaultProps = {\r\n    audio: false\r\n}\r\n\r\nPlaybackRateButton.propTypes = {\r\n    audio: PropTypes.bool\r\n}\r\n\r\nexport default PlaybackRateButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { getDurationString } from '../../Utils/Common';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport './Time.css';\r\n\r\nclass Time extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { duration } = this.props;\r\n\r\n        const currentTime = 0;\r\n        const reverse = false;\r\n\r\n        this.state = {\r\n            reverse,\r\n            currentTime,\r\n            duration,\r\n            currentTimeString: getDurationString(currentTime, duration, reverse),\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\r\n    }\r\n\r\n    onClientUpdateMediaTime = update => {\r\n        const { currentTime, duration } = update;\r\n        const { reverse } = this.state;\r\n\r\n        this.setState({\r\n            currentTime,\r\n            duration,\r\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\r\n        });\r\n    };\r\n\r\n    handleReverse = event => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        const { currentTime, duration, reverse } = this.state;\r\n\r\n        this.setState({\r\n            reverse: !reverse,\r\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { currentTimeString } = this.state;\r\n\r\n        return (\r\n            <div className='header-player-time' onClick={this.handleReverse}>\r\n                {currentTimeString}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Time;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as ReactDOM from 'react-dom';\r\nimport MediaAudio from '../Message/Media/Audio';\r\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\r\nimport { openMedia } from '../../Utils/Message';\r\nimport { getMedia } from '../../Utils/Media';\r\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\r\nimport { openInstantViewMedia } from '../../Utils/InstantView';\r\nimport { SCROLL_PRECISION } from '../../Constants';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './Playlist.css';\r\n\r\nclass Playlist extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.listRef = React.createRef();\r\n        this.itemRefMap = new Map();\r\n\r\n        const { message, block, playlist } = PlayerStore;\r\n        this.state = {\r\n            message,\r\n            block,\r\n            playlist,\r\n\r\n            open: false,\r\n            titleMouseOver: false,\r\n            playlistMouseOver: false\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { open } = this.state;\r\n\r\n        if (!prevState.open && open) {\r\n            this.scrollToActive();\r\n        }\r\n    }\r\n\r\n    scrollToActive = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        const { playlist, message, block } = this.state;\r\n        if (!message && !block) return;\r\n        if (!playlist) return;\r\n\r\n        const index = [...playlist.items]\r\n            .reverse()\r\n            .findIndex(x => playlistItemEquals(x, message || block));\r\n        if (index === -1) return;\r\n\r\n        const item = this.itemRefMap.get(index);\r\n        if (!item) return;\r\n\r\n        const node = ReactDOM.findDOMNode(item);\r\n        if (!node) return;\r\n\r\n        list.scrollTop = node.offsetTop - 15;\r\n    };\r\n\r\n    componentDidMount() {\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\r\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\r\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\r\n    }\r\n\r\n    onClientUpdateMediaTitleMouseOver = update => {\r\n        const { over } = update;\r\n\r\n        if (over) {\r\n            this.setState(\r\n                {\r\n                    playlistMouseOver: over\r\n                },\r\n                () => {\r\n                    this.tryOpen();\r\n                }\r\n            );\r\n        } else {\r\n            this.setState(\r\n                {\r\n                    playlistMouseOver: over\r\n                },\r\n                () => {\r\n                    this.tryClose();\r\n                }\r\n            );\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { source } = update;\r\n\r\n        switch (source['@type']) {\r\n            case 'message': {\r\n\r\n                this.setState({\r\n                    message: source,\r\n                    block: null\r\n                })\r\n                break;\r\n            }\r\n            case 'instantViewSource': {\r\n\r\n                this.setState({\r\n                    message: null,\r\n                    block: source.block\r\n                });\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylistLoading = update => {\r\n        const { message, block } = this.state;\r\n        const { source } = update;\r\n\r\n        const chatId = message ? message.chat_id : 0;\r\n        const messageId = message ? message.id : 0;\r\n\r\n        if (isCurrentSource(chatId, messageId, block, source)) {\r\n            this.setState({\r\n                playlist: null\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylist = update => {\r\n        const { message, block } = this.state;\r\n        const { source, playlist } = update;\r\n\r\n        const chatId = message ? message.chat_id : 0;\r\n        const messageId = message ? message.id : 0;\r\n\r\n        if (isCurrentSource(chatId, messageId, block, source)) {\r\n            this.setState({\r\n                playlist\r\n            });\r\n        }\r\n    };\r\n\r\n    tryOpen = () => {\r\n        clearTimeout(this.openTimeout);\r\n\r\n        this.openTimeout = setTimeout(() => {\r\n            const { titleMouseOver, playlistMouseOver } = this.state;\r\n            this.setState({\r\n                open: titleMouseOver || playlistMouseOver\r\n            });\r\n        }, 250);\r\n    };\r\n\r\n    tryClose = () => {\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n            const { titleMouseOver, playlistMouseOver } = this.state;\r\n            this.setState({\r\n                open: titleMouseOver || playlistMouseOver\r\n            });\r\n        }, 250);\r\n    };\r\n\r\n    handleMouseEnter = () => {\r\n        this.setState({\r\n            playlistMouseOver: true,\r\n            open: true\r\n        });\r\n    };\r\n\r\n    handleMouseLeave = () => {\r\n        this.setState(\r\n            {\r\n                playlistMouseOver: false\r\n            },\r\n            () => {\r\n                this.tryClose();\r\n            }\r\n        );\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n        if (!list) return;\r\n\r\n        if (list.scrollTop <= SCROLL_PRECISION) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaylistNext'\r\n            });\r\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateMediaPlaylistPrev'\r\n            });\r\n        }\r\n    };\r\n\r\n    getPageBlock(block, instantView) {\r\n        if (!block) return null;\r\n\r\n        let element = null;\r\n        switch (block['@type']) {\r\n            case 'pageBlockAudio': {\r\n                element = (\r\n                    <MediaAudio\r\n                        block={block}\r\n                        audio={block.audio}\r\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\r\n                );\r\n                break;\r\n            }\r\n            case 'pageBlockVoiceNote': {\r\n                element = (\r\n                    <MediaVoiceNote\r\n                        block={block}\r\n                        voiceNote={block.voice_note}\r\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\r\n                );\r\n                break;\r\n            }\r\n        }\r\n\r\n        return element;\r\n    }\r\n\r\n    render() {\r\n        const { open, playlist } = this.state;\r\n\r\n        if (!open) return null;\r\n        if (!playlist) return null;\r\n\r\n        const { items } = playlist;\r\n        if (!items) return null;\r\n        if (items.length <= 1) return null;\r\n\r\n        this.itemRefMap.clear();\r\n\r\n        let iv = null;\r\n        if (items[0]['@type'] === 'instantViewSource') {\r\n            iv = playlist.source.instantView;\r\n        }\r\n\r\n        const getMediaFunc = items[0]['@type'] === 'message'\r\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\r\n            : x => this.getPageBlock(x, iv)\r\n\r\n        return (\r\n            <div className='playlist'>\r\n                <div className='playlist-wrapper'>\r\n                    <div\r\n                        ref={this.listRef}\r\n                        className='playlist-items'\r\n                        onMouseEnter={this.handleMouseEnter}\r\n                        onMouseLeave={this.handleMouseLeave}\r\n                        onScroll={this.handleScroll}>\r\n                        {[...items]\r\n                            .reverse()\r\n                            .map((x, index) => (\r\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\r\n                                    {getMediaFunc(x)}\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPlaylist.propTypes = {\r\n\r\n};\r\n\r\nexport default Playlist;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { loadInstantViewContent } from '../Utils/File';\r\nimport { setInstantViewContent } from './Client';\r\nimport TdLibController from '../Controllers/TdLibController';\r\n\r\nexport function openMediaInstantView(instantView, block) {\r\n    const url = urlCache.get(instantView);\r\n    if (!url) return;\r\n\r\n    console.log('[IV] open', instantView);\r\n    loadInstantViewContent(instantView);\r\n    setInstantViewContent({ instantView, block, url });\r\n}\r\n\r\nlet timestamp = null;\r\n\r\nconst ivCache = new Map();\r\nconst urlCache = new Map();\r\n\r\nexport async function openInstantView(url) {\r\n    try {\r\n        let result = null;\r\n        if (ivCache.has(url)) {\r\n            result = ivCache.get(url);\r\n        } else {\r\n            const now = (timestamp = new Date());\r\n            result = await TdLibController.send({\r\n                '@type': 'getWebPageInstantView',\r\n                url,\r\n                force_full: true\r\n            });\r\n            ivCache.set(url, result);\r\n            urlCache.set(result, url);\r\n            if (timestamp !== now) return;\r\n        }\r\n\r\n        console.log('[IV] open', result);\r\n        loadInstantViewContent(result);\r\n        setInstantViewContent({ instantView: result, url });\r\n    } catch {\r\n        const newWindow = window.open();\r\n        newWindow.opener = null;\r\n        newWindow.location = url;\r\n    }\r\n}\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\r\nimport PauseIcon from '../../Assets/Icons/Pause';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport VolumeButton from '../Player/VolumeButton';\r\nimport RepeatButton from '../Player/RepeatButton';\r\nimport ShuffleButton from '../Player/ShuffleButton';\r\nimport PlaybackRateButton from './PlaybackRateButton';\r\nimport Time from '../Player/Time';\r\nimport Playlist from '../Player/Playlist';\r\nimport { supportsStreaming } from '../../Utils/File';\r\nimport { openChat } from '../../Actions/Client';\r\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\r\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\r\nimport { openMediaInstantView } from '../../Actions/InstantView';\r\nimport { clamp } from '../../Utils/Common';\r\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './HeaderPlayer.css';\r\n\r\nclass HeaderPlayer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n\r\n        const { message, block, instantView, playlist } = PlayerStore;\r\n        const { currentTime, duration } = getCurrentTime(message);\r\n\r\n        this.state = {\r\n            currentTime,\r\n            duration,\r\n            message,\r\n            block,\r\n            instantView,\r\n            playlist,\r\n            playing: false,\r\n            src: getMediaSrc(message),\r\n            mimeType: getMediaMimeType(message)\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { message, block, playlist, src, playing } = this.state;\r\n\r\n        if (nextState.block !== block) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.message !== message) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playlist !== playlist) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.src !== src) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playing !== playing) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.addMediaSessionHandlers();\r\n\r\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\r\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\r\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\r\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\r\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\r\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.removeMediaSessionHandlers();\r\n\r\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\r\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\r\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\r\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\r\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\r\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\r\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\r\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\r\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\r\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\r\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\r\n    }\r\n\r\n    addMediaSessionHandlers() {\r\n        const { mediaSession } = navigator;\r\n        if (!mediaSession) return;\r\n\r\n        try {\r\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\r\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\r\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\r\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\r\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\r\n        } catch {\r\n\r\n        }\r\n    }\r\n\r\n    handleSeekForward = () => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\r\n    };\r\n\r\n    handleSeekBackward = () => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\r\n    };\r\n\r\n    handleSeekTo = event => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        this.handleSeek(event.seekTime);\r\n    };\r\n\r\n    handleSeek = currentTime => {\r\n        const video = this.videoRef.current;\r\n        if (!video) return;\r\n\r\n        currentTime = clamp(currentTime, 0, video.duration || 0);\r\n\r\n        video.currentTime = currentTime;\r\n    };\r\n\r\n    removeMediaSessionHandlers() {\r\n        const { mediaSession } = navigator;\r\n        if (!mediaSession) return;\r\n\r\n        try{\r\n            mediaSession.setActionHandler('nexttrack', null);\r\n            mediaSession.setActionHandler('previoustrack', null);\r\n            mediaSession.setActionHandler('seekforward', null);\r\n            mediaSession.setActionHandler('seekbackward', null);\r\n            mediaSession.setActionHandler('seekto', null);\r\n        }catch {\r\n\r\n        }\r\n    }\r\n\r\n    fadeOutVolume(duration) {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const totalIterations = 20;\r\n        let count = 0;\r\n        const currentVolume = player.volume;\r\n        this.volumeInterval = setInterval(() => {\r\n            if (count >= totalIterations) {\r\n                player.pause();\r\n                player.volume = currentVolume;\r\n                clearInterval(this.volumeInterval);\r\n            } else {\r\n                player.volume = currentVolume / (count + 1);\r\n                count++;\r\n            }\r\n        }, duration / totalIterations);\r\n    }\r\n\r\n    fadeInVolume(duration) {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const totalIterations = 20;\r\n        let count = 0;\r\n        const currentVolume = player.volume;\r\n        player.volume = 0;\r\n        player.play();\r\n        this.volumeInterval = setInterval(() => {\r\n            if (count >= totalIterations) {\r\n                player.volume = currentVolume;\r\n                clearInterval(this.volumeInterval);\r\n            } else {\r\n                player.volume = currentVolume / totalIterations * (count + 1);\r\n                count++;\r\n            }\r\n        }, duration / totalIterations);\r\n    }\r\n\r\n    onClientUpdateRecordStart = update => {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        if (!player.paused) {\r\n            this.fadeOutVolume(250);\r\n            this.pausedForRecord = true;\r\n        }\r\n    };\r\n\r\n    onClientUpdateRecordStop = update => {\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        if (player.paused && this.pausedForRecord) {\r\n            this.fadeInVolume(250);\r\n            this.pausedForRecord = false;\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaybackRate = update => {\r\n        const { playbackRate } = update;\r\n\r\n        const { message, block } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const audio = hasAudio(message || block);\r\n        if (audio) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.playbackRate = playbackRate;\r\n    };\r\n\r\n    onClientUpdateMediaAudioPlaybackRate = update => {\r\n        const { audioPlaybackRate } = update;\r\n\r\n        const { message, block } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        if (!hasAudio(message || block)) return;\r\n        if (!useAudioPlaybackRate(message || block)) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.playbackRate = audioPlaybackRate;\r\n    };\r\n\r\n    onClientUpdateMediaVolume = update => {\r\n        const { volume } = update;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        player.volume = volume;\r\n    };\r\n\r\n    onClientUpdateMediaSeek = update => {\r\n        const { source, value, duration } = update;\r\n        const { message, block } = this.state;\r\n\r\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n        if (!player.duration) {\r\n            this.currentValue = { value, duration };\r\n            return;\r\n        }\r\n\r\n        player.currentTime = value * player.duration;\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\r\n    };\r\n\r\n    onClientUpdateMediaViewerEnded = update => {\r\n        this.playingMediaViewer = false;\r\n    };\r\n\r\n    onClientUpdateMediaViewerPause = update => {\r\n        this.playingMediaViewer = false;\r\n    };\r\n\r\n    onClientUpdateMediaViewerPlay = update => {\r\n        this.playingMediaViewer = true;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        this.fadeOutVolume(250);\r\n    };\r\n\r\n    startPlayingFile = source => {\r\n        if (!source) return;\r\n\r\n        const { playlist } = PlayerStore;\r\n        const { src: prevSrc } = this.state;\r\n\r\n        const src = getMediaSrc(source);\r\n        const mimeType = getMediaMimeType(source);\r\n        const { currentTime, duration } = getCurrentTime(source);\r\n        const playing = Boolean(src);\r\n\r\n        const srcSource = source['@type'] === 'instantViewSource'\r\n            ? { message: null, block: source.block, instantView: source.instantView }\r\n            : { message: source, block: null, instantView: null };\r\n\r\n        this.setState(\r\n            {\r\n                currentTime,\r\n                duration,\r\n                playlist,\r\n                playing,\r\n                src,\r\n                ...srcSource,\r\n                mimeType\r\n            },\r\n            () => {\r\n                const player = this.videoRef.current;\r\n                if (!player) return;\r\n\r\n                if (prevSrc !== src) {\r\n                    player.load();\r\n                    if (this.currentValue) {\r\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\r\n                        this.currentValue = null;\r\n                    } else {\r\n                        player.currentTime = currentTime;\r\n                    }\r\n                }\r\n\r\n                if (this.playingMediaViewer) {\r\n                    player.pause();\r\n\r\n                    TdLibController.clientUpdate({\r\n                        '@type': 'clientUpdateMediaPause',\r\n                        source\r\n                    });\r\n                } else if (player.paused) {\r\n                    player.play();\r\n                }\r\n            }\r\n        );\r\n    };\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { chatId, messageId, fileId } = update;\r\n        const { message, block, instantView } = this.state;\r\n\r\n        if (message) {\r\n            const { chat_id, id, content } = message;\r\n            if (!content) return;\r\n            if (chatId !== chat_id || messageId !== id) return;\r\n\r\n            let startPlaying = false;\r\n            switch (content['@type']) {\r\n                case 'messageText': {\r\n                    const { web_page } = content;\r\n                    if (web_page) {\r\n                        const { audio, voice_note, video_note } = web_page;\r\n\r\n                        if (audio) {\r\n                            if (supportsStreaming()) return;\r\n\r\n                            const { audio: file } = audio;\r\n                            if (file) {\r\n                                startPlaying = true;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (voice_note) {\r\n                            const { voice } = voice_note;\r\n                            if (voice) {\r\n                                startPlaying = true;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (video_note) {\r\n                            const { video } = video_note;\r\n                            if (video) {\r\n                                startPlaying = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageAudio': {\r\n                    const { audio } = content;\r\n                    if (audio) {\r\n                        if (supportsStreaming()) return;\r\n\r\n                        const { audio: file } = audio;\r\n                        if (file) {\r\n                            startPlaying = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageVoiceNote': {\r\n                    const { voice_note } = content;\r\n                    if (voice_note) {\r\n                        const { voice } = voice_note;\r\n                        if (voice) {\r\n                            startPlaying = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'messageVideoNote': {\r\n                    const { video_note } = content;\r\n                    if (video_note) {\r\n                        const { video } = video_note;\r\n                        if (video) {\r\n                            startPlaying = true;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (startPlaying) {\r\n                this.startPlayingFile(message);\r\n            }\r\n        } else if (block) {\r\n            let startPlaying = false;\r\n            switch (block['@type']) {\r\n                case 'pageBlockAudio': {\r\n                    const { audio } = block;\r\n                    if (audio) {\r\n                        if (supportsStreaming()) return;\r\n\r\n                        const { audio: file } = audio;\r\n                        if (file && file.id === fileId) {\r\n                            startPlaying = true;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'pageBlockVoiceNote': {\r\n                    const { voice_note } = block;\r\n                    if (voice_note) {\r\n                        const { voice: file } = voice_note;\r\n                        if (file && file.id === fileId) {\r\n                            startPlaying = true;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'pageBlockVideoNote': {\r\n                    const { video_note } = block;\r\n                    if (video_note) {\r\n                        const { video: file } = video_note;\r\n                        if (file && file.id === fileId) {\r\n                            startPlaying = true;\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (startPlaying) {\r\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaPlaylist = update => {\r\n        const { playlist, source } = update;\r\n        const { message, block } = this.state;\r\n\r\n        const chatId = message ? message.chat_id : 0;\r\n        const messageId = message ? message.id : 0;\r\n\r\n        if (isCurrentSource(chatId, messageId, block, source)) {\r\n            this.setState({ playlist });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaClose = update => {\r\n        this.setState({\r\n            message: null,\r\n            block: null,\r\n            instantView: null,\r\n            playlist: null,\r\n            playing: false,\r\n            src: null,\r\n            mimeType: null\r\n        }, () => {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        });\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const { source } = update;\r\n        const { message, block, src } = this.state;\r\n\r\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\r\n            if (!src) return;\r\n\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            this.pausedForRecord = false;\r\n            if (player.paused) {\r\n                player.play();\r\n            } else {\r\n                player.pause();\r\n            }\r\n        } else {\r\n            this.startPlayingFile(source);\r\n        }\r\n    };\r\n\r\n    handlePrev = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPrev'\r\n        });\r\n    };\r\n\r\n    handlePlay = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaActive',\r\n            source\r\n        });\r\n    };\r\n\r\n    handleNext = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaNext'\r\n        });\r\n    };\r\n\r\n    handleEnded = (moveNext = true) => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaEnding',\r\n            source,\r\n            moveNext\r\n        });\r\n\r\n        this.setState(\r\n            {\r\n                //playing: false,\r\n                //message: null,\r\n                //src: null\r\n            },\r\n            () => {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateMediaEnd',\r\n                    source,\r\n                    moveNext\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    handleVideoEnded = () => {\r\n        const video = this.videoRef.current;\r\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\r\n\r\n        this.handleEnded(true);\r\n    };\r\n\r\n    handleClose = () => {\r\n        const player = this.videoRef.current;\r\n        if (player) {\r\n            player.pause();\r\n        }\r\n\r\n        this.handleEnded(false);\r\n    };\r\n\r\n    handleLoadedMetadata = () => {\r\n        let { message, block, instantView, currentTime } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\r\n\r\n        const audio = hasAudio(message || block);\r\n        const voiceNote = hasVoice(message || block);\r\n\r\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\r\n        if (voiceNote) {\r\n            rate = playbackRate;\r\n        } else if (audio && useAudioPlaybackRate(message || block)) {\r\n            rate = audioPlaybackRate;\r\n        }\r\n\r\n        player.playbackRate = rate;\r\n        player.volume = volume;\r\n        player.muted = false;\r\n        if (this.currentValue) {\r\n            player.currentTime = player.duration * this.currentValue.value;\r\n            this.currentValue = null;\r\n        } else {\r\n            player.currentTime = currentTime;\r\n        }\r\n\r\n        player.play();\r\n\r\n        const { buffered, duration, videoWidth, videoHeight } = player;\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaLoadedMetadata',\r\n            source,\r\n            buffered,\r\n            duration,\r\n            videoWidth,\r\n            videoHeight\r\n        });\r\n\r\n        if (audio) {\r\n            return;\r\n        }\r\n        if (voiceNote) {\r\n            return;\r\n        }\r\n\r\n        let stream = null;\r\n        if ('captureStream' in player) {\r\n            stream = player.captureStream();\r\n        } else if ('mozCaptureStream' in player) {\r\n            stream = player.mozCaptureStream();\r\n        }\r\n\r\n        if (!stream) {\r\n            return;\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaCaptureStream',\r\n            chatId: message.chat_id,\r\n            messageId: message.id,\r\n            stream: stream\r\n        });\r\n    };\r\n\r\n    handleProgress = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { buffered } = player;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaProgress',\r\n            source,\r\n            buffered\r\n        });\r\n    }\r\n\r\n    handleTimeUpdate = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { currentTime, buffered, duration } = player;\r\n\r\n        this.setState({ currentTime });\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTime',\r\n            source,\r\n            duration,\r\n            currentTime,\r\n            buffered,\r\n            timestamp: Date.now()\r\n        });\r\n\r\n        this.setCurrentTime({ currentTime, duration });\r\n    };\r\n\r\n    handleCanPlay = () => {\r\n\r\n    };\r\n\r\n    handleVideoPlay = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        this.setState({ playing: true });\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const { currentTime, duration } = player;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPlay',\r\n            source,\r\n            currentTime,\r\n            duration,\r\n            timestamp: Date.now()\r\n        });\r\n    };\r\n\r\n    handleVideoPause = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        this.setState({\r\n            playing: false\r\n        });\r\n\r\n        const player = this.videoRef.current;\r\n        if (!player) return;\r\n\r\n        const source = message || { '@type': 'instantViewSource', block, instantView };\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaPause',\r\n            source\r\n        });\r\n    };\r\n\r\n    hasPrev = (item, playlist) => {\r\n        if (!item) return false;\r\n        if (!playlist || !playlist.items.length) return false;\r\n\r\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\r\n        if (index === -1) return false;\r\n\r\n        return index + 1 < playlist.items.length;\r\n    };\r\n\r\n    hasNext = (item, playlist) => {\r\n        if (!item) return false;\r\n        if (!playlist || !playlist.items.length) return false;\r\n\r\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\r\n        if (index === -1) return false;\r\n\r\n        return index - 1 >= 0;\r\n    };\r\n\r\n    handleTitleMouseEnter = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTitleMouseOver',\r\n            over: true\r\n        });\r\n    };\r\n\r\n    handleTitleMouseLeave = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaTitleMouseOver',\r\n            over: false\r\n        });\r\n    };\r\n\r\n    handleTitleClick = () => {\r\n        const { message, block, instantView } = this.state;\r\n        if (message) {\r\n            openChat(message.chat_id, message.id);\r\n            return;\r\n        }\r\n\r\n        if (block && instantView) {\r\n            openMediaInstantView(instantView, block);\r\n            return;\r\n        }\r\n    };\r\n\r\n    setCurrentTime = currentTime => {\r\n        const { message, block } = this.state;\r\n        if (!message && !block) return;\r\n\r\n        if (!useAudioPlaybackRate(message || block)) return;\r\n\r\n        const audio = getMessageAudio(message.chat_id, message.id);\r\n        if (!audio) return;\r\n\r\n        const { audio: file } = audio;\r\n        if (!file) return;\r\n\r\n        const { remote } = file;\r\n        if (!remote) return;\r\n\r\n        const { unique_id } = remote;\r\n        if (!unique_id) return;\r\n\r\n        if (!currentTime) {\r\n            PlayerStore.clearCurrentTime(unique_id);\r\n        } else {\r\n            PlayerStore.setCurrentTime(unique_id, currentTime);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\r\n\r\n        const audio = hasAudio(message || block);\r\n        const useAudioRate = useAudioPlaybackRate(message || block);\r\n\r\n        const date = message ? message.date : null;\r\n\r\n        const title = getMediaTitle(message || block, t);\r\n        const dateHintStr = getDateHint(date);\r\n        const dateStr = getDate(date);\r\n        const showDate = false; //!audio;\r\n        const showPlaybackRate = !audio || useAudioRate;\r\n        const showRepeat = audio;\r\n        const showShuffle = audio;\r\n        const hasPrev = this.hasPrev(message || block, playlist);\r\n        const hasNext = this.hasNext(message || block, playlist);\r\n\r\n        const source = src ? <source src={src} type={mimeType}/> : null;\r\n\r\n        return (\r\n            <>\r\n                <video\r\n                    className='header-player-video'\r\n                    ref={this.videoRef}\r\n                    autoPlay={true}\r\n                    controls={false}\r\n                    width={44}\r\n                    height={44}\r\n                    disablePictureInPicture={true}\r\n                    onLoadedMetadata={this.handleLoadedMetadata}\r\n                    onCanPlay={this.handleCanPlay}\r\n                    onPlay={this.handleVideoPlay}\r\n                    onPause={this.handleVideoPause}\r\n                    onEnded={this.handleVideoEnded}\r\n                    onTimeUpdate={this.handleTimeUpdate}\r\n                    onProgress={this.handleProgress}\r\n                >\r\n                    {source}\r\n                </video>\r\n                {(message || block) && (\r\n                    <div className='header-player'>\r\n                        <IconButton\r\n                            disabled={!hasPrev}\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            onClick={this.handlePrev}>\r\n                            <SkipPreviousIcon fontSize='small' />\r\n                        </IconButton>\r\n                        <IconButton\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            disabled={!src}\r\n                            onClick={this.handlePlay}>\r\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\r\n                        </IconButton>\r\n                        <IconButton\r\n                            disabled={!hasNext}\r\n                            className='header-player-button'\r\n                            color='primary'\r\n                            onClick={this.handleNext}>\r\n                            <SkipNextIcon fontSize='small' />\r\n                        </IconButton>\r\n                        <Playlist />\r\n                        <div\r\n                            className='header-player-content'\r\n                            onMouseEnter={this.handleTitleMouseEnter}\r\n                            onMouseLeave={this.handleTitleMouseLeave}\r\n                            onClick={this.handleTitleClick}>\r\n                            <div className='header-player-title'>\r\n                                {title}\r\n                                {showDate && (\r\n                                    <span title={dateHintStr}>\r\n                                        &nbsp;\r\n                                        {dateStr}\r\n                                    </span>\r\n                                )}\r\n                            </div>\r\n                            &nbsp;\r\n                        </div>\r\n                        <Time duration={duration}/>\r\n                        <VolumeButton />\r\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\r\n                        {showRepeat && <RepeatButton />}\r\n                        {showShuffle && <ShuffleButton />}\r\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\r\n                            <CloseIcon fontSize='small' />\r\n                        </IconButton>\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(HeaderPlayer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { getChatSender, getChatUserId } from '../../Utils/Chat';\r\nimport { requestBlockSender } from '../../Actions/Message';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ActionBar.css';\r\n\r\nclass ActionBar extends React.Component {\r\n    componentDidMount() {\r\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\r\n    }\r\n\r\n    onUpdateChatActionBar = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n\r\n        if (chat_id !== chatId) return;\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    handleClose = () => {\r\n        const { chatId } = this.props;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        TdLibController.send({\r\n            '@type': 'removeChatActionBar',\r\n            chat_id: chatId\r\n        });\r\n    };\r\n\r\n    handleReportSpam = () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestBlockSender(getChatSender(chatId));\r\n    };\r\n\r\n    handleReportUnrelatedLocation = () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestBlockSender(getChatSender(chatId));\r\n    };\r\n\r\n    handleSharePhoneNumber = () => {\r\n        const { chatId } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'sharePhoneNumber',\r\n            user_id: userId\r\n        });\r\n    };\r\n\r\n    handleAddContact = () => {\r\n        const { chatId } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n        if (!userId) return;\r\n\r\n        const user = UserStore.get(userId);\r\n        if (!user) return;\r\n\r\n        const { user_id, phone_number, first_name, last_name } = user;\r\n\r\n        TdLibController.send({\r\n            '@type': 'addContact',\r\n            contact: {\r\n                '@type': 'contact',\r\n                phone_number,\r\n                first_name,\r\n                last_name,\r\n                vcard: '',\r\n                user_id\r\n            },\r\n            share_phone_number: false\r\n        });\r\n    };\r\n\r\n    handleBlockUser = () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestBlockSender(getChatSender(chatId));\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        if (!chatId) return null;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        const { action_bar } = chat;\r\n        if (!action_bar) return null;\r\n\r\n        let content = null;\r\n        switch (action_bar['@type']) {\r\n            case 'chatActionBarSharePhoneNumber': {\r\n                content = (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\r\n                        {t('ShareMyPhone')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarAddContact': {\r\n                content = (\r\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\r\n                        {t('AddContactChat')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarReportAddBlock': {\r\n                content = (\r\n                    <>\r\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\r\n                            {t('AddContactChat')}\r\n                        </Button>\r\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\r\n                            {t('ReportSpamUser')}\r\n                        </Button>\r\n                    </>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarUnrelatedLocation': {\r\n                content = (\r\n                    <Button\r\n                        color='secondary'\r\n                        className='header-command-button'\r\n                        onClick={this.handleReportUnrelatedLocation}>\r\n                        {t('ReportSpamLocation')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n            case 'chatActionBarReportSpam': {\r\n                content = (\r\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\r\n                        {t('ReportSpam')}\r\n                    </Button>\r\n                );\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='action-bar' onMouseDown={this.handleClick}>\r\n                <div className='action-bar-content'>{content}</div>\r\n                <div className='action-bar-close-button'>\r\n                    <IconButton onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nActionBar.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(ActionBar);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\r\n    'Copy'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\r\n    'FrameCheck'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\r\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\r\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\r\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\r\n    </g>,\r\n    'RemoveCheck'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport CopyIcon from '../../Assets/Icons/Copy';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\r\nimport EditIcon from '../../Assets/Icons/Edit';\r\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\r\nimport ShareIcon from '../../Assets/Icons/Share';\r\nimport StopIcon from '../../Assets/Icons/Stop';\r\nimport PinIcon from '../../Assets/Icons/Pin2';\r\nimport UnpinIcon from '../../Assets/Icons/PinOff';\r\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\r\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isEmptySelection, isMessagePinned } from '../../Utils/Message';\r\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\r\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\r\nimport { copy } from '../../Utils/Text';\r\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, requestPinMessage, requestUnpinMessage, replyMessage, selectMessage } from '../../Actions/Client';\r\nimport { saveBlob } from '../../Utils/File';\r\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MessageMenu.css';\r\n\r\nclass MessageMenu extends React.PureComponent {\r\n    state = {\r\n        confirmStopPoll: false\r\n    };\r\n\r\n    handleConfirmStopPoll = event => {\r\n        const { dialog } = this.state;\r\n        if (dialog) return;\r\n\r\n        this.setState({\r\n            confirmStopPoll: true,\r\n            contextMenu: false\r\n        });\r\n    };\r\n\r\n    handleCloseConfirm = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ confirmStopPoll: false });\r\n    };\r\n\r\n    handleStopPoll = event => {\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n        const { confirmStopPoll } = this.state;\r\n\r\n        if (confirmStopPoll) {\r\n            this.setState({ confirmStopPoll: false });\r\n        }\r\n\r\n        stopPoll(chatId, messageId);\r\n    };\r\n\r\n    handleUnvote = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        cancelPollAnswer(chatId, messageId);\r\n    };\r\n\r\n    handleCopyLink = event => {\r\n        const { onClose, copyLink, t } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        if (!copyLink) return;\r\n\r\n        copy(copyLink);\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleCopyPublicMessageLink = async event => {\r\n        const { onClose, chatId, messageId, t } = this.props;\r\n\r\n        onClose(event);\r\n\r\n        const httpUrl = await TdLibController.send({\r\n            '@type': 'getMessageLink',\r\n            chat_id: chatId,\r\n            message_id: messageId,\r\n            for_album: false,\r\n            for_comment: false\r\n        });\r\n\r\n        if (!httpUrl) return;\r\n        const { link: copyLink } = httpUrl;\r\n\r\n        if (!copyLink) return;\r\n\r\n        copy(copyLink);\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => {\r\n                        closeSnackbar(snackKey);\r\n                    }}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleReply = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n        replyMessage(chatId, messageId);\r\n    };\r\n\r\n    handlePin = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n\r\n        if (isMessagePinned(chatId, messageId)) {\r\n            requestUnpinMessage(chatId, messageId);\r\n        } else {\r\n            requestPinMessage(chatId, messageId);\r\n        }\r\n    };\r\n\r\n    handleForward = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        forwardMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleEdit = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        clearSelection();\r\n        onClose(event);\r\n        editMessage(chatId, messageId);\r\n    };\r\n\r\n    handleSelect = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n        onClose(event);\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\r\n        selectMessage(chatId, messageId, selected);\r\n    };\r\n\r\n    handleDelete = event => {\r\n        const { chatId, messageId, onClose } = this.props;\r\n\r\n        onClose(event);\r\n        deleteMessages(chatId, [messageId]);\r\n    };\r\n\r\n    handleDownload = event => {\r\n        const { chatId, messageId } = this.props;\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        const { sticker } = content;\r\n        if (!sticker) return;\r\n\r\n        const { sticker: file } = sticker;\r\n        if (!file) return;\r\n\r\n        const blob = FileStore.getBlob(file.id);\r\n        if (!blob) return;\r\n\r\n        saveBlob(blob, 'sticker.tgs');\r\n    };\r\n\r\n    render() {\r\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose, source } = this.props;\r\n        const { confirmStopPoll } = this.state;\r\n        if (!confirmStopPoll && !open) return null;\r\n\r\n        const isPinned = isMessagePinned(chatId, messageId);\r\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId) && source === 'chat';\r\n        const canBeClosed = canMessageBeClosed(chatId, messageId) && source === 'chat';\r\n        const canBeReplied = canSendMessages(chatId) && source === 'chat';\r\n        const canBePinned = canPinMessages(chatId) && !isServiceMessage(MessageStore.get(chatId, messageId));\r\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\r\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\r\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording && source === 'chat';\r\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId) && !isServiceMessage(MessageStore.get(chatId, messageId));\r\n        const canCopyLink = Boolean(copyLink);\r\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\r\n\r\n        const hasItems =\r\n            canBeUnvoted || canBeClosed || canBeReplied || canBePinned || canBeForwarded || canBeDeleted || canBeEdited || canBeSelected || canCopyLink || canCopyPublicMessageLink;\r\n        if (!hasItems) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Popover\r\n                    open={true}\r\n                    onClose={onClose}\r\n                    anchorReference='anchorPosition'\r\n                    anchorPosition={anchorPosition}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'left'\r\n                    }}\r\n                    onMouseDown={e => e.stopPropagation()}>\r\n                    <MenuList onClick={e => e.stopPropagation()}>\r\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\r\n                        {/*    <ListItemIcon>*/}\r\n                        {/*        <CopyIcon />*/}\r\n                        {/*    </ListItemIcon>*/}\r\n                        {/*    <ListItemText primary={t('Download')} />*/}\r\n                        {/*</MenuItem>*/}\r\n                        {canBeSelected && (\r\n                            <MenuItem onClick={this.handleSelect}>\r\n                                <ListItemIcon>\r\n                                    <FrameCheckIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Select')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canCopyPublicMessageLink && (\r\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\r\n                                <ListItemIcon>\r\n                                    <CopyIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('CopyMessageLink')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canCopyLink && (\r\n                            <MenuItem onClick={this.handleCopyLink}>\r\n                                <ListItemIcon>\r\n                                    <CopyIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('CopyLink')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeReplied && (\r\n                            <MenuItem onClick={this.handleReply}>\r\n                                <ListItemIcon>\r\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Reply')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBePinned && (\r\n                            <MenuItem onClick={this.handlePin}>\r\n                                {isPinned ? (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <UnpinIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('UnpinMessage')} />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <ListItemIcon>\r\n                                            <PinIcon />\r\n                                        </ListItemIcon>\r\n                                        <ListItemText primary={t('PinMessage')} />\r\n                                    </>\r\n                                )}\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeForwarded && (\r\n                            <MenuItem onClick={this.handleForward}>\r\n                                <ListItemIcon>\r\n                                    <ShareIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Forward')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeEdited && (\r\n                            <MenuItem onClick={this.handleEdit}>\r\n                                <ListItemIcon>\r\n                                    <EditIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Edit')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeDeleted && (\r\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\r\n                                <ListItemIcon>\r\n                                    <DeleteIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Delete')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeUnvoted && (\r\n                            <MenuItem onClick={this.handleUnvote}>\r\n                                <ListItemIcon>\r\n                                    <RemoveCheckIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('Unvote')} />\r\n                            </MenuItem>\r\n                        )}\r\n                        {canBeClosed && (\r\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\r\n                                <ListItemIcon>\r\n                                    <StopIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary={t('StopPoll')} />\r\n                            </MenuItem>\r\n                        )}\r\n                    </MenuList>\r\n                </Popover>\r\n                <Dialog\r\n                    transitionDuration={0}\r\n                    open={confirmStopPoll}\r\n                    onClose={this.handleCloseConfirm}\r\n                    aria-labelledby='form-dialog-title'>\r\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\r\n                            {t('Cancel')}\r\n                        </Button>\r\n                        <Button onClick={this.handleStopPoll} color='primary'>\r\n                            {t('Stop')}\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nMessageMenu.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    anchorPosition: PropTypes.object,\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    copyLink: PropTypes.string\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(MessageMenu);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z' />,\r\n    'PinFilled'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport PinIcon from '../../Assets/Icons/PinFilled';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Status from './Status';\r\nimport { albumHistoryEquals } from '../../Utils/Common';\r\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Meta.css';\r\n\r\nclass Meta extends React.Component {\r\n\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId, messageIds } = props;\r\n        const { prevChatId, prevMessageId, prevMessageIds } = state;\r\n\r\n        if (prevChatId !== chatId || prevMessageId !== messageId || albumHistoryEquals(prevMessageIds, messageIds)) {\r\n\r\n            const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\r\n            const id = ids[ids.length - 1];\r\n\r\n            const message = MessageStore.get(chatId, id);\r\n            if (!message) return null;\r\n\r\n            const { date, edit_date: editDate, interaction_info: interactionInfo, is_outgoing: isOutgoing } = message;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n                prevMessageIds: messageIds,\r\n\r\n                message,\r\n                date,\r\n                editDate,\r\n                interactionInfo,\r\n                isOutgoing,\r\n                isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\r\n        MessageStore.on('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\r\n        MessageStore.off('updateMessageInteractionInfo', this.onUpdateMessageInteractionInfo);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n    }\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId, messageIds } = this.props;\r\n\r\n        const ids = [messageId, ...(messageIds || [])].filter(x => Boolean(x));\r\n\r\n        if (chat_id !== chatId) return;\r\n        if (!ids.some(x => x === message_id)) return;\r\n\r\n        this.setState({ isPinned: ids.some(x => MessageStore.get(chatId, x).is_pinned) });\r\n    };\r\n\r\n    onUpdateMessageEdited = update => {\r\n        const { chat_id, message_id, edit_date: editDate } = update;\r\n        const { message } = this.state;\r\n\r\n        if (!message) return;\r\n        if (message.chat_id !== chat_id) return;\r\n        if (message.id !== message_id) return;\r\n\r\n        this.setState({ editDate });\r\n    };\r\n\r\n    onUpdateMessageInteractionInfo = update => {\r\n        const { chat_id, message_id, interaction_info } = update;\r\n        const { message } = this.state;\r\n\r\n        if (!message) return;\r\n        if (message.chat_id !== chat_id) return;\r\n        if (message.id !== message_id) return;\r\n\r\n        this.setState({ interactionInfo: interaction_info });\r\n    };\r\n\r\n    render() {\r\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\r\n        const { date, editDate, isOutgoing, isPinned, interactionInfo } = this.state;\r\n\r\n        const { view_count: views } = interactionInfo || { view_count: 0, forward_count: 0 };\r\n\r\n        const dateStr = getDate(date);\r\n        const dateHintStr = getDateHint(date);\r\n        const viewsStr = getViews(views);\r\n\r\n        return (\r\n            <div className={classNames('meta', className)} style={style}>\r\n                {/*{messageId}*/}\r\n                <span>&ensp;</span>\r\n                {views > 0 && (\r\n                    <>\r\n                        <VisibilityIcon className='meta-views-icon' />\r\n                        <span className='meta-views' title={views}>\r\n                            &nbsp;\r\n                            {viewsStr}\r\n                            &nbsp; &nbsp;\r\n                        </span>\r\n                    </>\r\n                )}\r\n                {isPinned && (\r\n                    <>\r\n                        <PinIcon className='meta-pin-icon' />\r\n                        <span>&nbsp;</span>\r\n                    </>\r\n                )}\r\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\r\n                <a onClick={onDateClick}>\r\n                    <span title={dateHintStr}>{dateStr}</span>\r\n                </a>\r\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMeta.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number,\r\n    messageIds: PropTypes.arrayOf(PropTypes.number),\r\n    onDateClick: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(Meta);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport Audio from '../Media/Audio';\r\nimport Document from '../Media/Document';\r\nimport MessageMenu from '../MessageMenu';\r\nimport Meta from '../Meta';\r\nimport Photo from '../Media/Photo';\r\nimport Video from '../Media/Video';\r\nimport { getText, getWebPage, isEmptySelection, openMedia } from '../../../Utils/Message';\r\nimport { selectMessage } from '../../../Actions/Client';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './AlbumItem.css';\r\n\r\nclass AlbumItem extends React.Component {\r\n\r\n    state = {\r\n        contextMenu: false\r\n    };\r\n\r\n    getAlbumItem = (message, displaySize) => {\r\n        const { chat_id, id, content } = message;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageAudio': {\r\n                const inlineMeta = (\r\n                    <Meta\r\n                        className='meta-hidden'\r\n                        key={`${chat_id}_${id}_meta`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                    />\r\n                );\r\n\r\n                const webPage = getWebPage(message);\r\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\r\n\r\n                return (\r\n                    <>\r\n                        <Audio\r\n                            type='message'\r\n                            chatId={chat_id}\r\n                            messageId={id}\r\n                            audio={content.audio}\r\n                            displaySize={displaySize}\r\n                            style={{ width: '100%', height: '100%' }}\r\n                            openMedia={this.openMedia}/>\r\n                        { text && text.length > 0 && (\r\n                            <div className={'message-text'}>\r\n                                {text}\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                );\r\n            }\r\n            case 'messagePhoto': {\r\n                return (\r\n                    <Photo\r\n                        type='message'\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        photo={content.photo}\r\n                        displaySize={displaySize}\r\n                        style={{ width: '100%', height: '100%' }}\r\n                        openMedia={this.openMedia}/>\r\n                    );\r\n            }\r\n            case 'messageVideo': {\r\n                return (\r\n                    <Video\r\n                        type='message'\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                        video={content.video}\r\n                        displaySize={displaySize}\r\n                        style={{ width: '100%', height: '100%' }}\r\n                        openMedia={this.openMedia}/>\r\n                );\r\n            }\r\n            case 'messageDocument': {\r\n                const inlineMeta = (\r\n                    <Meta\r\n                        className='meta-hidden'\r\n                        key={`${chat_id}_${id}_meta`}\r\n                        chatId={chat_id}\r\n                        messageId={id}\r\n                    />\r\n                );\r\n\r\n                const webPage = getWebPage(message);\r\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\r\n\r\n                return (\r\n                    <>\r\n                        <Document\r\n                            type='message'\r\n                            chatId={chat_id}\r\n                            messageId={id}\r\n                            document={content.document}\r\n                            displaySize={displaySize}\r\n                            style={{ width: '100%', height: '100%' }}\r\n                            openMedia={this.openMedia}/>\r\n                        { text && text.length > 0 && (\r\n                            <div className={'message-text'}>\r\n                                {text}\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { message } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (message.chat_id === update.chatId && message.id === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        if (!this.state.selected) return;\r\n\r\n        this.setState({ selected: false });\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { message } = this.props;\r\n        const { chat_id: chatId, id: messageId } = message;\r\n\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ selected, highlighted: false });\r\n        }\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const copyLink =\r\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                copyLink,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (MessageStore.selectedItems.size > 0) return;\r\n\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { message } = this.props;\r\n        if (!message) return;\r\n\r\n        const { chat_id, id } = message;\r\n\r\n        openMedia(chat_id, id);\r\n    };\r\n\r\n    handleSelection = event => {\r\n        // if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { message } = this.props;\r\n        const { chat_id: chatId, id: messageId } = message;\r\n\r\n        if (MessageStore.selectedItems.size === 0) return;\r\n\r\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\r\n        selectMessage(chatId, messageId, selected);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    render() {\r\n        const { message, position, displaySize, source } = this.props;\r\n        const { contextMenu, copyLink, top, left, selected, highlighted } = this.state;\r\n\r\n        const { chat_id, id } = message;\r\n\r\n        let style = {};\r\n        let className = 'album-document-item';\r\n        if (position) {\r\n            style = { width: position.width, height: position.height * displaySize };\r\n            className = 'album-item'\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className={classNames(className, { 'album-item-highlighted': highlighted && !selected}, { 'item-selected': selected })}\r\n                    onClick={this.handleSelection}\r\n                    onContextMenu={this.handleOpenContextMenu}\r\n                    style={style}>\r\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\r\n                    {(selected || highlighted) && (\r\n                        <div className='album-item-selection'>\r\n                            <div className='album-item-selection-mark'>\r\n                                { selected && <CheckMarkIcon className='album-item-select-tick' /> }\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <MessageMenu\r\n                    chatId={chat_id}\r\n                    messageId={id}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    copyLink={copyLink}\r\n                    source={source}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nAlbumItem.propTypes = {\r\n    message: PropTypes.object,\r\n    position: PropTypes.object,\r\n    displaySize: PropTypes.number\r\n};\r\n\r\nexport default AlbumItem;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport LocalizationStore from '../../Stores/LocalizationStore';\r\nimport './DayMeta.css';\r\n\r\nclass DayMeta extends React.Component {\r\n    componentDidMount() {\r\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\r\n    }\r\n\r\n    onClientUpdateLanguage = () => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    render() {\r\n        const { date, i18n } = this.props;\r\n\r\n        const showYear = new Date(date * 1000).getFullYear() !== new Date().getFullYear();\r\n        const options = showYear\r\n            ? {\r\n                  day: 'numeric',\r\n                  month: 'long',\r\n                  year: 'numeric'\r\n              }\r\n            : {\r\n                  day: 'numeric',\r\n                  month: 'long'\r\n              };\r\n\r\n        return (\r\n            <div className='day-meta'>\r\n                <div className='day-meta-wrapper'>\r\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDayMeta.propTypes = {\r\n    date: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(DayMeta);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\r\nimport { openUser, openChat } from '../../Actions/Client';\r\nimport './Forward.css';\r\n\r\nclass Forward extends React.Component {\r\n    state = {\r\n        arrowRef: null\r\n    };\r\n\r\n    handleArrowRef = node => {\r\n        this.setState({\r\n            arrowRef: node\r\n        });\r\n    };\r\n\r\n    openForward = event => {\r\n        event.stopPropagation();\r\n\r\n        const { forwardInfo } = this.props;\r\n        if (!forwardInfo) return null;\r\n\r\n        const { origin } = forwardInfo;\r\n\r\n        switch (origin['@type']) {\r\n            case 'messageForwardOriginUser': {\r\n                const { sender_user_id } = origin;\r\n\r\n                openUser(sender_user_id, true);\r\n                break;\r\n            }\r\n            case 'messageForwardOriginHiddenUser': {\r\n                break;\r\n            }\r\n            case 'messageForwardOriginChannel': {\r\n                const { chat_id, message_id } = origin;\r\n\r\n                openChat(chat_id, message_id);\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { t, forwardInfo } = this.props;\r\n        const { arrowRef } = this.state;\r\n\r\n        const title = getForwardTitle(forwardInfo, t);\r\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\r\n            <>\r\n                {t('HidAccount')}\r\n                <span className='forward-arrow' ref={this.handleArrowRef} />\r\n            </>\r\n        ) : (\r\n            ''\r\n        );\r\n\r\n        return (\r\n            <div className={classNames('message-author', 'forward')}>\r\n                <div>{t('ForwardedMessage')}</div>\r\n                <div className='forward-subtitle'>\r\n                    {t('From') + ' '}\r\n                    {/*<Tooltip*/}\r\n                    {/*    title={tooltip}*/}\r\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\r\n                    {/*    PopperProps={{*/}\r\n                    {/*        popperOptions: {*/}\r\n                    {/*            modifiers: {*/}\r\n                    {/*                arrow: {*/}\r\n                    {/*                    enabled: Boolean(arrowRef),*/}\r\n                    {/*                    element: arrowRef*/}\r\n                    {/*                }*/}\r\n                    {/*            }*/}\r\n                    {/*        }*/}\r\n                    {/*    }}*/}\r\n                    {/*    placement='top'>*/}\r\n                        <a onClick={this.openForward}>{title}</a>\r\n                    {/*</Tooltip>*/}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nForward.propTypes = {\r\n    forwardInfo: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(Forward);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\r\n\r\nconst POSITION_FLAG_LEFT = 1;\r\nconst POSITION_FLAG_RIGHT = 2;\r\nconst POSITION_FLAG_TOP = 4;\r\nconst POSITION_FLAG_BOTTOM = 8;\r\n\r\nclass MessageGroupedLayoutAttempt {\r\n    constructor(lineCounts, heights) {\r\n        this.lineCounts = lineCounts;\r\n        this.heights = heights;\r\n    }\r\n}\r\n\r\nclass GroupedMessagePosition {\r\n    aspectRatio;\r\n    isEdge;\r\n    flags;\r\n    isLast;\r\n    leftSpanOffset;\r\n    minX;\r\n    maxX;\r\n    minY;\r\n    maxY;\r\n    height;\r\n    width;\r\n    siblingHeights;\r\n    spanSize;\r\n\r\n    set(minX, maxX, minY, maxY, w, h, flags) {\r\n        this.minX = minX;\r\n        this.maxX = maxX;\r\n        this.minY = minY;\r\n        this.maxY = maxY;\r\n        this.spanSize = w;\r\n        this.width = w;\r\n        this.height = h;\r\n        this.flags = flags;\r\n    }\r\n\r\n    getInfo() {\r\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\r\n    }\r\n}\r\n\r\nclass GroupedMessages {\r\n\r\n    constructor() {\r\n        this.posArray = [];\r\n        this.positions = new Map();\r\n        this.maxSizeWidth = 800;\r\n        this.hasSibling = false;\r\n        this.scale = 1.0;\r\n    }\r\n\r\n    multiHeight(array, start, end) {\r\n        let sum = 0.0;\r\n        for (let i = start; i < end; i++) {\r\n            sum += array[i];\r\n        }\r\n\r\n        return 800.0 * this.scale / sum;\r\n    }\r\n\r\n    calculate(messages, desiredWidth) {\r\n        this.posArray = [];\r\n        this.positions = new Map();\r\n        this.messages = messages;\r\n\r\n        if (!messages) return;\r\n        const { length } = messages;\r\n        if (length <= 1) {\r\n            return;\r\n        }\r\n\r\n        this.totalWidth = 0;\r\n        this.totalHeight = 0.0;\r\n\r\n        this.scale = desiredWidth / this.maxSizeWidth;\r\n        this.maxSizeWidth = desiredWidth;\r\n\r\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\r\n        const minHeight = Math.trunc(120 * this.scale);\r\n        const minWidth = Math.trunc(96 * this.scale);\r\n        const paddingsWidth = Math.trunc(32 * this.scale);\r\n        const maxSizeHeight = 814.0 * this.scale;\r\n        let averageAspectRatio = 1.0;\r\n        let proportions = '';\r\n        const isOut = false;\r\n        let maxX = 0;\r\n        let forceCalc = false;\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            const message = messages[i];\r\n            const { w, h } = GroupedMessages.getWidthHeight(message);\r\n\r\n            const position = new GroupedMessagePosition();\r\n            position.isLast = i === messages.length - 1;\r\n            position.aspectRatio = w / h;\r\n            if (position.aspectRatio > 1.2) {\r\n                proportions += 'w';\r\n            } else if (position.aspectRatio < 0.8) {\r\n                proportions += 'n';\r\n            } else {\r\n                proportions += 'q';\r\n            }\r\n\r\n            averageAspectRatio += position.aspectRatio;\r\n            if (position.aspectRatio > 2.0) {\r\n                forceCalc = true;\r\n            }\r\n\r\n            this.positions.set(message, position);\r\n            this.posArray.push(position);\r\n        }\r\n\r\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\r\n        averageAspectRatio = averageAspectRatio / length;\r\n\r\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\r\n            switch (length) {\r\n                case 2: {\r\n                    const position1 = this.posArray[0];\r\n                    const position2 = this.posArray[1];\r\n\r\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\r\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\r\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n\r\n                        this.totalWidth = this.maxSizeWidth;\r\n                        this.totalHeight = height * 2;\r\n                    } else if (proportions === 'ww' || proportions === 'qq') {\r\n                        const width = this.maxSizeWidth / 2;\r\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\r\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = width + width;\r\n                        this.totalHeight = height;\r\n                    } else {\r\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\r\n                        let firstWidth = this.maxSizeWidth - secondWidth;\r\n                        if (firstWidth < minWidth) {\r\n                            const diff = minWidth - firstWidth;\r\n                            firstWidth = minWidth;\r\n                            secondWidth -= diff;\r\n                        }\r\n\r\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\r\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = firstWidth + secondWidth;\r\n                        this.totalHeight = height;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 3: {\r\n                    const position1 = this.posArray[0];\r\n                    const position2 = this.posArray[1];\r\n                    const position3 = this.posArray[2];\r\n                    if (proportions[0] === 'n')\r\n                    {\r\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\r\n                        const secondHeight = maxSizeHeight - thirdHeight;\r\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\r\n\r\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\r\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\r\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        position3.spanSize = this.maxSizeWidth;\r\n\r\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\r\n\r\n                        if (isOut) {\r\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\r\n                        } else {\r\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\r\n                            position3.leftSpanOffset = leftWidth;\r\n                        }\r\n                        this.hasSibling = true;\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = leftWidth + rightWidth;\r\n                        this.totalHeight = 1.0;\r\n                    }\r\n                    else\r\n                    {\r\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\r\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n\r\n                        const width = this.maxSizeWidth / 2;\r\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\r\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\r\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = this.maxSizeWidth;\r\n                        this.totalHeight = firstHeight + secondHeight;\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 4: {\r\n                    const position1 = this.posArray[0];\r\n                    const position2 = this.posArray[1];\r\n                    const position3 = this.posArray[2];\r\n                    const position4 = this.posArray[3];\r\n                    if (proportions[0] === 'w') {\r\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\r\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n\r\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\r\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\r\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\r\n                        const w1 = this.maxSizeWidth - w0 - w2;\r\n                        h = Math.min(maxSizeHeight - h0, h);\r\n                        h /= maxSizeHeight;\r\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\r\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\r\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        maxX = 2;\r\n\r\n                        this.totalWidth = this.maxSizeWidth;\r\n                        this.totalHeight = h0 + h;\r\n                    } else {\r\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\r\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\r\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\r\n                        const h2 = 1.0 - h0 - h1;\r\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\r\n\r\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\r\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\r\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\r\n                        position3.spanSize = this.maxSizeWidth;\r\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\r\n                        position4.spanSize = this.maxSizeWidth;\r\n\r\n                        if (isOut) {\r\n                            position1.spanSize = this.maxSizeWidth - w;\r\n                        } else {\r\n                            position2.spanSize = this.maxSizeWidth - w0;\r\n                            position3.leftSpanOffset = w0;\r\n                            position4.leftSpanOffset = w0;\r\n                        }\r\n                        position1.siblingHeights = [ h0, h1, h2 ];\r\n                        this.hasSibling = true;\r\n                        maxX = 1;\r\n\r\n                        this.totalWidth = w + w0;\r\n                        this.totalHeight = h0 + h1 + h2;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            const croppedRatios = new Array(this.posArray.length);\r\n            for (let i = 0; i < length; i++) {\r\n                if (averageAspectRatio > 1.1) {\r\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\r\n                } else {\r\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\r\n                }\r\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\r\n            }\r\n\r\n            let firstLine;\r\n            let secondLine;\r\n            let thirdLine;\r\n            let fourthLine;\r\n            const attempts = [];\r\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\r\n                secondLine = croppedRatios.length - firstLine;\r\n                if (firstLine > 3 || secondLine > 3) {\r\n                    continue;\r\n                }\r\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\r\n            }\r\n\r\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\r\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\r\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\r\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\r\n                        continue;\r\n                    }\r\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\r\n                }\r\n            }\r\n\r\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\r\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\r\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\r\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\r\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\r\n                            continue;\r\n                        }\r\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\r\n                    }\r\n                }\r\n            }\r\n\r\n            let optimal = null;\r\n            let optimalDiff = 0.0;\r\n            let maxHeight = this.maxSizeWidth / 3 * 4;\r\n            for (let i = 0; i < attempts.length; i++) {\r\n                const attempt = attempts[i];\r\n                let height = 0;\r\n                let minLineHeight = Number.MAX_VALUE;\r\n                for (let j = 0; j < attempt.heights.length; j++) {\r\n                    height += attempt.heights[j];\r\n                    if (attempt.heights[j] < minLineHeight) {\r\n                        minLineHeight = attempt.heights[j];\r\n                    }\r\n                }\r\n\r\n                let diff = Math.abs(height - maxHeight);\r\n                if (attempt.lineCounts.length > 1) {\r\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\r\n                        diff *= 1.5;\r\n                    }\r\n                }\r\n\r\n                if (minLineHeight < minWidth) {\r\n                    diff *= 1.5;\r\n                }\r\n\r\n                if (optimal === null || diff < optimalDiff) {\r\n                    optimal = attempt;\r\n                    optimalDiff = diff;\r\n                }\r\n            }\r\n\r\n            if (optimal === null) {\r\n                return;\r\n            }\r\n\r\n            let index = 0;\r\n            let y = 0.0;\r\n\r\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\r\n                let c = optimal.lineCounts[i];\r\n                let lineHeight = optimal.heights[i];\r\n                let spanLeft = this.maxSizeWidth;\r\n                let posToFix = null;\r\n                maxX = Math.max(maxX, c - 1);\r\n                for (let j = 0; j < c; j++) {\r\n                    let ratio = croppedRatios[index];\r\n                    let width = Math.trunc(ratio * lineHeight);\r\n                    spanLeft -= width;\r\n                    let pos = this.posArray[index];\r\n                    let flags = 0;\r\n                    if (i === 0) {\r\n                        flags |= POSITION_FLAG_TOP;\r\n                    }\r\n                    if (i === optimal.lineCounts.length - 1) {\r\n                        flags |= POSITION_FLAG_BOTTOM;\r\n                    }\r\n                    if (j === 0) {\r\n                        flags |= POSITION_FLAG_LEFT;\r\n                        if (isOut) {\r\n                            posToFix = pos;\r\n                        }\r\n                    }\r\n                    if (j === c - 1) {\r\n                        flags |= POSITION_FLAG_RIGHT;\r\n                        if (!isOut) {\r\n                            posToFix = pos;\r\n                        }\r\n                    }\r\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\r\n                    index++;\r\n                }\r\n                posToFix.width += spanLeft;\r\n                posToFix.spanSize += spanLeft;\r\n                y += lineHeight;\r\n            }\r\n\r\n            this.totalWidth = this.maxSizeWidth;\r\n            this.totalHeight = y / maxSizeHeight;\r\n        }\r\n    }\r\n\r\n    static getWidthHeight(message) {\r\n        let w = 0;\r\n        let h = 0;\r\n        let sizes = [];\r\n        switch (message.content['@type']){\r\n            case 'messagePhoto': {\r\n                const { photo, minithumbnail } = message.content;\r\n                if (photo) {\r\n                    sizes = photo.sizes;\r\n                } else if (minithumbnail) {\r\n                    sizes.push(minithumbnail);\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'messageVideo': {\r\n                const { video, thumbnail, minithumbnail } = message.content;\r\n                if (video) {\r\n                    const { width, height } = video;\r\n                    sizes.push({ width, height });\r\n                } else if (minithumbnail) {\r\n                    sizes.push(minithumbnail);\r\n                } else if (thumbnail) {\r\n                    sizes.push(thumbnail);\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'messageDocument': {\r\n                const { thumbnail, minithumbnail } = message.content;\r\n                if (minithumbnail) {\r\n                    sizes.push(minithumbnail);\r\n                } else if (thumbnail) {\r\n                    sizes.push(thumbnail);\r\n                } else {\r\n                    sizes.push({ width: 90, height: 90 });\r\n                }\r\n\r\n                break;\r\n            }\r\n        }\r\n\r\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\r\n        if (photoSize) {\r\n            w = photoSize.width;\r\n            h = photoSize.height;\r\n        }\r\n\r\n        return { w, h };\r\n    }\r\n\r\n    static getPhotoSize(sizes, side, byMinSize) {\r\n        if (!sizes || !sizes.length) return null;\r\n\r\n        let lastSide = 0;\r\n        let lastSize = null;\r\n        for (let i = 0; i < sizes.length; i++) {\r\n            const { width: w, height: h } = sizes[i];\r\n\r\n            if (byMinSize) {\r\n                const currentSide = h >= w ? w : h;\r\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\r\n                    lastSide = currentSide;\r\n                    lastSize = sizes[i];\r\n                }\r\n\r\n            } else {\r\n                const currentSide = w >= h ? w : h;\r\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\r\n                    lastSide = currentSide;\r\n                    lastSize = sizes[i];\r\n                }\r\n            }\r\n        }\r\n\r\n        return lastSize;\r\n    }\r\n}\r\n\r\nexport default GroupedMessages;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport './UnreadSeparator.css';\r\n\r\nfunction UnreadSeparator(props) {\r\n    const { t } = props;\r\n\r\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\r\n}\r\n\r\nexport default withTranslation()(UnreadSeparator);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './EmptyTile.css';\r\n\r\nfunction EmptyTile(props) {\r\n    const { dialog, small, big, style } = props;\r\n\r\n    return (\r\n        <div\r\n            className={classNames(\r\n                'chat-tile',\r\n                { 'tile-dialog': dialog },\r\n                { 'tile-small': small },\r\n                { 'tile-big': big }\r\n            )}\r\n            style={style}/>\r\n    );\r\n}\r\n\r\nEmptyTile.propTypes = {};\r\n\r\nexport default EmptyTile;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport AlbumItem from './AlbumItem';\r\nimport DayMeta from '../DayMeta';\r\nimport Forward from '../Forward';\r\nimport GroupedMessages from './GroupedMessages';\r\nimport UnreadSeparator from '../UnreadSeparator';\r\nimport MessageAuthor from '../MessageAuthor';\r\nimport Reply from '../Reply';\r\nimport Meta from '../Meta';\r\nimport ChatTile from '../../Tile/ChatTile';\r\nimport EmptyTile from '../../Tile/EmptyTile';\r\nimport UserTile from '../../Tile/UserTile';\r\nimport { albumHistoryEquals } from '../../../Utils/Common';\r\nimport { selectMessage } from '../../../Actions/Client';\r\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\r\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\r\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './Album.css';\r\n\r\nclass Album extends React.Component {\r\n    state = { };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { messageIds } = this.props;\r\n        const { emojiMatches, selected, highlighted } = this.state;\r\n\r\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.emojiMatches !== emojiMatches) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selected !== selected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { displaySize, chatId, messageIds } = props;\r\n\r\n        if (messageIds !== state.prevMessageIds) {\r\n            const grouped = new GroupedMessages();\r\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\r\n\r\n            return {\r\n                grouped,\r\n                prevMessageIds: messageIds\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false, lastHighlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\r\n        }\r\n    };\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        if (!this.state.selected) return;\r\n\r\n        this.setState({ selected: false });\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageIds, displaySize } = this.props;\r\n        const { emojiMatches: oldEmojiMatches } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (!messageIds.some(x => x === message_id)) return;\r\n\r\n        const grouped = new GroupedMessages();\r\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\r\n\r\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\r\n        if (emojiMatches !== oldEmojiMatches) {\r\n            this.setState({ emojiMatches, grouped });\r\n        } else {\r\n            this.setState({ grouped });\r\n        }\r\n    };\r\n\r\n    handleSelection = () => {\r\n        // if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = this.state;\r\n\r\n        if (selected) {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], false);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], true);\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { showTail, source } = this.props;\r\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\r\n        const {\r\n            emojiMatches,\r\n            selected,\r\n            highlighted,\r\n            shook,\r\n            copyLink,\r\n            contextMenu,\r\n            left,\r\n            top\r\n        } = this.state;\r\n        const { grouped } = this.state;\r\n        if (!grouped) {\r\n            return null;\r\n        }\r\n\r\n        if (!messageIds.length) {\r\n            return null;\r\n        }\r\n\r\n        let messageId = messageIds[messageIds.length - 1];\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return <div>[empty message]</div>;\r\n\r\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\r\n\r\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\r\n\r\n        const inlineMeta = (\r\n            <Meta\r\n                className='meta-hidden'\r\n                key={`${chatId}_${messageId}_meta`}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n            />\r\n        );\r\n        const webPage = getWebPage(message);\r\n        let text = null;\r\n        for (let i = 0; i < messageIds.length; i++) {\r\n            const m = MessageStore.get(chatId, messageIds[i]);\r\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\r\n            if (t && t.length) {\r\n                if (text !== null) {\r\n                    text = null;\r\n                    break;\r\n                } else {\r\n                    text = t;\r\n                    messageId = messageIds[i];\r\n                }\r\n            }\r\n        }\r\n        const hasCaption = text !== null && text.length > 0;\r\n        const meta = (\r\n            <Meta\r\n                className={classNames('meta-text', {\r\n                    'meta-bubble': !hasCaption\r\n                })}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n                onDateClick={this.handleDateClick}\r\n            />\r\n        );\r\n\r\n        const showForward = showMessageForward(chatId, messageId);\r\n        const showReply = Boolean(reply_to_message_id);\r\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\r\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\r\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\r\n        const isChannel = isChannelChat(chatId);\r\n        const isPrivate = isPrivateChat(chatId);\r\n\r\n        // if (showTail && isMediaContent() && !hasCaption) {\r\n        //     showTail = false;\r\n        // }\r\n\r\n        let tile = null;\r\n        if (showTail) {\r\n            if (isMeChat(chatId) && forward_info) {\r\n                switch (forward_info.origin['@type']) {\r\n                    case 'messageForwardOriginHiddenUser': {\r\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginUser': {\r\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginChannel': {\r\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (isPrivate) {\r\n                tile = <EmptyTile small />\r\n            } else if (isChannel) {\r\n                tile = <EmptyTile small />\r\n            } else if (is_outgoing) {\r\n                tile = <EmptyTile small />\r\n            } else if (sender.user_id) {\r\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\r\n            } else {\r\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\r\n            }\r\n        }\r\n\r\n        const style = { width: grouped.totalWidth - 2 - 2 };\r\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\r\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\r\n\r\n        const items = grouped.messages.map(x => (\r\n            <AlbumItem\r\n                key={x.id}\r\n                message={x}\r\n                position={grouped.positions.get(x)}\r\n                displaySize={displaySize}\r\n                source={source}\r\n            />));\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('message', 'message-album', {\r\n                        'message-rounded': showTitle && showTail && tailRounded,\r\n                        'message-short': !tile,\r\n                        'message-out': isOutgoing,\r\n                        'message-selected': selected,\r\n                        // 'message-highlighted': highlighted && !selected,\r\n                        'message-group-title': showTitle && !showTail,\r\n                        'message-group': !showTitle && !showTail,\r\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\r\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\r\n                        'message-bubble-hidden': !withBubble\r\n                    })}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onClick={this.handleSelection}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='message-body'>\r\n                        <div className='message-padding'>\r\n                            <CheckMarkIcon className='message-select-tick' />\r\n                        </div>\r\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\r\n                            {tile}\r\n                            <div\r\n                                className={classNames(\r\n                                    'message-content', {\r\n                                    'message-bubble': withBubble,\r\n                                    'message-bubble-out': withBubble && isOutgoing\r\n                                })}\r\n                                style={style}>\r\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\r\n                                    <div className='message-title'>\r\n                                        {showTitle && !showForward && (\r\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\r\n                                        )}\r\n                                        {showForward && <Forward forwardInfo={forward_info} />}\r\n                                    </div>\r\n                                )}\r\n                                {showReply && (\r\n                                    <Reply\r\n                                        chatId={chatId}\r\n                                        messageId={reply_to_message_id}\r\n                                        onClick={this.handleReplyClick}\r\n                                    />\r\n                                )}\r\n                                <div className={classNames(\r\n                                    'album',\r\n                                    { 'album-caption': hasCaption },\r\n                                    { 'album-title': hasTitle }\r\n                                    )}>\r\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\r\n                                        {items}\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    className={classNames('message-text', {\r\n                                        'message-text-1emoji': emojiMatches === 1,\r\n                                        'message-text-2emoji': emojiMatches === 2,\r\n                                        'message-text-3emoji': emojiMatches === 3\r\n                                    })}>\r\n                                    {text}\r\n                                </div>\r\n                                {withBubble && meta}\r\n                            </div>\r\n                            <div className='message-tile-padding' />\r\n                        </div>\r\n                        <div className='message-padding' />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAlbum.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    displaySize: PropTypes.number,\r\n    showTitle: PropTypes.bool,\r\n    showTail: PropTypes.bool,\r\n    showUnreadSeparator: PropTypes.bool,\r\n    showDate: PropTypes.bool\r\n};\r\n\r\nAlbum.defaultProps = {\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false,\r\n    showData: false\r\n};\r\n\r\nexport default Album;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport AlbumItem from './AlbumItem';\r\nimport DayMeta from '../DayMeta';\r\nimport Forward from '../Forward';\r\nimport UnreadSeparator from '../UnreadSeparator';\r\nimport MessageAuthor from '../MessageAuthor';\r\nimport Reply from '../Reply';\r\nimport Meta from '../Meta';\r\nimport ChatTile from '../../Tile/ChatTile';\r\nimport EmptyTile from '../../Tile/EmptyTile';\r\nimport UserTile from '../../Tile/UserTile';\r\nimport { albumHistoryEquals } from '../../../Utils/Common';\r\nimport { selectMessage } from '../../../Actions/Client';\r\nimport { getText, getWebPage, isEmptySelection, showMessageForward } from '../../../Utils/Message';\r\nimport { isChannelChat, isMeChat, isPrivateChat } from '../../../Utils/Chat';\r\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './DocumentAlbum.css';\r\n\r\nclass DocumentAlbum extends React.Component {\r\n    state = { };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { messageIds } = this.props;\r\n        const { emojiMatches, lastSelected, selected, lastHighlighted, highlighted } = this.state;\r\n\r\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.emojiMatches !== emojiMatches) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selected !== selected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.lastSelected !== lastSelected) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.lastHighlighted !== lastHighlighted) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { displaySize, chatId, messageIds } = props;\r\n\r\n        if (messageIds !== state.prevMessageIds) {\r\n\r\n            return {\r\n                prevMessageIds: messageIds\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false, lastHighlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true, lastHighlighted: messageIds.length > 0 && messageIds[messageIds.length - 1] === update.messageId });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false, lastHighlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\r\n            this.setState({\r\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\r\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        this.setState({ selected: false, lastSelected: false });\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageIds, displaySize } = this.props;\r\n        const { emojiMatches: oldEmojiMatches } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (!messageIds.some(x => x === message_id)) return;\r\n\r\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\r\n        if (emojiMatches !== oldEmojiMatches) {\r\n            this.setState({ emojiMatches });\r\n        } else {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    handleSelection = () => {\r\n        // if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { chatId, messageIds } = this.props;\r\n        const { selected } = this.state;\r\n\r\n        if (selected) {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], false);\r\n            }\r\n        } else {\r\n            for (let i = 0; i < messageIds.length; i++) {\r\n                selectMessage(chatId, messageIds[i], true);\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { showTail, source } = this.props;\r\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\r\n        const {\r\n            emojiMatches,\r\n            selected,\r\n            lastSelected,\r\n            highlighted,\r\n            lastHighlighted,\r\n            shook,\r\n            copyLink,\r\n            contextMenu,\r\n            left,\r\n            top\r\n        } = this.state;\r\n\r\n        if (!messageIds.length) {\r\n            return null;\r\n        }\r\n\r\n        let messageId = messageIds[messageIds.length - 1];\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return <div>[empty message]</div>;\r\n\r\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender } = message;\r\n\r\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\r\n\r\n        const inlineMeta = (\r\n            <Meta\r\n                className='meta-hidden'\r\n                key={`${chatId}_${messageId}_meta`}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n            />\r\n        );\r\n        const webPage = getWebPage(message);\r\n        let text = null;\r\n        for (let i = 0; i < messageIds.length; i++) {\r\n            const m = MessageStore.get(chatId, messageIds[i]);\r\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\r\n            if (t && t.length) {\r\n                if (text !== null) {\r\n                    text = null;\r\n                    break;\r\n                } else {\r\n                    text = t;\r\n                    messageId = messageIds[i];\r\n                }\r\n            }\r\n        }\r\n        const hasCaption = text !== null && text.length > 0;\r\n        const meta = (\r\n            <Meta\r\n                className={classNames('meta-text', {\r\n                    'meta-bubble': false\r\n                })}\r\n                chatId={chatId}\r\n                messageIds={messageIds}\r\n                onDateClick={this.handleDateClick}\r\n            />\r\n        );\r\n\r\n        const showForward = showMessageForward(chatId, messageId);\r\n        const showReply = Boolean(reply_to_message_id);\r\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\r\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\r\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\r\n        const isChannel = isChannelChat(chatId);\r\n        const isPrivate = isPrivateChat(chatId);\r\n\r\n        // if (showTail && isMediaContent() && !hasCaption) {\r\n        //     showTail = false;\r\n        // }\r\n\r\n        let tile = null;\r\n        if (showTail) {\r\n            if (isMeChat(chatId) && forward_info) {\r\n                switch (forward_info.origin['@type']) {\r\n                    case 'messageForwardOriginHiddenUser': {\r\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginUser': {\r\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginChannel': {\r\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (isPrivate) {\r\n                tile = <EmptyTile small />\r\n            } else if (isChannel) {\r\n                tile = <EmptyTile small />\r\n            } else if (is_outgoing) {\r\n                tile = <EmptyTile small />\r\n            } else if (sender.user_id) {\r\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\r\n            } else {\r\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\r\n            }\r\n        }\r\n\r\n        const style = {  };\r\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\r\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\r\n\r\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\r\n            <AlbumItem\r\n                key={m.id}\r\n                message={m}\r\n                position={null}\r\n                displaySize={displaySize}\r\n                source={source}\r\n            />));\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('message', 'message-album', 'message-document-album', {\r\n                        'message-rounded': showTitle && showTail && tailRounded,\r\n                        'message-short': !tile,\r\n                        'message-out': isOutgoing,\r\n                        'message-selected': selected,\r\n                        'message-album-last-selected': lastSelected,\r\n                        // 'message-highlighted': highlighted && !selected,\r\n                        'message-album-last-highlighted': lastHighlighted && !selected,\r\n                        'message-group-title': showTitle && !showTail,\r\n                        'message-group': !showTitle && !showTail,\r\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\r\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\r\n                        'message-bubble-hidden': !withBubble\r\n                    })}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onClick={this.handleSelection}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='message-body'>\r\n                        <div className='message-padding'>\r\n                            <CheckMarkIcon className='message-select-tick' />\r\n                        </div>\r\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\r\n                            {tile}\r\n                            <div\r\n                                className={classNames(\r\n                                    'message-content', {\r\n                                        'message-bubble': withBubble,\r\n                                        'message-bubble-out': withBubble && isOutgoing\r\n                                    })}\r\n                                style={style}>\r\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\r\n                                    <div className='message-title'>\r\n                                        {showTitle && !showForward && (\r\n                                            <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser />\r\n                                        )}\r\n                                        {showForward && <Forward forwardInfo={forward_info} />}\r\n                                    </div>\r\n                                )}\r\n                                {showReply && (\r\n                                    <Reply\r\n                                        chatId={chatId}\r\n                                        messageId={reply_to_message_id}\r\n                                        onClick={this.handleReplyClick}\r\n                                    />\r\n                                )}\r\n                                <div className={classNames(\r\n                                    'album',\r\n                                    'document-album',\r\n                                    { 'album-caption': false },\r\n                                    { 'album-title': hasTitle }\r\n                                )}>\r\n                                    <div className='album-wrapper'>\r\n                                        {items}\r\n                                    </div>\r\n                                </div>\r\n                                {/*<div*/}\r\n                                {/*    className={classNames('message-text', {*/}\r\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\r\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\r\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\r\n                                {/*    })}>*/}\r\n                                {/*    {text}*/}\r\n                                {/*</div>*/}\r\n                                {withBubble && meta}\r\n                            </div>\r\n                            <div className='message-tile-padding' />\r\n                        </div>\r\n                        <div className='message-padding' />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDocumentAlbum.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    displaySize: PropTypes.number,\r\n    showTitle: PropTypes.bool,\r\n    showTail: PropTypes.bool,\r\n    showUnreadSeparator: PropTypes.bool,\r\n    showDate: PropTypes.bool\r\n};\r\n\r\nDocumentAlbum.defaultProps = {\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false,\r\n    showData: false\r\n};\r\n\r\nexport default DocumentAlbum;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './FilesDropTarget.css';\r\n\r\nclass FilesDropTarget extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { dragParams } = AppStore;\r\n\r\n        this.state = { dragParams };\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\r\n    }\r\n\r\n    onClientUpdateDragging = update => {\r\n        const { dragParams } = AppStore;\r\n\r\n        this.setState({ dragParams });\r\n    };\r\n\r\n    handleDragEnter = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleDrop = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: false\r\n        });\r\n\r\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\r\n    };\r\n\r\n    handleDragLeave = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: false\r\n        });\r\n    };\r\n\r\n    handleAttachDocumentComplete = files => {\r\n        if (files.length === 0) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateSendFiles',\r\n            files\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { dragParams } = this.state;\r\n        if (!dragParams) return null;\r\n\r\n        return (\r\n            <div\r\n                className='files-drop-target'\r\n                onDragEnter={this.handleDragEnter}\r\n                onDragLeave={this.handleDragLeave}\r\n                onDrop={this.handleDrop}>\r\n                <div className='files-drop-target-wrapper'>\r\n                    <div className='files-drop-target-text'>\r\n                        <div className='files-drop-target-title'>Drop files here</div>\r\n                        <div className='files-drop-target-subtitle'>to send them</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilesDropTarget;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ListItem } from '@material-ui/core';\r\nimport User from '../Tile/User';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './InputBoxHints.css'\r\n\r\nclass InputBoxHints extends React.Component {\r\n    state = {\r\n        local: [],\r\n        global: [],\r\n        id: null\r\n    };\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { local, global, id } = this.state;\r\n\r\n        if (nextState.local !== local) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.global !== global) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.id !== id) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        ChatStore.on('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\r\n        ChatStore.on('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\r\n        ChatStore.on('clientUpdateHintsClose', this.onClientUpdateHintsClose);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        ChatStore.off('clientUpdateHintsLocal', this.onClientUpdateHintsLocal);\r\n        ChatStore.off('clientUpdateHintsGlobal', this.onClientUpdateHintsGlobal);\r\n        ChatStore.off('clientUpdateHintsClose', this.onClientUpdateHintsClose);\r\n    }\r\n\r\n    onClientUpdateHintsClose = update => {\r\n        this.setState({\r\n            id: null,\r\n            local: [],\r\n            global: []\r\n        });\r\n    };\r\n\r\n    onClientUpdateHintsGlobal = update => {\r\n        const { id, global } = update;\r\n        if (this.state.id !== id) return;\r\n\r\n        this.setState({\r\n            id,\r\n            global\r\n        });\r\n    };\r\n\r\n    onClientUpdateHintsLocal = update => {\r\n        const { id, local } = update;\r\n\r\n        this.setState({\r\n            id,\r\n            local,\r\n            global: []\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { local, global } = this.state;\r\n\r\n        const results = (local || []).concat(global || []);\r\n\r\n        console.log('[hints] render', local, global, results);\r\n        if (!results.length) return null;\r\n\r\n        const controls = results.map(x => <ListItem key={x.id} button style={{ padding: 6}}><User userId={x.id} showUsername={true}/></ListItem>);\r\n\r\n        return (\r\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\r\n                {controls}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nInputBoxHints.propTypes = {};\r\n\r\nexport default InputBoxHints;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { getDisplayName } from '../../Utils/HOC';\r\n\r\nconst MessageContext = React.createContext({\r\n    chatId: 0,\r\n    messageId: 0\r\n});\r\n\r\nexport default MessageContext;\r\n\r\nexport function withMessage(Component) {\r\n    class MessageComponent extends React.Component {\r\n        render() {\r\n            return <MessageContext.Consumer>{value => <Component chatId={value ? value.chatId : 0} messageId={value? value.messageId: 0} {...this.props} />}</MessageContext.Consumer>;\r\n        }\r\n    }\r\n    MessageComponent.displayName = `WithMessage(${getDisplayName(Component)})`;\r\n\r\n    return MessageComponent;\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M8.5,18.31L5.69,15.5L12.06,9.12H7.11V5.69H18.31V16.89H14.89V11.94L8.5,18.31Z' />,\r\n    'ArrowTopRight'\r\n);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M21,12L14,5V9C7,10 4,15 3,20C5.5,16.5 9,14.9 14,14.9V19L21,12Z' />,\r\n    'ShareFilled'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withMessage } from '../MessageContext';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowTopRightIcon from '../../../Assets/Icons/ArrowTopRight';\r\nimport CloseIcon from '../../../Assets/Icons/Close';\r\nimport PendingIcon from '../../../Assets/Icons/Pending';\r\nimport ShareFilledIcon from '../../../Assets/Icons/ShareFilled';\r\nimport { getUserFullName } from '../../../Utils/User';\r\nimport { getChatTitle } from '../../../Utils/Chat';\r\nimport { setText, showAlert, showInputPasswordAlert, showOpenGameAlert, showOpenUrlAlert, showRequestUrlAlert, showSnackbar } from '../../../Actions/Client';\r\nimport { openChatSelect } from '../../../Actions/Message';\r\nimport LStore from '../../../Stores/LocalizationStore';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport UserStore from '../../../Stores/UserStore';\r\nimport TdLibController from '../../../Controllers/TdLibController';\r\nimport './KeyboardButton.css';\r\n\r\nclass KeyboardButton extends React.Component {\r\n    state = {\r\n        loading: false\r\n    }\r\n\r\n    handleCallbackQueryAnswer = (type, result, message) => {\r\n        const { chatId } = this.props;\r\n        const { sender, content, via_bot_user_id } = message;\r\n        const { text, show_alert, url } = result;\r\n        const { game } = content;\r\n\r\n        let title = '';\r\n        if (message) {\r\n            if (via_bot_user_id) {\r\n                title = getUserFullName(via_bot_user_id, null);\r\n            } else {\r\n                title = getChatTitle(chatId, false);\r\n            }\r\n        }\r\n        title = title || LStore.getString('Bot');\r\n\r\n        if (text) {\r\n            if (show_alert) {\r\n                showAlert({\r\n                    title,\r\n                    message: text,\r\n                    ok: LStore.getString('OK')\r\n                });\r\n            } else {\r\n                showSnackbar(text, closeSnackbar => snackKey => {\r\n                    return (\r\n                        <IconButton\r\n                            key='close'\r\n                            aria-label='Close'\r\n                            color='inherit'\r\n                            className='notification-close-button'\r\n                            onClick={() => { closeSnackbar(snackKey); }}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                    )\r\n                });\r\n            }\r\n        } else if (url) {\r\n            if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\r\n                const userId = via_bot_user_id ? via_bot_user_id : sender.user_id;\r\n                const user = UserStore.get(userId);\r\n\r\n                showOpenGameAlert(game, { message, url, userId, isVerified: user && user.is_verified });\r\n            } else {\r\n                showOpenUrlAlert(url, { punycode: false, ask: false, tryTelegraph: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClick = async event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId, type } = this.props;\r\n\r\n        switch (type['@type']) {\r\n            case 'inlineKeyboardButtonTypeBuy': {\r\n                showAlert({\r\n                    title: LStore.getString('AppName'),\r\n                    message: LStore.getString('PaymentsNotSupported'),\r\n                    ok: LStore.getString('OK')\r\n                });\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallback':\r\n            case 'inlineKeyboardButtonTypeCallbackGame': {\r\n                /// gamee, querty_bot\r\n\r\n                const { data } = type;\r\n\r\n                const message = MessageStore.get(chatId, messageId);\r\n                if (!message) break;\r\n\r\n                const { sender, content, via_bot_user_id } = message;\r\n                if (!content) break;\r\n\r\n                let payload = null;\r\n                let game = null;\r\n                if (type['@type'] === 'inlineKeyboardButtonTypeCallbackGame') {\r\n                    game = content.game;\r\n                    if (!game) break;\r\n\r\n                    payload = { '@type': 'callbackQueryPayloadGame', game_short_name: game.short_name };\r\n                } else {\r\n                    payload = { '@type': 'callbackQueryPayloadData', data };\r\n                }\r\n\r\n                this.setState({ loading: true });\r\n                const result = await TdLibController.send({\r\n                    '@type': 'getCallbackQueryAnswer',\r\n                    chat_id: chatId,\r\n                    message_id: messageId,\r\n                    payload\r\n                }).finally(() => {\r\n                    this.setState({ loading: false });\r\n                });\r\n\r\n                this.handleCallbackQueryAnswer(type, result, message);\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\r\n                /// BotFather + transfer bot\r\n                const { data } = type;\r\n\r\n                const message = MessageStore.get(chatId, messageId);\r\n                if (!message) break;\r\n\r\n                this.setState({ loading: true });\r\n                const passwordState = await TdLibController.send({\r\n                    '@type': 'getPasswordState'\r\n                }).finally(() => {\r\n                    this.setState({ loading: false });\r\n                });\r\n\r\n                const { has_password } = passwordState;\r\n                if (!has_password) break;\r\n\r\n                showInputPasswordAlert(passwordState, async (password, onCloseDialog, onError) => {\r\n                    console.log('[pwd] onPassword', password);\r\n                    this.setState({ loading: true });\r\n                    let error = null;\r\n                    const result = await TdLibController.send({\r\n                        '@type': 'getCallbackQueryAnswer',\r\n                        chat_id: chatId,\r\n                        message_id: messageId,\r\n                        payload: { '@type': 'callbackQueryPayloadDataWithPassword', data, password }\r\n                    }).catch(e => {\r\n                        error = e;\r\n                    }).finally(() => {\r\n                        this.setState({ loading: false });\r\n                    });\r\n\r\n                    if (error) {\r\n                        console.log('[pwd] onPassword error', error);\r\n                        onError && onError(error);\r\n                    } else if (result) {\r\n                        console.log('[pwd] onPassword result', result);\r\n                        onCloseDialog && onCloseDialog();\r\n                        this.handleCallbackQueryAnswer(type, result, message);\r\n                    }\r\n                });\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeLoginUrl': {\r\n                const { url, id, forward_text } = type;\r\n\r\n                this.setState({ loading: true });\r\n                let hasError = false;\r\n                const result = await TdLibController.send({\r\n                    '@type': 'getLoginUrlInfo',\r\n                    chat_id: chatId,\r\n                    message_id: messageId,\r\n                    button_id: id\r\n                }).catch(e => {\r\n                    hasError = true;\r\n                }).finally(() => {\r\n                    this.setState({ loading: false });\r\n                });\r\n\r\n                if (hasError) {\r\n                    showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\r\n                } else {\r\n                    switch (result['@type']) {\r\n                        case 'loginUrlInfoOpen': {\r\n                            const { url, skip_confirm } = result;\r\n\r\n                            showOpenUrlAlert(url, { punycode: false, ask: !skip_confirm, tryTelegraph: true });\r\n                            break;\r\n                        }\r\n                        case 'loginUrlInfoRequestConfirmation': {\r\n                            const { url } = result;\r\n\r\n\r\n                            console.log('[login] result', result);\r\n                            showRequestUrlAlert(url, { result, chatId, messageId, buttonId: id });\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeSwitchInline': {\r\n                /// youtube\r\n                const { in_current_chat, query } = type;\r\n\r\n                const message = MessageStore.get(chatId, messageId);\r\n                if (!message) break;\r\n\r\n                const { sender, via_bot_user_id } = message;\r\n                let userId = sender.user_id;\r\n                if (via_bot_user_id !== 0) {\r\n                    userId = via_bot_user_id;\r\n                }\r\n\r\n                const user = UserStore.get(userId);\r\n                if (!user) break;\r\n\r\n                const inline = `@${user.username} ${query}`;\r\n\r\n                if (in_current_chat){\r\n                    setText(inline);\r\n                } else {\r\n                    openChatSelect({ switchInline: inline });\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'inlineKeyboardButtonTypeUrl': {\r\n                /// qwerty_bot\r\n                const { url } = type;\r\n\r\n                showOpenUrlAlert(url, { punycode: false, ask: true, tryTelegraph: true });\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    getIcon(type) {\r\n        switch (type['@type']) {\r\n            case 'inlineKeyboardButtonTypeBuy': {\r\n                return null;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallback':\r\n            case 'inlineKeyboardButtonTypeCallbackGame': {\r\n                return null;\r\n            }\r\n            case 'inlineKeyboardButtonTypeCallbackWithPassword': {\r\n                return null;\r\n            }\r\n            case 'inlineKeyboardButtonTypeLoginUrl': {\r\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\r\n            }\r\n            case 'inlineKeyboardButtonTypeSwitchInline': {\r\n                const { in_current_chat } = type;\r\n\r\n                return !in_current_chat && <ShareFilledIcon className='keyboard-button-icon'/>;\r\n            }\r\n            case 'inlineKeyboardButtonTypeUrl': {\r\n                return <ArrowTopRightIcon className='keyboard-button-icon'/>\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { text, type } = this.props;\r\n        const { loading } = this.state;\r\n\r\n        const icon = this.getIcon(type);\r\n\r\n        return (\r\n            <ListItem className='keyboard-button' button onClick={this.handleClick}>\r\n                {text}\r\n                {icon}\r\n                {loading && (\r\n                    <PendingIcon\r\n                        className='keyboard-button-progress'\r\n                        viewBox='0 0 14 14'\r\n                    />\r\n                )}\r\n            </ListItem>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nKeyboardButton.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    text: PropTypes.string,\r\n    type: PropTypes.object,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default withMessage(KeyboardButton);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport KeyboardButton from './KeyboardButton';\r\nimport './KeyboardRow.css';\r\n\r\nclass KeyboardRow extends React.Component {\r\n    render() {\r\n        const { row } = this.props;\r\n        if (!row) return null;\r\n        if (!row.length) return null;\r\n\r\n        return (\r\n            <div className='keyboard-row'>\r\n                {row.map((x, i) => (<KeyboardButton key={i} text={x.text} type={x.type}/>))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nKeyboardRow.propTypes = {\r\n    row: PropTypes.array\r\n};\r\n\r\nexport default KeyboardRow;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport KeyboardRow from './KeyboardRow';\r\nimport MessageContext from '../MessageContext';\r\nimport './ReplyMarkup.css';\r\n\r\nclass ReplyMarkup extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevChatId, prevMessageId } = state;\r\n        const { chatId, messageId } = props;\r\n\r\n\r\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n                message: {\r\n                    chatId,\r\n                    messageId\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const { markup } = this.props;\r\n        const { message } = this.state;\r\n\r\n        if (!markup) return null;\r\n        if (markup['@type'] !== 'replyMarkupInlineKeyboard') return null;\r\n\r\n        const { rows } = markup;\r\n        if (!rows.length) return null;\r\n\r\n        return (\r\n            <div className='reply-markup'>\r\n                <MessageContext.Provider value={message}>\r\n                    {rows.map((x, i) => (<KeyboardRow key={i} row={x}/>))}\r\n                </MessageContext.Provider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReplyMarkup.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    markup: PropTypes.object\r\n};\r\n\r\nexport default ReplyMarkup;","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport SvgIcon from '@material-ui/core/SvgIcon';\r\nimport Animation from './Animation';\r\nimport Audio from './Audio';\r\nimport Document from './Document';\r\nimport Photo from './Photo';\r\nimport Sticker, { StickerSourceEnum } from './Sticker';\r\nimport Video from './Video';\r\nimport VideoNote from './VideoNote';\r\nimport VoiceNote from './VoiceNote';\r\nimport { getSize } from '../../../Utils/Common';\r\nimport { getSrc } from '../../../Utils/File';\r\nimport { openInstantView } from '../../../Actions/InstantView';\r\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\r\nimport {\r\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\r\n    PHOTO_DISPLAY_SIZE,\r\n    PHOTO_DISPLAY_SMALL_SIZE,\r\n    PHOTO_SIZE\r\n} from '../../../Constants';\r\nimport MessageStore from '../../../Stores/MessageStore';\r\nimport './WebPage.css';\r\n\r\nclass WebPage extends React.Component {\r\n    getMedia = () => {\r\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const {\r\n            site_name,\r\n            title,\r\n            description,\r\n            url,\r\n            photo,\r\n            animation,\r\n            video,\r\n            audio,\r\n            document,\r\n            voice_note,\r\n            video_note,\r\n            sticker,\r\n            type\r\n        } = web_page;\r\n\r\n        if (sticker) {\r\n            return [\r\n                null,\r\n                <Sticker\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    sticker={sticker}\r\n                    openMedia={openMedia}\r\n                    source={StickerSourceEnum.MESSAGE}\r\n                />\r\n            ];\r\n        }\r\n\r\n        if (voice_note) {\r\n            return [\r\n                null,\r\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\r\n            ];\r\n        }\r\n\r\n        if (video_note) {\r\n            return [\r\n                null,\r\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\r\n            ];\r\n        }\r\n\r\n        if (audio) {\r\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\r\n        }\r\n\r\n        if (document) {\r\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\r\n        }\r\n\r\n        if (animation) {\r\n            const animationSrc = getSrc(animation.animation);\r\n            if (animationSrc || animation.thumbnail) {\r\n                return [\r\n                    null,\r\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\r\n                ];\r\n            }\r\n        }\r\n\r\n        if (video) {\r\n            if (video.thumbnail) {\r\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\r\n            }\r\n        }\r\n\r\n        if (photo) {\r\n            const photoSize = getSize(photo.sizes, size);\r\n            const smallPhoto =\r\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\r\n                (site_name || title || description && description.text.length > 0) &&\r\n                photoSize &&\r\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_SIZE );\r\n            let totalLength = 0;\r\n            if (site_name) {\r\n                totalLength += site_name.length;\r\n            }\r\n            if (title) {\r\n                totalLength += title.length;\r\n            }\r\n            if (description) {\r\n                totalLength += description.text.length;\r\n            }\r\n\r\n            const extraSmallPhoto = smallPhoto && totalLength < 50;\r\n\r\n            const style =\r\n                smallPhoto || extraSmallPhoto\r\n                    ? {\r\n                          float: 'right',\r\n                          marginLeft: 6\r\n                      }\r\n                    : {};\r\n\r\n            return [\r\n                smallPhoto ? (\r\n                    <Photo\r\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\r\n                        style={style}\r\n                        chatId={chatId}\r\n                        messageId={messageId}\r\n                        photo={photo}\r\n                        openMedia={openMedia}\r\n                    />\r\n                ) : null,\r\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\r\n            ];\r\n        }\r\n\r\n        return [null, null];\r\n    };\r\n\r\n    handleInstantViewClick = async event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const { url } = web_page;\r\n\r\n        openInstantView(url);\r\n    };\r\n\r\n    getWebPage() {\r\n        const { chatId, messageId, t } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        const { web_page } = content;\r\n        if (!web_page) return null;\r\n\r\n        const { instant_view_version, site_name } = web_page;\r\n        let { description, title } = web_page;\r\n\r\n        if (description['@type'] === 'formattedText') {\r\n            description = getFormattedText(description);\r\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\r\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\r\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\r\n\r\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\r\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\r\n        }\r\n\r\n        const webPageContent = (\r\n            <>\r\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\r\n                {title && <div className='web-page-title'>{title}</div>}\r\n                {description && <div className='web-page-description'>{description}</div>}\r\n            </>\r\n        );\r\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\r\n        const webPageInstantView = instant_view_version > 0 && (\r\n            <Button\r\n                variant='outlined'\r\n                color='primary'\r\n                classes={{\r\n                    outlinedPrimary: 'message-control',\r\n                    disabled: 'message-control-disabled'\r\n                }}\r\n                fullWidth\r\n                onClick={this.handleInstantViewClick}\r\n                className='web-page-button'>\r\n                <SvgIcon>\r\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\r\n                </SvgIcon>\r\n                {t('InstantView')}\r\n            </Button>\r\n        );\r\n\r\n        return (\r\n            <>\r\n                {webPageMediaTop}\r\n                {webPageContent}\r\n                {webPageMediaBottom}\r\n                {webPageInstantView}\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { meta } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <div className='web-page'>\r\n                    <div className='border' />\r\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\r\n                </div>\r\n                {meta}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nWebPage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n\r\n    size: PropTypes.number,\r\n    displaySize: PropTypes.number,\r\n    displaySmallSize: PropTypes.number,\r\n    displayExtraSmallSize: PropTypes.number,\r\n    openMedia: PropTypes.func\r\n};\r\n\r\nWebPage.defaultProps = {\r\n    size: PHOTO_SIZE,\r\n    displaySize: PHOTO_DISPLAY_SIZE,\r\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\r\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\r\n};\r\n\r\nexport default withTranslation()(WebPage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport CheckMarkIcon from '@material-ui/icons/Check';\r\nimport DayMeta from './DayMeta';\r\nimport Reply from './Reply';\r\nimport ReplyMarkup from './Markup/ReplyMarkup';\r\nimport Forward from './Forward';\r\nimport Meta from './Meta';\r\nimport MessageAuthor from './MessageAuthor';\r\nimport MessageMenu from './MessageMenu';\r\nimport UserTile from '../Tile/UserTile';\r\nimport ChatTile from '../Tile/ChatTile';\r\nimport EmptyTile from '../Tile/EmptyTile';\r\nimport UnreadSeparator from './UnreadSeparator';\r\nimport WebPage from './Media/WebPage';\r\nimport { startMessageEditing, stopMessageEditing } from '../../Actions/Message';\r\nimport {\r\n    getEmojiMatches,\r\n    getText,\r\n    getWebPage,\r\n    openMedia,\r\n    showMessageForward,\r\n    isMetaBubble,\r\n    canMessageBeForwarded,\r\n    getMessageStyle,\r\n    isEmptySelection\r\n} from '../../Utils/Message';\r\nimport { getMedia } from '../../Utils/Media';\r\nimport { canSendMessages, isChannelChat, isGroupChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\r\nimport {\r\n    openUser,\r\n    openChat,\r\n    selectMessage,\r\n    openReply,\r\n    replyMessage,\r\n    forwardMessages\r\n} from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './Message.css';\r\n\r\nclass Message extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, messageId } = this.props;\r\n        this.state = {\r\n            message: MessageStore.get(chatId, messageId),\r\n            emojiMatches: getEmojiMatches(chatId, messageId),\r\n            selected: false,\r\n            highlighted: false,\r\n            shook: false,\r\n\r\n            contextMenu: false,\r\n            copyLink: null,\r\n            left: 0,\r\n            top: 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\r\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('Message.shouldComponentUpdate true chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            // console.log('Message.shouldComponentUpdate true messageId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.sendingState !== sendingState) {\r\n            // console.log('Message.shouldComponentUpdate true sendingState');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\r\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showTail !== showTail) {\r\n            // console.log('Message.shouldComponentUpdate true showTail');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showTitle !== showTitle) {\r\n            // console.log('Message.shouldComponentUpdate true showTitle');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            // console.log('Message.shouldComponentUpdate true contextMenu');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selected !== selected) {\r\n            // console.log('Message.shouldComponentUpdate true selected');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            // console.log('Message.shouldComponentUpdate true highlighted');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.shook !== shook) {\r\n            // console.log('Message.shouldComponentUpdate true shook');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.emojiMatches !== emojiMatches) {\r\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\r\n            return true;\r\n        }\r\n\r\n        // console.log('Message.shouldComponentUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\r\n    }\r\n\r\n    onClientUpdateClearSelection = update => {\r\n        if (!this.state.selected) return;\r\n\r\n        this.setState({ selected: false });\r\n    };\r\n\r\n    onClientUpdateMessageShake = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { shook } = this.state;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (shook) {\r\n                this.setState({ shook: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ shook: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ shook: true });\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected } = update;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            this.setState({ selected, highlighted: false });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id) return;\r\n\r\n        this.updateMessageContent = update;\r\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\r\n    };\r\n\r\n    onUpdateMessageEdited = update => {\r\n        const { chat_id, message_id } = update;\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId !== chat_id) return;\r\n        if (messageId !== message_id) return;\r\n\r\n        this.updateMessageEdited = update;\r\n        setTimeout(this.handleUpdateMessageContentAndEditedOnce, 50);\r\n    };\r\n\r\n    handleUpdateMessageContentAndEditedOnce = () => {\r\n        const { updateMessageContent, updateMessageEdited } = this;\r\n        this.updateMessageContent = null;\r\n        this.updateMessageEdited = null;\r\n\r\n        if (!updateMessageContent && !updateMessageEdited) return;\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        let handled = false;\r\n        if (updateMessageContent) {\r\n            const { emojiMatches } = this.state;\r\n            const newEmojiMatches = getEmojiMatches(chatId, messageId);\r\n            if (newEmojiMatches !== emojiMatches) {\r\n                handled = true;\r\n                this.setState({ emojiMatches: newEmojiMatches });\r\n            }\r\n        }\r\n\r\n        if (handled) return;\r\n\r\n        startMessageEditing(chatId, messageId);\r\n        this.forceUpdate(() => {\r\n            stopMessageEditing(chatId, messageId);\r\n        });\r\n    };\r\n\r\n    handleSelectUser = userId => {\r\n        openUser(userId, true);\r\n    };\r\n\r\n    handleSelectChat = chatId => {\r\n        openChat(chatId, null, true);\r\n    };\r\n\r\n    handleSelection = () => {\r\n        if (!this.mouseDown) return;\r\n\r\n        const selection = window.getSelection().toString();\r\n        if (!isEmptySelection(selection)) {\r\n            return;\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\r\n        selectMessage(chatId, messageId, selected);\r\n    };\r\n\r\n    handleDateClick = e => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const canBeReplied = canSendMessages(chatId);\r\n        if (canBeReplied) {\r\n            replyMessage(chatId, messageId);\r\n\r\n            return;\r\n        }\r\n\r\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\r\n        if (canBeForwarded) {\r\n            forwardMessages(chatId, [messageId]);\r\n        }\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        openMedia(chatId, messageId);\r\n    };\r\n\r\n    handleAnimationEnd = () => {\r\n        this.setState({ highlighted: false });\r\n    };\r\n\r\n    handleMouseDown = () => {\r\n        this.mouseDown = true;\r\n    };\r\n\r\n    handleMouseOver = () => {\r\n        this.mouseDown = false;\r\n    };\r\n\r\n    handleMouseOut = () => {\r\n        this.mouseOut = false;\r\n    };\r\n\r\n    handleReplyClick = () => {\r\n        const { chatId, messageId } = this.props;\r\n        openReply(chatId, messageId);\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            if (MessageStore.selectedItems.size > 1) {\r\n                return;\r\n            }\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const copyLink =\r\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                copyLink,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        let { showTail } = this.props;\r\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate, source } = this.props;\r\n        const {\r\n            emojiMatches,\r\n            selected,\r\n            highlighted,\r\n            shook,\r\n            copyLink,\r\n            contextMenu,\r\n            left,\r\n            top\r\n        } = this.state;\r\n\r\n        // console.log('Message.render', messageId);\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return <div>[empty message]</div>;\r\n\r\n        const { content, is_outgoing, date, reply_to_message_id, forward_info, sender, reply_markup } = message;\r\n\r\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\r\n        const inlineMeta = (\r\n            <Meta\r\n                className='meta-hidden'\r\n                key={`${chatId}_${messageId}_meta`}\r\n                chatId={chatId}\r\n                messageId={messageId}\r\n            />\r\n        );\r\n        const meta = (\r\n            <Meta\r\n                className={classNames('meta-text', {\r\n                    'meta-bubble': isMetaBubble(chatId, messageId)\r\n                })}\r\n                chatId={chatId}\r\n                messageId={messageId}\r\n                onDateClick={this.handleDateClick}\r\n            />\r\n        );\r\n\r\n        const webPage = getWebPage(message);\r\n        const text = getText(message, !!webPage ? null : inlineMeta, t, { chatId, messageId });\r\n        const hasCaption = text !== null && text.length > 0;\r\n        const showForward = showMessageForward(chatId, messageId);\r\n        const showReply = Boolean(reply_to_message_id);\r\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing) || (isGroupChat(chatId) && isOutgoing);\r\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\r\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\r\n        const isChannel = isChannelChat(chatId);\r\n        const isPrivate = isPrivateChat(chatId);\r\n\r\n        // if (showTail && isMediaContent() && !hasCaption) {\r\n        //     showTail = false;\r\n        // }\r\n\r\n        let tile = null;\r\n        if (showTail) {\r\n            if (isMeChat(chatId) && forward_info) {\r\n                switch (forward_info.origin['@type']) {\r\n                    case 'messageForwardOriginHiddenUser': {\r\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginUser': {\r\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\r\n                        break;\r\n                    }\r\n                    case 'messageForwardOriginChannel': {\r\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (isPrivate) {\r\n                tile = <EmptyTile small />\r\n            } else if (isChannel) {\r\n                tile = <EmptyTile small />\r\n            } else if (is_outgoing) {\r\n                tile = <EmptyTile small />\r\n            } else if (sender.user_id) {\r\n                tile = <UserTile small userId={sender.user_id} onSelect={this.handleSelectUser} />;\r\n            } else {\r\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\r\n            }\r\n        }\r\n\r\n        const style = getMessageStyle(chatId, messageId);\r\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\r\n        const tailRounded =\r\n            !hasCaption  && (\r\n                content['@type'] === 'messageAnimation' ||\r\n                content['@type'] === 'messageVideo' ||\r\n                content['@type'] === 'messagePhoto' ||\r\n                content['@type'] === 'messageInvoice' && content.photo) || reply_markup && reply_markup['@type'] === 'replyMarkupInlineKeyboard';\r\n\r\n        // console.log('[p] m.render id=' + message.id);\r\n\r\n        // return (\r\n        //     <StubMessage>\r\n        //         {text}\r\n        //         {media}\r\n        //         <WebPage\r\n        //             chatId={chatId}\r\n        //             messageId={messageId}\r\n        //             openMedia={this.openMedia}\r\n        //             meta={inlineMeta}\r\n        //         />\r\n        //     </StubMessage>\r\n        // );\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('message', {\r\n                        'message-rounded': showTitle && showTail && tailRounded,\r\n                        'message-short': !tile,\r\n                        'message-out': isOutgoing,\r\n                        'message-selected': selected,\r\n                        'message-highlighted': highlighted && !selected,\r\n                        'message-group-title': showTitle && !showTail,\r\n                        'message-group': !showTitle && !showTail,\r\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\r\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\r\n                        'message-bubble-hidden': !withBubble\r\n                    })}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onClick={this.handleSelection}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='message-body'>\r\n                        <div className='message-padding'>\r\n                            <CheckMarkIcon className='message-select-tick' />\r\n                        </div>\r\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\r\n                            {tile}\r\n                            <div>\r\n                                <div\r\n                                    className={classNames('message-content', {\r\n                                        'message-bubble': withBubble,\r\n                                        'message-bubble-out': withBubble && isOutgoing\r\n                                    })}\r\n                                    style={style}>\r\n                                    {withBubble && ((showTitle && !suppressTitle) || showForward) && (\r\n                                        <div className='message-title'>\r\n                                            {showTitle && !showForward && (\r\n                                                <MessageAuthor sender={sender} forwardInfo={forward_info} openChat openUser/>\r\n                                            )}\r\n                                            {showForward && <Forward forwardInfo={forward_info} />}\r\n                                        </div>\r\n                                    )}\r\n                                    {showReply && (\r\n                                        <Reply\r\n                                            chatId={chatId}\r\n                                            messageId={reply_to_message_id}\r\n                                            onClick={this.handleReplyClick}\r\n                                        />\r\n                                    )}\r\n                                    {media}\r\n                                    <div\r\n                                        className={classNames('message-text', {\r\n                                            'message-text-1emoji': emojiMatches === 1,\r\n                                            'message-text-2emoji': emojiMatches === 2,\r\n                                            'message-text-3emoji': emojiMatches === 3\r\n                                        })}>\r\n                                        {text}\r\n                                    </div>\r\n                                    {webPage && (\r\n                                        <WebPage\r\n                                            chatId={chatId}\r\n                                            messageId={messageId}\r\n                                            openMedia={this.openMedia}\r\n                                            meta={inlineMeta}\r\n                                        />\r\n                                    )}\r\n                                    {withBubble && meta}\r\n                                </div>\r\n                                {reply_markup && (\r\n                                    <ReplyMarkup\r\n                                        chatId={chatId}\r\n                                        messageId={messageId}\r\n                                        markup={reply_markup}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                            <div className='message-tile-padding' />\r\n                        </div>\r\n                        <div className='message-padding' />\r\n                    </div>\r\n                </div>\r\n                <MessageMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    copyLink={copyLink}\r\n                    source={source}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    sendingState: PropTypes.object,\r\n    showTitle: PropTypes.bool,\r\n    showTail: PropTypes.bool,\r\n    showUnreadSeparator: PropTypes.bool,\r\n    showDate: PropTypes.bool\r\n}\r\n\r\nMessage.defaultProps = {\r\n    sendingState: null,\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false,\r\n    showDate: false\r\n}\r\n\r\n// const enhance = compose(\r\n//     withSaveRef(),\r\n//     withTranslation(),\r\n//     withRestoreRef()\r\n// );\r\n\r\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\r\n\r\nexport default message;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport DayMeta from './DayMeta';\r\nimport UnreadSeparator from './UnreadSeparator';\r\nimport Photo from './Media/Photo';\r\nimport { openMedia } from '../../Utils/Message';\r\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './ServiceMessage.css';\r\nimport MessageMenu from './MessageMenu';\r\n\r\nconst chatPhotoStyle = {\r\n    width: 96,\r\n    height: 96,\r\n    borderRadius: '50%',\r\n    margin: '0 auto 5px'\r\n};\r\n\r\nclass ServiceMessage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, messageId } = this.props;\r\n        this.state = {\r\n            message: MessageStore.get(chatId, messageId),\r\n            highlighted: false,\r\n            contextMenu: false,\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, sendingState, showUnreadSeparator, t } = this.props;\r\n        const { highlighted, contextMenu } = this.state;\r\n\r\n        if (nextProps.t !== t) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.sendingState !== sendingState) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.highlighted !== highlighted) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.contextMenu !== contextMenu) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\r\n    }\r\n\r\n    onClientUpdateMessageHighlighted = update => {\r\n        const { chatId, messageId } = this.props;\r\n        const { selected, highlighted } = this.state;\r\n\r\n        if (selected) return;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            if (highlighted) {\r\n                this.setState({ highlighted: false }, () => {\r\n                    setTimeout(() => {\r\n                        this.setState({ highlighted: true });\r\n                    }, 0);\r\n                });\r\n            } else {\r\n                this.setState({ highlighted: true });\r\n            }\r\n        } else if (highlighted) {\r\n            this.setState({ highlighted: false });\r\n        }\r\n    };\r\n\r\n    handleAnimationEnd = () => {\r\n        this.setState({ highlighted: false });\r\n    };\r\n\r\n    openMedia = event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        openMedia(chatId, messageId);\r\n    };\r\n\r\n    handleOpenContextMenu = async event => {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { contextMenu } = this.state;\r\n\r\n        if (contextMenu) {\r\n            this.setState({ contextMenu: false });\r\n        } else {\r\n            if (MessageStore.selectedItems.size > 1) {\r\n                return;\r\n            }\r\n\r\n            const left = event.clientX;\r\n            const top = event.clientY;\r\n            const copyLink =\r\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\r\n\r\n            this.setState({\r\n                contextMenu: true,\r\n                copyLink,\r\n                left,\r\n                top\r\n            });\r\n        }\r\n    };\r\n\r\n    handleCloseContextMenu = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        this.setState({ contextMenu: false });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\r\n        const { highlighted, contextMenu, left, top } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content, date } = message;\r\n        if (!content) return null;\r\n        if (content['@type'] === 'messageChatUpgradeTo') return null;\r\n\r\n        const { photo } = content;\r\n\r\n        const text = getServiceMessageContent(message, true);\r\n\r\n        return (\r\n            <div>\r\n                {showDate && <DayMeta date={date} />}\r\n                <div\r\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\r\n                    onAnimationEnd={this.handleAnimationEnd}\r\n                    onContextMenu={this.handleOpenContextMenu}>\r\n                    {showUnreadSeparator && <UnreadSeparator />}\r\n                    <div className='service-message-wrapper'>\r\n                        <div className='service-message-content'>\r\n                            <div>{text}</div>\r\n                        </div>\r\n                    </div>\r\n                    {photo && (\r\n                        <Photo\r\n                            chatId={chatId}\r\n                            messageId={messageId}\r\n                            photo={photo}\r\n                            displaySize={96}\r\n                            style={chatPhotoStyle}\r\n                            openMedia={this.openMedia}\r\n                        />\r\n                    )}\r\n                </div>\r\n                <MessageMenu\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    anchorPosition={{ top, left }}\r\n                    open={contextMenu}\r\n                    onClose={this.handleCloseContextMenu}\r\n                    copyLink={null}\r\n                    source={'chat'}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nServiceMessage.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    showUnreadSeparator: PropTypes.bool\r\n}\r\n\r\nServiceMessage.defaultProps = {\r\n    showTitle: false,\r\n    showTail: false,\r\n    showUnreadSeparator: false\r\n}\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withTranslation(),\r\n    withRestoreRef()\r\n);\r\n\r\nexport default enhance(ServiceMessage);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport './Placeholder.css';\r\n\r\nclass Placeholder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\r\n        this.state = {\r\n            chatId,\r\n            dialogsReady,\r\n            cacheLoaded\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (nextState.chatId !== this.state.chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.t !== this.props.t) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\r\n    }\r\n\r\n    onClientUpdateCacheLoaded = update => {\r\n        const { cacheLoaded } = AppStore;\r\n\r\n        this.setState({ cacheLoaded });\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { nextChatId: chatId } = update;\r\n\r\n        this.setState({ chatId });\r\n    };\r\n\r\n    onClientUpdateDialogsReady = update => {\r\n        const { dialogsReady } = AppStore;\r\n\r\n        this.setState({ dialogsReady });\r\n    };\r\n\r\n    render() {\r\n        const { t, force } = this.props;\r\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\r\n        if (chatId) return null;\r\n        // if (!dialogsReady && !cacheLoaded) return null;\r\n\r\n        return (\r\n            <div className='placeholder'>\r\n                <div className='placeholder-wrapper'>\r\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\r\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Placeholder);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport './ScrollDownButton.css';\r\n\r\nclass ScrollDownButton extends React.Component {\r\n    render() {\r\n        const { onClick } = this.props;\r\n\r\n        return (\r\n            <div className='scroll-down-button'>\r\n                <IconButton disableRipple={true} onMouseDown={onClick}>\r\n                    <ArrowDownwardIcon />\r\n                </IconButton>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nScrollDownButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ScrollDownButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport StickerPreview from './StickerPreview';\r\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\r\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickersHint.css';\r\n\r\nclass StickersHint extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.hintsRef = React.createRef();\r\n\r\n        this.state = {\r\n            hint: null,\r\n            items: [],\r\n            previewStickerId: 0,\r\n            showPreview: false,\r\n            cancelSend: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\r\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\r\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\r\n    }\r\n\r\n    onClientUpdateRemoteStickersHint = update => {\r\n        const { hint } = update;\r\n        const { hint: currentHint } = this.state;\r\n\r\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\r\n\r\n        this.setState({\r\n            hint: StickerStore.hint,\r\n            items: this.getItems(StickerStore.hint)\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        const { stickers } = hint;\r\n        loadStickersContent(store, stickers.stickers);\r\n    };\r\n\r\n    onClientUpdateLocalStickersHint = update => {\r\n        const { hint } = update;\r\n\r\n        this.setState({\r\n            hint,\r\n            items: this.getItems(hint),\r\n            previewStickerId: 0,\r\n            showPreview: false,\r\n            cancelSend: false\r\n        });\r\n\r\n        if (!hint) return;\r\n\r\n        const store = FileStore.getStore();\r\n        const { stickers } = hint;\r\n        loadStickersContent(store, stickers.stickers);\r\n    };\r\n\r\n    handleSend = sticker => {\r\n        const { cancelSend } = this.state;\r\n        if (cancelSend) return;\r\n        if (!sticker) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSend',\r\n            sticker\r\n        });\r\n    };\r\n\r\n    loadPreviewContent = stickerId => {\r\n        const { items } = this.state;\r\n\r\n        const sticker = items.find(x => x.sticker.id === stickerId);\r\n        if (!sticker) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadStickerContent(store, sticker, null);\r\n\r\n        let stickersPerRow = 8;\r\n        if (this.hintsRef && this.hintsRef.current) {\r\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\r\n        }\r\n\r\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\r\n        preloadStickers.forEach(x => {\r\n            loadStickerContent(store, x, null);\r\n        });\r\n    };\r\n\r\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\r\n        if (!stickers) return [];\r\n\r\n        const indexes = [];\r\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        if (index === -1) return [];\r\n\r\n        const row = Math.floor(index / stickersPerRow);\r\n        const column = index % stickersPerRow;\r\n\r\n        const prevRow = row - 1;\r\n        const nextRow = row + 1;\r\n        const prevColumn = column - 1;\r\n        const nextColumn = column + 1;\r\n\r\n        if (prevRow >= 0) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(stickersPerRow * prevRow + prevColumn);\r\n            }\r\n            indexes.push(stickersPerRow * prevRow + column);\r\n            if (nextColumn < stickersPerRow) {\r\n                indexes.push(stickersPerRow * prevRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        if (prevColumn >= 0) {\r\n            indexes.push(stickersPerRow * row + prevColumn);\r\n        }\r\n        if (nextColumn < stickersPerRow) {\r\n            indexes.push(stickersPerRow * row + nextColumn);\r\n        }\r\n\r\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(stickersPerRow * nextRow + prevColumn);\r\n            }\r\n            indexes.push(stickersPerRow * nextRow + column);\r\n            if (nextColumn < stickersPerRow) {\r\n                indexes.push(stickersPerRow * nextRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        return indexes.map(i => stickers[i]);\r\n    };\r\n\r\n    handleMouseEnter = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        if (!this.mouseDown) return;\r\n\r\n        if (this.mouseDownStickerId !== stickerId) {\r\n            this.mouseDownStickerId = null;\r\n        }\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        this.mouseDownStickerId = stickerId;\r\n        const now = Date.now();\r\n\r\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\r\n        setTimeout(() => {\r\n            const { timestamp } = this.state;\r\n            if (timestamp === now) {\r\n                this.setState({ showPreview: true, cancelSend: true });\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateStickerPreview',\r\n                    sticker\r\n                });\r\n            }\r\n        }, 500);\r\n\r\n        this.loadPreviewContent(stickerId);\r\n\r\n        this.mouseDown = true;\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return false;\r\n    };\r\n\r\n    handleMouseUp = () => {\r\n        const sticker = null;\r\n        this.setState({ sticker, timestamp: 0, showPreview: false });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.mouseDown = false;\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    getItems = hint => {\r\n        const items = [];\r\n        if (!hint) return items;\r\n\r\n        const dict = new Map();\r\n        const { stickers, foundStickers } = hint;\r\n        if (stickers) {\r\n            stickers.stickers.forEach(x => {\r\n                items.push(x);\r\n                dict.set(x.sticker.id, x.sticker.id);\r\n            });\r\n        }\r\n        if (foundStickers) {\r\n            foundStickers.stickers.forEach(x => {\r\n                if (!dict.has(x.sticker.id)) {\r\n                    items.push(x);\r\n                    dict.set(x.sticker.id, x.sticker.id);\r\n                }\r\n            });\r\n        }\r\n\r\n        return items;\r\n    };\r\n\r\n    getSticker(stickerId) {\r\n        const { items } = this.state;\r\n\r\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\r\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\r\n    }\r\n\r\n    render() {\r\n        const { hint, items, sticker, showPreview } = this.state;\r\n        if (!hint) return null;\r\n        if (!items) return null;\r\n        if (!items.length) return null;\r\n\r\n        const controls = items.map(x => (\r\n            <div\r\n                className='sticker-set-dialog-item'\r\n                key={x.sticker.id}\r\n                data-sticker-id={x.sticker.id}\r\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\r\n                onClick={() => this.handleSend(x)}\r\n                onMouseEnter={this.handleMouseEnter}\r\n                onMouseDown={this.handleMouseDown}>\r\n                <Sticker\r\n                    key={x.sticker.id}\r\n                    className='sticker-set-dialog-item-sticker'\r\n                    sticker={x}\r\n                    autoplay={false}\r\n                    blur={false}\r\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\r\n                    preview\r\n                    source={StickerSourceEnum.HINTS}\r\n                />\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\r\n                {controls}\r\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StickersHint;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as ReactDOM from 'react-dom';\r\nimport classNames from 'classnames';\r\nimport ActionBar from './ActionBar';\r\nimport Album from '../Message/Album/Album';\r\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\r\nimport FilesDropTarget from './FilesDropTarget';\r\nimport InputBoxHints from './InputBoxHints';\r\nimport Message from '../Message/Message';\r\nimport ServiceMessage from '../Message/ServiceMessage';\r\nimport Placeholder from './Placeholder';\r\nimport ScrollDownButton from './ScrollDownButton';\r\nimport StickersHint from './StickersHint';\r\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage, mapEquals } from '../../Utils/Common';\r\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\r\nimport { canMessageBeEdited, filterDuplicateMessages, forwardInfoEquals, senderEquals } from '../../Utils/Message';\r\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\r\nimport { canSendMediaMessages, canSendMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isGroupChat, isMeChat } from '../../Utils/Chat';\r\nimport { closePinned, editMessage, highlightMessage, openChat } from '../../Actions/Client';\r\nimport { sendBotStartMessage } from '../../Actions/Message';\r\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MessagesList.css';\r\n\r\nconst ScrollBehaviorEnum = Object.freeze({\r\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\r\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\r\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\r\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\r\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\r\n    NONE: 'NONE'\r\n});\r\n\r\nclass MessagesList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.lastRequests = new Map();\r\n        this.sessionId = {\r\n            date: new Date(),\r\n            loading: false,\r\n            completed: false,\r\n            loadMigratedHistory: false\r\n        };\r\n\r\n        this.state = {\r\n            prevChatId: 0,\r\n            prevMessageId: null,\r\n            playerOpened: false,\r\n            history: [],\r\n            clearHistory: false,\r\n            selectionActive: false,\r\n            separatorMessageId: 0,\r\n            scrollDownVisible: false,\r\n            replyHistory: []\r\n        };\r\n\r\n        this.listRef = React.createRef();\r\n        this.itemsRef = React.createRef();\r\n        this.scrollDownButtonRef = React.createRef();\r\n\r\n        this.defferedActions = [];\r\n        this.itemsMap = new Map();\r\n\r\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\r\n        this.updatePinnedMessage = throttle(this.updatePinnedMessage, 200);\r\n    }\r\n\r\n    hasLastMessage() {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return false;\r\n\r\n        const { last_message } = chat;\r\n        if (!last_message) return true;\r\n\r\n        return history.length > 0 && history[history.length - 1].id >= last_message.id;\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\r\n            return {\r\n                prevChatId: props.chatId,\r\n                prevMessageId: props.messageId,\r\n                clearHistory: false,\r\n                selectionActive: false,\r\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\r\n                scrollDownVisible:\r\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\r\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        const list = this.listRef.current;\r\n        const { scrollTop, scrollHeight, offsetHeight } = list;\r\n\r\n        const snapshot = {\r\n            scrollTop,\r\n            scrollHeight,\r\n            offsetHeight\r\n        };\r\n\r\n        this.snapshot = snapshot;\r\n        return snapshot;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { chatId, messageId } = this.props;\r\n        const { scrollDownVisible } = this.state;\r\n\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] componentDidUpdate\r\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\r\n        //     scrollDownVisible=${scrollDownVisible}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.scrollHeight=${list.scrollHeight}\r\n        //     list.offsetHeight=${list.offsetHeight}`\r\n        // );\r\n\r\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\r\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            // console.log('[ml] shouldComponentUpdate chatId');\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            // console.log('[ml] shouldComponentUpdate messageId');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\r\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.playerOpened !== playerOpened) {\r\n            // console.log('[ml] shouldComponentUpdate playerOpened');\r\n            return true;\r\n        }\r\n\r\n        if (!historyEquals(nextState.history, history)) {\r\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\r\n            return true;\r\n        }\r\n\r\n        if (nextState.dragging !== dragging) {\r\n            // console.log('[ml] shouldComponentUpdate dragging');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.clearHistory !== clearHistory) {\r\n            // console.log('[ml] shouldComponentUpdate clearHistory');\r\n            return true;\r\n        }\r\n\r\n        if (nextState.selectionActive !== selectionActive) {\r\n            // console.log('[ml] shouldComponentUpdate selectionActive');\r\n            return true;\r\n        }\r\n\r\n        // console.log('[ml] shouldComponentUpdate false');\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId, messageId } = this.props;\r\n        this.handleSelectChat(chatId, null, messageId, null);\r\n\r\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\r\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\r\n        MessageStore.on('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\r\n        MessageStore.on('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\r\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\r\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\r\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\r\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\r\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\r\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\r\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\r\n        MessageStore.off('clientUpdateStartMessageEditing', this.onClientUpdateStartMessageEditing);\r\n        MessageStore.off('clientUpdateStopMessageEditing', this.onClientUpdateStopMessageEditing);\r\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\r\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSendSucceeded);\r\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\r\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\r\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\r\n    }\r\n\r\n    onClientUpdateStartMessageEditing = update => {\r\n        const { chatId, messageId } = update;\r\n        const { chatId: currentChatId } = this.props;\r\n        if (currentChatId !== chatId) return;\r\n\r\n        const { history } = this.state;\r\n        if (!history.length) return;\r\n\r\n        const { current: list } = this.listRef;\r\n        if (list.offsetHeight + list.scrollTop < list.scrollHeight){\r\n            return;\r\n        }\r\n\r\n        if (!history.some(x => x.chat_id === chatId && x.id === messageId)) return;\r\n\r\n        this.scrollBottomAfterEditing = {\r\n            chatId,\r\n            messageId\r\n        };\r\n    };\r\n\r\n    onClientUpdateStopMessageEditing = update => {\r\n        const { chatId, messageId } = update;\r\n        const { chatId: currentChatId } = this.props;\r\n        if (currentChatId !== chatId) return;\r\n\r\n        const { scrollBottomAfterEditing } = this;\r\n        if (!scrollBottomAfterEditing) return;\r\n\r\n        if (chatId !== scrollBottomAfterEditing.chatId) return;\r\n        if (messageId !== scrollBottomAfterEditing.messageId) return;\r\n\r\n        const { current: list } = this.listRef;\r\n        list.scrollTop = list.scrollHeight - list.offsetHeight;\r\n        this.scrollBottomAfterEditing = null;\r\n    };\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chat_id, message_id, is_pinned } = update;\r\n        const { chatId, filter } = this.props;\r\n        if (chatId !== chat_id) return;\r\n        if (!filter) return;\r\n\r\n        if (is_pinned) {\r\n            const message = MessageStore.get(chat_id, message_id);\r\n\r\n            const list = this.listRef.current;\r\n\r\n            let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\r\n            if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n            }\r\n\r\n            const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\r\n\r\n            const history = [message];\r\n            this.scrollBehaviorNone = true;\r\n            this.insert(history, newState, () => {\r\n                this.scrollBehaviorNone = false;\r\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n            });\r\n\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, history);\r\n            this.viewMessages(history);\r\n        } else {\r\n            this.deleteHistory([message_id]);\r\n\r\n            const media = MessageStore.getMedia(chatId);\r\n            if (media && !media.pinned.length) {\r\n                closePinned();\r\n            }\r\n        }\r\n    };\r\n\r\n    onKeyDown = event => {\r\n        // if (event.keyCode === 27) {\r\n        //     if (MessageStore.selectedItems.size > 0) {\r\n        //         console.log('[k] messagesList onKeyDown');\r\n        //         clearSelection();\r\n        //         event.stopPropagation();\r\n        //         event.preventDefault();\r\n        //     }\r\n        // }\r\n    };\r\n\r\n    onClientUpdateTryEditMessage = async update => {\r\n        if (this.hasLastMessage()) {\r\n            const { history } = this.state;\r\n\r\n            for (let i = history.length - 1; i >= 0; i--) {\r\n                const message = history[i];\r\n                if (canMessageBeEdited(message.chat_id, message.id)) {\r\n                    editMessage(message.chat_id, message.id);\r\n\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'searchChatMessages',\r\n            chat_id: this.props.chatId,\r\n            query: '',\r\n            sender_user_id: UserStore.getMyId(),\r\n            from_message_id: 0,\r\n            offset: 0,\r\n            limit: 100,\r\n            filter: { '@type': 'searchMessagesFilterEmpty' }\r\n        });\r\n\r\n        for (let i = 0; i < result.messages.length; i++) {\r\n            const message = result.messages[i];\r\n            if (canMessageBeEdited(message.chat_id, message.id)) {\r\n                editMessage(message.chat_id, message.id);\r\n\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    onClientUpdateDialogsReady = async update => {\r\n        const { list } = update;\r\n        if (!list) return;\r\n        if (list['@type'] !== 'chatListMain') return;\r\n\r\n        const { history } = this.state;\r\n        if (history && history.length > 0) return;\r\n\r\n        await FileStore.initDB(async () => {\r\n            const { chatId, messageId } = this.props;\r\n            if (chatId) {\r\n                const chat = ChatStore.get(chatId);\r\n                if (chat) {\r\n                    const { type } = chat;\r\n                    switch (type['@type']) {\r\n                        case 'chatTypePrivate':\r\n                        case 'chatTypeSecret': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createPrivateChat',\r\n                                user_id: type.user_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                        case 'chatTypeBasicGroup': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createBasicGroupChat',\r\n                                basic_group_id: type.basic_group_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                        case 'chatTypeSupergroup': {\r\n                            await TdLibController.send({\r\n                                '@type': 'createSupergroupChat',\r\n                                supergroup_id: type.supergroup_id,\r\n                                force: false\r\n                            });\r\n                            break;\r\n                        }\r\n                    }\r\n                    this.handleSelectChat(chatId, 0, messageId, 0);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateFocusWindow = update => {\r\n        const { focused } = update;\r\n        if (focused) {\r\n            this.defferedActions.forEach(x => x());\r\n            this.defferedActions = [];\r\n        }\r\n    };\r\n\r\n    onClientUpdateOpenReply = update => {\r\n        const { chatId, messageId } = update;\r\n        const { replyHistory } = this.state;\r\n\r\n        if (this.props.chatId !== chatId) {\r\n            return;\r\n        }\r\n\r\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\r\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\r\n            return;\r\n        }\r\n\r\n        replyHistory.push({ chatId, messageId });\r\n    };\r\n\r\n    onClientUpdateMediaActive = update => {\r\n        const list = this.listRef.current;\r\n\r\n        const prevOffsetHeight = list.offsetHeight;\r\n        const prevScrollTop = list.scrollTop;\r\n        this.setState({ playerOpened: true }, () => {\r\n            if (list.scrollTop === prevScrollTop) {\r\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateMediaEnding = udpate => {\r\n        const list = this.listRef.current;\r\n\r\n        this.prevOffsetHeight = list.offsetHeight;\r\n        this.prevScrollTop = list.scrollTop;\r\n    };\r\n\r\n    onClientUpdateMediaEnd = udpate => {\r\n        const list = this.listRef.current;\r\n\r\n        //const prevOffsetHeight = list.offsetHeight;\r\n        //const prevScrollTop = list.scrollTop;\r\n\r\n        this.setState({ playerOpened: false }, () => {\r\n            if (list.scrollTop === this.prevScrollTop) {\r\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateSelection = update => {\r\n        this.setState({\r\n            selectionActive: MessageStore.selectedItems.size > 0\r\n        });\r\n    };\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = this.props;\r\n\r\n        if (chatId === update.chatId) {\r\n            this.setState({ clearHistory: update.inProgress });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        if (history.findIndex(x => x.id === message_id) !== -1) {\r\n            const message = MessageStore.get(chat_id, message_id);\r\n            if (!message) return;\r\n\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, [message]);\r\n        }\r\n    };\r\n\r\n    onUpdateMessageSendSucceeded = update => {\r\n        const { message, old_message_id } = update;\r\n        const { chatId } = this.props;\r\n        if (chatId !== message.chat_id) return;\r\n\r\n        // let handleSendSucceeded = false;\r\n        // const { content } = message;\r\n        // switch (content['@type']) {\r\n        //     case 'messagePoll': {\r\n        //         handleSendSucceeded = true;\r\n        //         break;\r\n        //     }\r\n        // }\r\n        //\r\n        // if (!handleSendSucceeded) return;\r\n\r\n        const scrollBehavior = message.is_outgoing\r\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\r\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\r\n\r\n        this.replaceMessage(old_message_id, message, () => {\r\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\r\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n            }\r\n\r\n            this.updateItemsInView();\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, [message]);\r\n        this.viewMessages([message]);\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        if (!this.hasLastMessage()) return;\r\n\r\n        const { message } = update;\r\n        const { chatId } = this.props;\r\n        if (chatId !== message.chat_id) return;\r\n\r\n        const { date } = message;\r\n        if (date === 0) return;\r\n\r\n        const list = this.listRef.current;\r\n\r\n        let scrollBehavior = message.is_outgoing && !isServiceMessage(message) ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\r\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n        }\r\n\r\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\r\n\r\n        const history = [message];\r\n        this.scrollBehaviorNone = true;\r\n        this.insertPrevious(history, newState, () => {\r\n            this.scrollBehaviorNone = false;\r\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, history);\r\n        this.viewMessages(history);\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id, is_permanent, message_ids } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        if (!is_permanent) return;\r\n\r\n        this.deleteHistory(message_ids);\r\n    };\r\n\r\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\r\n        const chat = ChatStore.get(chatId);\r\n        const previousChat = ChatStore.get(previousChatId);\r\n        // console.log ( '%c%s', 'color: green; font: 1.2rem/1 Tahoma;', `selectChat messageId=${messageId}, prevMessageId=${previousMessageId}` );\r\n        this.sessionId = {\r\n            date: new Date(),\r\n            loading: false,\r\n            completed: false,\r\n            loadMigratedHistory: false\r\n        };\r\n        const { sessionId } = this;\r\n\r\n        this.prevScrollTop = null;\r\n        this.defferedActions = [];\r\n\r\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\r\n\r\n        if (chat) {\r\n            if (previousChatId !== chatId && !this.props.filter) {\r\n                TdLibController.send({\r\n                    '@type': 'openChat',\r\n                    chat_id: chatId\r\n                });\r\n            }\r\n\r\n            const unread = !messageId && chat.unread_count > 1;\r\n            let fromMessageId = 0;\r\n            if (unread && chat.last_read_inbox_message_id) {\r\n                fromMessageId = chat.last_read_inbox_message_id;\r\n            } else if (messageId) {\r\n                fromMessageId = messageId;\r\n            } else if (scrollPosition) {\r\n                fromMessageId = scrollPosition.messageId;\r\n            }\r\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\r\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\r\n\r\n            sessionId.loading = true;\r\n            const result = await this.getRequest(chat.id, fromMessageId, offset, limit)\r\n            .catch(error => {\r\n                return {\r\n                    '@type': 'messages',\r\n                    messages: [],\r\n                    total_count: 0\r\n                };\r\n            }).finally(() => {\r\n                sessionId.loading = false;\r\n            });\r\n\r\n            if (sessionId !== this.sessionId) {\r\n                return;\r\n            }\r\n\r\n            MessageStore.setItems(result.messages);\r\n            result.messages.reverse();\r\n\r\n            let separatorMessageId = this.state.separatorMessageId;\r\n            if (chatId !== previousChatId) {\r\n                separatorMessageId = Number.MAX_VALUE;\r\n                if (chat && chat.unread_count > 1) {\r\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\r\n                        const { id } = result.messages[i];\r\n                        if (\r\n                            !result.messages[i].is_outgoing &&\r\n                            id > chat.last_read_inbox_message_id &&\r\n                            id < separatorMessageId\r\n                        ) {\r\n                            separatorMessageId = id;\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\r\n            }\r\n\r\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\r\n            if (messageId) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\r\n            } else if (unread && separatorMessageId) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\r\n            } else if (scrollPosition) {\r\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\r\n            }\r\n\r\n            this.cancelUpdatePinnedMessage = true;\r\n            this.replace(separatorMessageId, result.messages, () => {\r\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\r\n                if (messageId) {\r\n                    highlightMessage(chatId, messageId);\r\n                }\r\n                requestAnimationFrame(() => {\r\n                    this.cancelUpdatePinnedMessage = false;\r\n                });\r\n\r\n                this.loadIncompleteHistory(result, limit);\r\n            });\r\n\r\n            // load files\r\n            const store = FileStore.getStore();\r\n            loadMessageContents(store, result.messages);\r\n            this.viewMessages(result.messages);\r\n\r\n            loadChatsContent(store, [chatId]);\r\n            loadDraftContent(store, chatId);\r\n\r\n            if (previousChatId !== chatId && !this.props.filter) {\r\n                // getChatFullInfo(chatId);\r\n                getChatMedia(chatId);\r\n                if (this.props.options) {\r\n                    const { botStartMessage } = this.props.options;\r\n                    if (botStartMessage && canSendMessages(chatId) && isGroupChat(chatId)) {\r\n                        const { botUserId, parameter } = botStartMessage;\r\n\r\n                        await sendBotStartMessage(chatId, botUserId, parameter);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            sessionId.loading = true;\r\n            this.replace(0, [], () => {\r\n                sessionId.loading = false;\r\n            });\r\n        }\r\n\r\n        if (previousChatId !== chatId && !this.props.filter) {\r\n            if (previousChat) {\r\n                TdLibController.send({\r\n                    '@type': 'closeChat',\r\n                    chat_id: previousChatId\r\n                });\r\n\r\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\r\n                // console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\r\n                const message = this.messages[scrollMessage.index];\r\n                if (message) {\r\n                    const { chatId, messageId } = message.props;\r\n                    // console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\r\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    viewMessages(messages) {\r\n        if (!messages) return;\r\n        if (messages.length === 0) return;\r\n        if (!messages[0].chat_id) return;\r\n\r\n        const viewAction = () => {\r\n            TdLibController.send({\r\n                '@type': 'viewMessages',\r\n                chat_id: messages[0].chat_id,\r\n                message_ids: messages.map(x => x.id)\r\n            });\r\n        };\r\n\r\n        if (window.hasFocus) {\r\n            viewAction();\r\n        } else {\r\n            this.defferedActions.push(viewAction);\r\n        }\r\n    }\r\n\r\n    cancelLoadMessageContents(messages) {\r\n        //return;\r\n        for (let i = messages.length - 1; i >= 0; i--) {\r\n            let message = messages[i];\r\n            if (message && message.content) {\r\n                switch (message.content['@type']) {\r\n                    case 'messagePhoto': {\r\n                        let [id, pid] = this.getMessagePhoto(message);\r\n                        if (pid) {\r\n                            let obj = getPhotoSize(message.content.photo.sizes);\r\n                            if (!obj.blob) {\r\n                                FileStore.cancelGetRemoteFile(id, message);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case 'messageSticker': {\r\n                        let [id, pid] = this.getMessageSticker(message);\r\n                        if (pid) {\r\n                            let obj = message.content.sticker.sticker;\r\n                            if (!obj.blob) {\r\n                                FileStore.cancelGetRemoteFile(id, message);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loadIncompleteHistory = async (result, limit) => {\r\n        const MAX_ITERATIONS = 5;\r\n        let complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\r\n\r\n        for (let i = 0; i < MAX_ITERATIONS && !complete; i++) {\r\n            result = await this.onLoadNext();\r\n            complete = this.isCompleteHistory(result, MESSAGE_SLICE_LIMIT);\r\n        }\r\n    };\r\n\r\n    isCompleteHistory = (result, limit) => {\r\n        if (!result) return false;\r\n        if (!result.messages.length) return true;   // end of the history\r\n\r\n        return result.messages.length >= limit;\r\n    };\r\n\r\n    onLoadNext = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { sessionId } = this;\r\n\r\n        if (!chatId) return;\r\n        if (sessionId.loading) return;\r\n\r\n        if (sessionId.loadMigratedHistory) {\r\n            return await this.onLoadMigratedHistory();\r\n        }\r\n\r\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\r\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\r\n\r\n        let result = null;\r\n        const lastRequestKey = `${chatId}_${fromMessageId}`;\r\n        if (this.lastRequests.has(lastRequestKey)) {\r\n            result = this.lastRequests.get(`${chatId}_${fromMessageId}`);\r\n        } else {\r\n            sessionId.loading = true;\r\n            result = await this.getRequest(chatId, fromMessageId, 0, limit)\r\n                .finally(() => {\r\n                    sessionId.loading = false;\r\n                });\r\n        }\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        if (!result.messages.length) {\r\n            this.lastRequests.set(lastRequestKey, result);\r\n        }\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n\r\n        this.insertNext(result.messages, state => {\r\n            if (result.messages.length > 0) {\r\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\r\n                setTimeout(() => {\r\n                    const { history: currentHistory } = this.state;\r\n                    if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\r\n                        this.setState({\r\n                            history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\r\n                        });\r\n                    }\r\n                }, 100);\r\n            }\r\n            if (!result.messages.length) {\r\n                this.onLoadMigratedHistory();\r\n            }\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    onLoadMigratedHistory = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { sessionId } = this;\r\n\r\n        if (!chatId) return;\r\n\r\n        const supergroupId = getSupergroupId(chatId);\r\n        if (!supergroupId) return;\r\n\r\n        let fullInfo = SupergroupStore.getFullInfo(supergroupId);\r\n        if (!fullInfo) {\r\n            fullInfo = await getChatFullInfo(chatId);\r\n        }\r\n        if (!fullInfo.upgraded_from_basic_group_id) {\r\n            return;\r\n        }\r\n\r\n        sessionId.loadMigratedHistory = true;\r\n\r\n        const basicGroupChat = await TdLibController.send({\r\n            '@type': 'createBasicGroupChat',\r\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\r\n        });\r\n\r\n        if (!basicGroupChat) return;\r\n        if (sessionId.loading) return;\r\n\r\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\r\n        const limit = fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\r\n\r\n        sessionId.loading = true;\r\n        const result = await this.getRequest(basicGroupChat.id, fromMessageId, 0, limit)\r\n        .finally(() => {\r\n            sessionId.loading = false;\r\n        });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n        this.insertNext(result.messages, state => {\r\n            if (result.messages.length > 0) {\r\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\r\n            }\r\n\r\n            this.loadIncompleteHistory(result, limit);\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    onLoadPrevious = async () => {\r\n        const { chatId } = this.props;\r\n        const { history } = this.state;\r\n        const { sessionId } = this;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        if (!chat) return;\r\n        if (sessionId.loading) return;\r\n        if (this.hasLastMessage()) return;\r\n\r\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\r\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\r\n\r\n        sessionId.loading = true;\r\n        const result = await this.getRequest(chatId, fromMessageId, -limit + 1, limit)\r\n            .finally(() => {\r\n                sessionId.loading = false;\r\n            });\r\n\r\n        if (sessionId !== this.sessionId) {\r\n            return;\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.state.history);\r\n\r\n        MessageStore.setItems(result.messages);\r\n        result.messages.reverse();\r\n        this.scrollBehaviorNone = true;\r\n        this.insertPrevious(result.messages, {}, () => {\r\n            this.scrollBehaviorNone = false;\r\n            if (result.messages.length > 0) {\r\n                setTimeout(() => {\r\n                    const { history: currentHistory } = this.state;\r\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\r\n                        this.setState({\r\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\r\n                        }, () => {\r\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\r\n                        });\r\n                    }\r\n                }, 0);\r\n            }\r\n        });\r\n\r\n        const store = FileStore.getStore();\r\n        loadMessageContents(store, result.messages);\r\n        this.viewMessages(result.messages);\r\n\r\n        return result;\r\n    };\r\n\r\n    replace(separatorMessageId, history, callback) {\r\n        this.setState({ separatorMessageId, history }, callback);\r\n    }\r\n\r\n    replaceMessage(oldMessageId, message, callback) {\r\n        if (!message) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        let history = [...this.state.history];\r\n        const index = history.findIndex(x => x.id === oldMessageId);\r\n        if (index !== -1) {\r\n            history.splice(index, 1, message);\r\n        } else {\r\n            history = this.state.history;\r\n        }\r\n\r\n        this.setState({ history }, callback);\r\n    }\r\n\r\n    insert(history, newState, callback) {\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            history: history.concat(this.state.history).sort((a, b) => {\r\n                if (a.id < b.id) {\r\n                    return -1;\r\n                } else if (a.id > b.id) {\r\n                    return 1;\r\n                }\r\n\r\n                return 0;\r\n            })\r\n        }, callback);\r\n    }\r\n\r\n    insertNext(history, callback) {\r\n        if (history.length === 0) {\r\n            callback && callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            history: history.concat(this.state.history)//.slice(0, 100)\r\n        }, callback);\r\n    }\r\n\r\n    insertPrevious(history, newState, callback) {\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            history: this.state.history.concat(history),\r\n            ...newState\r\n        }, callback);\r\n    }\r\n\r\n    deleteHistory(message_ids, callback) {\r\n        const { history } = this.state;\r\n        if (history.length === 0) {\r\n            if (callback) callback();\r\n            return;\r\n        }\r\n\r\n        const map = new Map(message_ids.map(x => [x, x]));\r\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\r\n    }\r\n\r\n    updateItemsInView = () => {\r\n        if (!this.messages) return null;\r\n\r\n        const messages = [];\r\n        const messagesMap = new Map();\r\n        const items = itemsInView(this.listRef, this.itemsRef);\r\n        for (let i = 0; i < items.length; i++) {\r\n            const messageWrapper = this.messages[items[i]];\r\n            if (messageWrapper) {\r\n                const message = messageWrapper;\r\n                const { chatId, messageId, messageIds } = message.props;\r\n                if (messageId) {\r\n                    const key = `${chatId}_${messageId}`;\r\n                    messagesMap.set(key, key);\r\n                    messages.push({ chatId, messageId });\r\n                } else if (messageIds) {\r\n                    for (let j = 0; j < messageIds.length; j++) {\r\n                        const key = `${chatId}_${messageIds[j]}`;\r\n                        messagesMap.set(key, key);\r\n                        messages.push({ chatId, messageId: messageIds[j] });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!mapEquals(this.inViewMap, messagesMap)) {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMessagesInView', messages: messagesMap });\r\n\r\n            // console.log('[messages] !mapEquals', this.inViewMap, messagesMap, !mapEquals(this.inViewMap, messagesMap));\r\n            this.inViewMap = messagesMap;\r\n\r\n            return messages;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    updatePinnedMessage = scrollToNext => {\r\n        const { chatId, filter } = this.props;\r\n        if (filter) return;\r\n\r\n        const { prevScrollTop } = this;\r\n        if (prevScrollTop === null) {\r\n            // console.log('[pin] handleScroll 3.1');\r\n            return;\r\n        }\r\n        // const { prevScrollTop } = this;\r\n        // if (prevScrollTop === null) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        if (!media) return;\r\n        if (!media.pinned) return;\r\n        if (media.pinned.length <= 1) return;\r\n\r\n        const messages = [];\r\n        const items = itemsInView(this.listRef, this.itemsRef);\r\n        for (let i = 0; i < items.length; i++) {\r\n            const messageWrapper = this.messages[items[i]];\r\n            if (messageWrapper) {\r\n                const message = messageWrapper;\r\n                const { chatId, messageId, messageIds } = message.props;\r\n                if (messageId) {\r\n                    messages.push({ chatId, messageId });\r\n                } else if (messageIds) {\r\n                    for (let j = 0; j < messageIds.length; j++) {\r\n                        messages.push({ chatId, messageId: messageIds[j] });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!messages) return;\r\n        if (messages.length <= 1) return;\r\n\r\n        const minId = messages[0].messageId;\r\n        const maxId = messages[messages.length - 1].messageId;\r\n\r\n        let id = 0;\r\n        for (let i = 0; i < media.pinned.length; i++) {\r\n            const pinned = media.pinned[i];\r\n            if (pinned.id >= minId && pinned.id <= maxId) {\r\n                id = pinned.id;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!id) {\r\n            const pinnedMinId = media.pinned[media.pinned.length - 1].id;\r\n            const pinnedMaxId = media.pinned[0].id\r\n\r\n            if (pinnedMaxId < minId) {\r\n                id = pinnedMaxId;\r\n            } else if (pinnedMinId > maxId) {\r\n                id = pinnedMinId;\r\n            }\r\n        }\r\n\r\n        const { clickedPinned, currentPinned } = MessageStore;\r\n        // console.log('[pin] handleScroll 3', { id, clickedPinned, currentPinned, scrollToNext, prevScrollTop: this.prevScrollTop });\r\n        if (id && (!currentPinned || currentPinned.chatId === chatId && currentPinned.id !== id)) {\r\n\r\n\r\n            if (scrollToNext && clickedPinned && clickedPinned.chatId === chatId && clickedPinned.id < id) {\r\n                // console.log('[pin] handleScroll 3.2');\r\n                return;\r\n            }\r\n\r\n            // console.log('[pin] handleScroll 4', { chatId, id });\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateCurrentPinnedMessage', chatId, messageId: id });\r\n        } else {\r\n            // console.log('[pin] handleScroll 3.3');\r\n        }\r\n    };\r\n\r\n    updateScrollDownVisibility = () => {\r\n        const { scrollDownVisible, replyHistory, history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\r\n            if (this.hasLastMessage() && scrollDownVisible) {\r\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\r\n                    this.setState({\r\n                        scrollDownVisible: false,\r\n                        replyHistory: []\r\n                    });\r\n                } else if (!replyHistory.length) {\r\n                    this.setState({\r\n                        scrollDownVisible: false\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            if (!scrollDownVisible) {\r\n                this.setState({ scrollDownVisible: true });\r\n            }\r\n        }\r\n\r\n        this.prevHistory = history;\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] handleScroll\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        const scrollToNext = this.prevScrollTop > list.scrollTop;\r\n\r\n        this.updateItemsInView();\r\n\r\n        if (!this.cancelUpdatePinnedMessage) {\r\n            this.updatePinnedMessage(scrollToNext);\r\n        }\r\n\r\n        this.updateScrollDownVisibility();\r\n\r\n        if (this.prevScrollTop !== null) {\r\n            if (scrollToNext && list.scrollTop <= SCROLL_PRECISION) {\r\n                this.onLoadNext();\r\n            }\r\n\r\n            if (!scrollToNext && (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION)) {\r\n                this.onLoadPrevious();\r\n            }\r\n        }\r\n\r\n        this.prevScrollTop = list.scrollTop;\r\n    };\r\n\r\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\r\n        const { chatId, messageId } = this.props;\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\r\n            scrollTop: 0,\r\n            scrollHeight: 0,\r\n            offsetHeight: 0\r\n        };\r\n        // console.log('[pin] handleScrollBehavior', scrollBehavior);\r\n\r\n        // console.log(\r\n        //     `[ml] handleScrollBehavior\r\n        //     scrollBehavior=${scrollBehavior}\r\n        //     snapshot.scrollTop=${scrollTop}\r\n        //     snapshot.offsetHeight=${offsetHeight}\r\n        //     snapshot.scrollHeight=${scrollHeight}`\r\n        // );\r\n\r\n        switch (scrollBehavior) {\r\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\r\n                this.scrollToBottom();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\r\n                this.scrollToMessage();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\r\n                this.scrollToUnread();\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\r\n                this.scrollToPosition(position);\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\r\n                this.keepScrollPosition(snapshot);\r\n                break;\r\n            }\r\n            case ScrollBehaviorEnum.NONE: {\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    keepScrollPosition = snapshot => {\r\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `[ml] keepScrollPosition before\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.scrollHeight=${list.scrollHeight}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     snapshot.scrollTop=${snapshot.scrollTop}\r\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\r\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\r\n        // );\r\n\r\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\r\n\r\n        // console.log(\r\n        //     `[ml] keepScrollPosition after\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.scrollHeight=${list.scrollHeight}\r\n        //     list.offsetHeight=${list.offsetHeight}`\r\n        // );\r\n    };\r\n\r\n    scrollToUnread = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToUnread before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            let itemComponent = this.itemsMap.get(i);\r\n            let item = ReactDOM.findDOMNode(itemComponent);\r\n            if (item) {\r\n                if (itemComponent.props.showUnreadSeparator) {\r\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToUnread after\r\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        if (!scrolled) {\r\n            this.scrollToBottom();\r\n        }\r\n    };\r\n\r\n    scrollToPosition = position => {\r\n        // console.log('[scroll] scrollToPosition', this.props.chatId, position);\r\n        const { messageId, offset } = position;\r\n        const { history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            const itemComponent = this.itemsMap.get(i);\r\n            const node = ReactDOM.findDOMNode(itemComponent);\r\n            if (node) {\r\n                if (itemComponent.props.messageId === messageId) {\r\n                    list.scrollTop = node.offsetTop - offset;\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    scrollToMessage = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToMessage before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`,\r\n        //     this.itemsMap\r\n        // );\r\n\r\n        let scrolled = false;\r\n        for (let i = 0; i < history.length; i++) {\r\n            const itemComponent = this.itemsMap.get(i);\r\n            const node = ReactDOM.findDOMNode(itemComponent);\r\n            if (node) {\r\n                if (itemComponent.props.messageId === messageId\r\n                    || itemComponent.props.messageIds && itemComponent.props.messageIds.indexOf(messageId) !== -1) {\r\n                    if (list.offsetHeight < node.offsetHeight) {\r\n                        // scroll to the message top\r\n                        list.scrollTop = node.offsetTop;\r\n                    } else {\r\n                        // scroll message to the center of screen\r\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\r\n                    }\r\n                    scrolled = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!scrolled) {\r\n            this.handleSelectChat(chatId, chatId, messageId, messageId);\r\n        }\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToMessage after\r\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        // if (!scrolled) {\r\n        //     this.scrollToBottom();\r\n        // }\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        const { chatId, messageId } = this.props;\r\n        const list = this.listRef.current;\r\n\r\n        // console.log(\r\n        //     `MessagesList.scrollToBottom before\r\n        //     chatId=${chatId} messageId=${messageId}\r\n        //     list.scrollTop=${list.scrollTop}\r\n        //     list.offsetHeight=${list.offsetHeight}\r\n        //     list.scrollHeight=${list.scrollHeight}`\r\n        // );\r\n\r\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\r\n        if (nextScrollTop !== list.scrollTop) {\r\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\r\n\r\n            // console.log(\r\n            //     `MessagesList.scrollToBottom after\r\n            // chatId=${chatId} messageId=${messageId}\r\n            // list.scrollTop=${list.scrollTop}\r\n            // list.offsetHeight=${list.offsetHeight}\r\n            // list.scrollHeight=${list.scrollHeight}`\r\n            // );\r\n        } else {\r\n            // console.log(\r\n            //     `MessagesList.scrollToBottom after (no changes)\r\n            // chatId=${chatId} messageId=${messageId}\r\n            // list.scrollTop=${list.scrollTop}\r\n            // list.offsetHeight=${list.offsetHeight}\r\n            // list.scrollHeight=${list.scrollHeight}`\r\n            // );\r\n        }\r\n    };\r\n\r\n    getRequest = (chatId, fromMessageId, offset, limit) => {\r\n        const { filter } = this.props;\r\n\r\n        if (filter) {\r\n            if (fromMessageId === 0 && offset === 0 && limit === MESSAGE_SLICE_LIMIT) {\r\n                const media = MessageStore.getMedia(chatId);\r\n                if (media && media.pinned && media.pinned.length > 0) {\r\n                    return Promise.resolve({\r\n                        '@type': 'messages',\r\n                        messages: [...media.pinned]\r\n                    });\r\n                }\r\n            }\r\n\r\n            return TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                from_message_id: fromMessageId,\r\n                offset,\r\n                limit,\r\n                filter,\r\n                sender_user_id: null,\r\n                query: null\r\n            });\r\n        }\r\n\r\n        return TdLibController.send({\r\n            '@type': 'getChatHistory',\r\n            chat_id: chatId,\r\n            from_message_id: fromMessageId,\r\n            offset,\r\n            limit\r\n        });\r\n    };\r\n\r\n    scrollToStart = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { history } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const hasLastMessage = history.some(x => x.chat_id === chatId && chat && chat.last_message && chat.last_message.id === x.id);\r\n        if (hasLastMessage) {\r\n            this.scrollToBottom();\r\n        } else {\r\n            this.handleSelectChat(chatId, chatId, 0, messageId);\r\n        }\r\n    };\r\n\r\n    handleListDragEnter = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const { chatId } = this.props;\r\n        if (!canSendMediaMessages(chatId)) return;\r\n\r\n        if (!event.dataTransfer) return;\r\n        if (!event.dataTransfer.types.some(x => x === 'Files')) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateDragging',\r\n            dragging: true,\r\n            dataTransfer: event.dataTransfer\r\n        });\r\n    };\r\n\r\n    handleScrollDownClick = event => {\r\n        const { replyHistory } = this.state;\r\n\r\n        if (replyHistory.length > 0) {\r\n            const lastReply = replyHistory.pop();\r\n            if (lastReply) {\r\n                const { chatId, messageId } = lastReply;\r\n                if (chatId === this.props.chatId) {\r\n                    openChat(chatId, messageId);\r\n                }\r\n            }\r\n        } else {\r\n            this.scrollToStart();\r\n        }\r\n    };\r\n\r\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\r\n        if (!message) return false;\r\n\r\n        const { chat_id, date, is_outgoing, sender, content, forward_info } = message;\r\n\r\n        if (isFirst) {\r\n            return true;\r\n        }\r\n\r\n        if (isFirstUnread) {\r\n            return true;\r\n        }\r\n\r\n        if (isChannelChat(chat_id)) {\r\n            return true;\r\n        }\r\n\r\n        return (\r\n            prevMessage &&\r\n            (isServiceMessage(prevMessage) ||\r\n                prevMessage.content['@type'] === 'messageSticker' ||\r\n                prevMessage.content['@type'] === 'messageVideoNote' ||\r\n                !senderEquals(sender, prevMessage.sender) ||\r\n                is_outgoing !== prevMessage.is_outgoing ||\r\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\r\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\r\n        );\r\n    }\r\n\r\n    showMessageDate(message, prevMessage, isFirst) {\r\n        if (isFirst) {\r\n            return true;\r\n        }\r\n\r\n        const date = new Date(message.date * 1000);\r\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\r\n\r\n        if (\r\n            date.getFullYear() !== prevDate.getFullYear() ||\r\n            date.getMonth() !== prevDate.getMonth() ||\r\n            date.getDate() !== prevDate.getDate()\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        const { chatId, filter } = this.props;\r\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\r\n\r\n        // console.log('[ml] render ', history);\r\n\r\n        this.itemsMap.clear();\r\n\r\n        if (clearHistory) {\r\n            this.messages = null;\r\n        } else {\r\n            this.messages = [];\r\n            for (let i = 0; i < history.length; i++) {\r\n                const message = history[i];\r\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\r\n                let albumAdded = false;\r\n                if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto')) {\r\n                    const album = [message];\r\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\r\n                        if (history[j].media_album_id === media_album_id) {\r\n                            album.push(history[j]);\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (album.length > 1) {\r\n                        const x = message;\r\n                        const prevMessage = i > 0 ? history[i - 1] : null;\r\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\r\n\r\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\r\n\r\n                        const isFirstUnread = separatorMessageId === x.id;\r\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\r\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\r\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\r\n\r\n                        const showTail = !nextMessage\r\n                            || isServiceMessage(nextMessage)\r\n                            || nextMessage.content['@type'] === 'messageSticker'\r\n                            || nextMessage.content['@type'] === 'messageVideoNote'\r\n                            || !senderEquals(x.sender, nextMessage.sender)\r\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\r\n                            || x.is_outgoing !== nextMessage.is_outgoing\r\n                            || nextShowTitle;\r\n\r\n                        this.messages.push((\r\n                            <Album\r\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\r\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\r\n                                chatId={chat_id}\r\n                                messageIds={album.map(x => x.id)}\r\n                                showTitle={showTitle}\r\n                                showTail={showTail}\r\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />));\r\n                        i += (album.length - 1);\r\n                        albumAdded = true;\r\n                    }\r\n                } else if (media_album_id !== '0' && !ttl && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio')) {\r\n                    const album = [message];\r\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\r\n                        if (history[j].media_album_id === media_album_id) {\r\n                            album.push(history[j]);\r\n                        } else {\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (album.length > 1) {\r\n                        const x = message;\r\n                        const prevMessage = i > 0 ? history[i - 1] : null;\r\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\r\n\r\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\r\n\r\n                        const isFirstUnread = separatorMessageId === x.id;\r\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\r\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\r\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\r\n\r\n                        const showTail = !nextMessage\r\n                            || isServiceMessage(nextMessage)\r\n                            || nextMessage.content['@type'] === 'messageSticker'\r\n                            || nextMessage.content['@type'] === 'messageVideoNote'\r\n                            || !senderEquals(x.sender, nextMessage.sender)\r\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\r\n                            || x.is_outgoing !== nextMessage.is_outgoing\r\n                            || nextShowTitle;\r\n\r\n                        this.messages.push((\r\n                            <DocumentAlbum\r\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\r\n                                ref={el => album.forEach((x, index) => { this.itemsMap.set(i + index, el) })}\r\n                                chatId={chat_id}\r\n                                messageIds={album.map(x => x.id)}\r\n                                showTitle={showTitle}\r\n                                showTail={showTail}\r\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />));\r\n                        i += (album.length - 1);\r\n                        albumAdded = true;\r\n                    }\r\n                }\r\n\r\n                if (!albumAdded) {\r\n                    /// history[4] id=5 prev\r\n                    /// history[5] id=6 current\r\n                    /// history[6] id=7 next\r\n                    /// ...\r\n                    /// history[9] id=10\r\n\r\n                    const x = message;\r\n                    const prevMessage = i > 0 ? history[i - 1] : null;\r\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\r\n\r\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\r\n\r\n                    let m = null;\r\n                    if (isServiceMessage(x)) {\r\n                        m = (\r\n                            <ServiceMessage\r\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\r\n                                ref={el => this.itemsMap.set(i, el)}\r\n                                chatId={x.chat_id}\r\n                                messageId={x.id}\r\n                                showUnreadSeparator={separatorMessageId === x.id}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />\r\n                        );\r\n                    } else {\r\n                        const isFirstUnread = separatorMessageId === x.id;\r\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\r\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\r\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\r\n\r\n                        const showTail = !nextMessage\r\n                            || isServiceMessage(nextMessage)\r\n                            || nextMessage.content['@type'] === 'messageSticker'\r\n                            || nextMessage.content['@type'] === 'messageVideoNote'\r\n                            || !senderEquals(x.sender, nextMessage.sender)\r\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\r\n                            || x.is_outgoing !== nextMessage.is_outgoing\r\n                            || nextShowTitle;\r\n\r\n                        m = (\r\n                            <Message\r\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\r\n                                ref={el => this.itemsMap.set(i, el)}\r\n                                chatId={x.chat_id}\r\n                                messageId={x.id}\r\n                                sendingState={x.sending_state}\r\n                                showTitle={showTitle}\r\n                                showTail={showTail}\r\n                                showUnreadSeparator={separatorMessageId === x.id}\r\n                                showDate={showDate}\r\n                                source={filter ? 'pinned' : 'chat'}\r\n                            />\r\n                        );\r\n                    }\r\n\r\n                    this.messages.push(m);\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div\r\n                className={classNames('messages-list', {\r\n                    'messages-list-selection-active': selectionActive\r\n                })}\r\n                onDragEnter={this.handleListDragEnter}>\r\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\r\n                    <div className='messages-list-top' />\r\n                    <div ref={this.itemsRef} className='messages-list-items'>\r\n                        {this.messages}\r\n                    </div>\r\n                </div>\r\n                <ActionBar chatId={chatId} />\r\n                <Placeholder />\r\n                {scrollDownVisible && (\r\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\r\n                )}\r\n                <FilesDropTarget />\r\n                <StickersHint />\r\n                {/*<InputBoxHints />*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMessagesList.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number,\r\n    options: PropTypes.object,\r\n    filter: PropTypes.object\r\n};\r\n\r\nexport default MessagesList;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport classNames from 'classnames';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIcon from '../../Assets/Icons/Back';\r\nimport HeaderCommand from './HeaderCommand';\r\nimport { clearSelection, closePinned } from '../../Actions/Client';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './PinnedMessagesHeader.css'\r\n\r\nclass PinnedMessagesHeader extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const media = MessageStore.getMedia(props.chatId);\r\n\r\n        this.state = {\r\n            selectedCount: MessageStore.selectedItems.size,\r\n            pinnedCount: media && media.pinned.length ? media.pinned.length : 0\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { selectedCount, pinnedCount } = this.state;\r\n\r\n        if (nextState.selectedCount !== selectedCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.pinnedCount !== pinnedCount) {\r\n            return true;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.on('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\r\n        MessageStore.off('updateMessageIsPinned', this.onUpdateMessageIsPinned);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n    }\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\r\n\r\n        this.setState({\r\n            pinnedCount\r\n        });\r\n    };\r\n\r\n    onUpdateMessageIsPinned = update => {\r\n        const { chatId } = this.props;\r\n        const { chat_id } = update;\r\n        if (chatId !== chat_id) return;\r\n\r\n        const media = MessageStore.getMedia(chatId);\r\n        const pinnedCount = media && media.pinned.length ? media.pinned.length : 0\r\n\r\n        this.setState({\r\n            pinnedCount\r\n        });\r\n    };\r\n\r\n    onClientUpdateMessageSelected = update => {\r\n        this.setState({\r\n            selectedCount: MessageStore.selectedItems.size\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        const { selectedCount } = this.state;\r\n        if (selectedCount > 0) {\r\n            clearSelection();\r\n        }\r\n\r\n        closePinned();\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { selectedCount, pinnedCount } = this.state;\r\n\r\n        let title = t('PinnedMessages');\r\n        if (pinnedCount === 1) {\r\n            title = t('PinnedMessage');\r\n        } else if (pinnedCount > 1) {\r\n            title = `${pinnedCount} ${t('PinnedMessages')}`;\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('header-details', { 'header-details-selection': selectedCount > 0 })}>\r\n                <IconButton\r\n                    className='header-left-button main-menu-button'\r\n                    onClick={this.handleClose}>\r\n                    <ArrowBackIcon />\r\n                </IconButton>\r\n                <div className='header-details-content'>\r\n                    <HeaderCommand count={selectedCount}/>\r\n                    <div className={classNames('header-status', 'grow')}>\r\n                        <span className='header-status-content'>{title}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nPinnedMessagesHeader.propTypes = {\r\n    chatId: PropTypes.number\r\n};\r\n\r\nexport default withTranslation()(PinnedMessagesHeader);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FooterCommand from './FooterCommand';\r\nimport MessagesList from './MessagesList';\r\nimport PinnedMessagesHeader from './PinnedMessagesHeader';\r\nimport { requestUnpinMessage } from '../../Actions/Client';\r\nimport { canPinMessages } from '../../Utils/Chat';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './PinnedMessages.css';\r\n\r\nclass PinnedMessages extends React.Component {\r\n\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { prevChatId } = state;\r\n        const { chatId } = props;\r\n        if (prevChatId !== chatId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                opened: false\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        MessageStore.on('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\r\n        MessageStore.on('clientUpdateClosePinned', this.onClientUpdateClosePinned);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        MessageStore.off('clientUpdateOpenPinned', this.onClientUpdateOpenPinned);\r\n        MessageStore.off('clientUpdateClosePinned', this.onClientUpdateClosePinned);\r\n    }\r\n\r\n    onClientUpdateOpenPinned = update => {\r\n        const { chatId: currentChatId } = this.props;\r\n        const { chatId } = update;\r\n\r\n        if (currentChatId !== chatId) return;\r\n\r\n        this.setState({\r\n            opened: true\r\n        });\r\n    };\r\n\r\n    onClientUpdateClosePinned = update => {\r\n        this.setState({\r\n            opened: false\r\n        });\r\n    };\r\n\r\n    handleUnpinAll = async () => {\r\n        const { chatId } = this.props;\r\n\r\n        requestUnpinMessage(chatId, null);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const { opened } = this.state;\r\n        if (!opened) return null;\r\n\r\n        const unpinAllTitle = canPinMessages(chatId) ? t('UnpinAllMessages') : t('HidePinnedMessages');\r\n\r\n        return (\r\n            <div className='pinned-messages'>\r\n                <div className='pinned-messages-wrapper'>\r\n                    <div className='dialog-background'/>\r\n                    <div className='dialog-details-wrapper'>\r\n                        <PinnedMessagesHeader chatId={chatId} />\r\n                        <MessagesList chatId={chatId} filter={{ '@type': 'searchMessagesFilterPinned' }}/>\r\n                        <FooterCommand command={unpinAllTitle} onCommand={this.handleUnpinAll} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        // return (\r\n        //     <SidebarPage open={opened} timeout={250} onClose={this.handleClose}>\r\n        //\r\n        //     </SidebarPage>\r\n        // );\r\n    }\r\n}\r\n\r\nPinnedMessages.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(PinnedMessages);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { copy } from '../../Utils/Text';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { withSnackbar } from 'notistack';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport MoreIcon from '../../Assets/Icons/More';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { forward } from '../../Actions/Client';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\r\nimport OptionStore from '../../Stores/OptionStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass ShareStickerSetButton extends React.Component {\r\n    state = {\r\n        anchorEl: null\r\n    };\r\n\r\n    handleMenuClick = event => {\r\n        this.handleOpen(event.currentTarget);\r\n    };\r\n\r\n    handleOpen = anchorEl => {\r\n        this.setState({ anchorEl });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleCopyLink = () => {\r\n        this.handleClose();\r\n\r\n        const { t } = this.props;\r\n\r\n        const link = this.getStickersLink(StickerStore.stickerSet);\r\n        if (!link) return;\r\n\r\n        copy(link);\r\n\r\n        this.handleScheduledAction(t('LinkCopied'));\r\n    };\r\n\r\n    getStickersLink = stickerSet => {\r\n        if (!stickerSet) return '';\r\n\r\n        const { name } = stickerSet;\r\n        if (!name) return '';\r\n\r\n        const telegramUrlOption = OptionStore.get('t_me_url');\r\n\r\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\r\n    };\r\n\r\n    handleScheduledAction = message => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n\r\n        const snackKey = enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='close'\r\n                    aria-label='Close'\r\n                    color='inherit'\r\n                    className='notification-close-button'\r\n                    onClick={() => closeSnackbar(snackKey)}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handleShare = () => {\r\n        this.handleClose();\r\n\r\n        const link = this.getStickersLink(StickerStore.stickerSet);\r\n        if (!link) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSet',\r\n            stickerSet: null\r\n        });\r\n\r\n        const inputMessageContent = {\r\n            '@type': 'inputMessageText',\r\n            text: {\r\n                '@type': 'formattedText',\r\n                text: link,\r\n                entities: null\r\n            },\r\n            disable_web_page_preview: false,\r\n            clear_draft: false\r\n        };\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    render() {\r\n        const { t, className } = this.props;\r\n        const { anchorEl } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <IconButton\r\n                    className={className}\r\n                    aria-label='Share'\r\n                    open={Boolean(anchorEl)}\r\n                    onClick={this.handleMenuClick}>\r\n                    <MoreIcon />\r\n                </IconButton>\r\n                <Menu\r\n                    id='sticker-set-menu'\r\n                    anchorEl={anchorEl}\r\n                    open={Boolean(anchorEl)}\r\n                    getContentAnchorEl={null}\r\n                    disableAutoFocusItem\r\n                    disableEnforceFocus={true}\r\n                    disableRestoreFocus={true}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right'\r\n                    }}\r\n                    onClose={this.handleClose}>\r\n                    <MenuItem onClick={this.handleCopyLink}>\r\n                        <ListItemIcon>\r\n                            <LinkIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('CopyLink')} />\r\n                    </MenuItem>\r\n                    <MenuItem onClick={this.handleShare}>\r\n                        <ListItemIcon>\r\n                            <ShareIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={t('StickersShare')} />\r\n                    </MenuItem>\r\n                </Menu>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nShareStickerSetButton.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withSnackbar\r\n);\r\n\r\nexport default enhance(ShareStickerSetButton);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport ShareStickerSetButton from './ShareStickerSetButton';\r\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\r\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\r\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport StickerStore from '../../Stores/StickerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './StickerSetDialog.css';\r\n\r\nclass StickerSetDialog extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.contentRef = React.createRef();\r\n\r\n        this.state = {\r\n            stickerSet: StickerStore.stickerSet,\r\n            stickerId: 0,\r\n            scroll: false,\r\n            scrollTop: false,\r\n            scrollBottom: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\r\n\r\n        if (stickerSet !== nextState.stickerSet) {\r\n            return true;\r\n        }\r\n\r\n        if (sticker !== nextState.sticker) {\r\n            return true;\r\n        }\r\n\r\n        if (scroll !== nextState.scroll) {\r\n            return true;\r\n        }\r\n\r\n        if (scrollTop !== nextState.scrollTop) {\r\n            return true;\r\n        }\r\n\r\n        if (scrollBottom !== nextState.scrollBottom) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\r\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\r\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\r\n    }\r\n\r\n    handleUpdateInstalledStickerSets = update => {\r\n        const { stickerSet } = StickerStore;\r\n\r\n        this.setState({ stickerSet });\r\n    };\r\n\r\n    handleClientUpdateStickerSet = update => {\r\n        const { stickerSet } = update;\r\n\r\n        this.setState({ stickerSet }, () => {\r\n            setTimeout(() => {\r\n                this.handleScroll();\r\n            }, 0);\r\n        });\r\n\r\n        if (stickerSet) {\r\n            const store = FileStore.getStore();\r\n            loadStickerSetContent(store, stickerSet);\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerSet',\r\n            stickerSet: null\r\n        });\r\n    };\r\n\r\n    handleDone = () => {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return;\r\n\r\n        const { is_installed } = stickerSet;\r\n\r\n        TdLibController.send({\r\n            '@type': 'changeStickerSet',\r\n            set_id: stickerSet.id,\r\n            is_installed: !is_installed\r\n        });\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    loadPreviewContent = stickerId => {\r\n        const { stickerSet } = this.state;\r\n        const { stickers } = stickerSet;\r\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\r\n        if (!sticker) return;\r\n\r\n        const store = FileStore.getStore();\r\n        loadStickerContent(store, sticker, null);\r\n\r\n        const preloadStickers = this.getNeighborStickers(stickerId);\r\n        preloadStickers.forEach(x => {\r\n            loadStickerContent(store, x, null);\r\n        });\r\n    };\r\n\r\n    getNeighborStickers = stickerId => {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return [];\r\n\r\n        const { stickers } = stickerSet;\r\n        if (!stickers) return [];\r\n\r\n        const indexes = [];\r\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        if (index === -1) return [];\r\n\r\n        const STICKERS_PER_ROW = 5;\r\n        const row = Math.floor(index / STICKERS_PER_ROW);\r\n        const column = index % STICKERS_PER_ROW;\r\n\r\n        const prevRow = row - 1;\r\n        const nextRow = row + 1;\r\n        const prevColumn = column - 1;\r\n        const nextColumn = column + 1;\r\n\r\n        if (prevRow >= 0) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\r\n            }\r\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\r\n            if (nextColumn < STICKERS_PER_ROW) {\r\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        if (prevColumn >= 0) {\r\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\r\n        }\r\n        if (nextColumn < STICKERS_PER_ROW) {\r\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\r\n        }\r\n\r\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\r\n            if (prevColumn >= 0) {\r\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\r\n            }\r\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\r\n            if (nextColumn < STICKERS_PER_ROW) {\r\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\r\n            }\r\n        }\r\n\r\n        return indexes.map(i => stickers[i]);\r\n    };\r\n\r\n    // handleMouseOver = event => {\r\n    //     const stickerId = Number(event.target.dataset.stickerId);\r\n    //     if (!stickerId) return;\r\n    //\r\n    //     if (!this.mouseDown) return;\r\n    //\r\n    //     this.setState({ stickerId });\r\n    //     this.loadPreviewContent(stickerId);\r\n    // };\r\n\r\n    // handleMouseDown = event => {\r\n    //     const stickerId = Number(event.target.dataset.stickerId);\r\n    //     if (!stickerId) return;\r\n    //\r\n    //     this.setState({ stickerId });\r\n    //     this.loadPreviewContent(stickerId);\r\n    //\r\n    //     this.mouseDown = true;\r\n    //     document.addEventListener('mouseup', this.handleMouseUp);\r\n    //\r\n    //     event.preventDefault();\r\n    //     event.stopPropagation();\r\n    //     return false;\r\n    // };\r\n\r\n    getSticker(stickerId) {\r\n        const { stickerSet } = this.state;\r\n        if (!stickerSet) return null;\r\n\r\n        const { stickers } = stickerSet;\r\n\r\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\r\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\r\n    }\r\n\r\n    handleMouseUp = () => {\r\n        const sticker = null;\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.mouseDown = false;\r\n        document.removeEventListener('mouseup', this.handleMouseUp);\r\n    };\r\n\r\n    handleMouseEnter = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        if (!this.mouseDown) return;\r\n\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n    };\r\n\r\n    handleMouseDown = event => {\r\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\r\n        const sticker = this.getSticker(stickerId);\r\n        if (!sticker) return;\r\n\r\n        this.setState({ sticker });\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateStickerPreview',\r\n            sticker\r\n        });\r\n        this.loadPreviewContent(stickerId);\r\n\r\n        this.mouseDown = true;\r\n        document.addEventListener('mouseup', this.handleMouseUp);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        return false;\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const content = this.contentRef.current;\r\n        if (!content) {\r\n            return;\r\n        }\r\n\r\n        const hasScroll = content.scrollHeight > content.offsetHeight;\r\n        const scrollTop = hasScroll && content.scrollTop === 0;\r\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\r\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\r\n\r\n        this.setState({\r\n            scrollTop,\r\n            scrollBottom,\r\n            scroll\r\n        });\r\n    }\r\n\r\n    handleInViewport = (fileId, elementRect) => {\r\n        const { current } = this.contentRef;\r\n        if (!current) return false;\r\n\r\n        const contentRect = current.getBoundingClientRect();\r\n        const top = elementRect.top - contentRect.top;\r\n        const bottom = elementRect.bottom - contentRect.bottom;\r\n        // below bottom edge\r\n        if (top > contentRect.height) {\r\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\r\n            return false;\r\n        }\r\n        // upper top edge\r\n        if (bottom < - contentRect.height) {\r\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\r\n            return false;\r\n        }\r\n\r\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\r\n        return true;\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\r\n        if (!stickerSet) return null;\r\n\r\n        const { title, stickers, is_installed } = stickerSet;\r\n\r\n        const items = stickers.map(x => (\r\n            <div\r\n                className='sticker-set-dialog-item'\r\n                key={x.sticker.id}\r\n                data-sticker-id={x.sticker.id}\r\n                onMouseEnter={this.handleMouseEnter}\r\n                onMouseDown={this.handleMouseDown}>\r\n                <Sticker\r\n                    key={x.sticker.id}\r\n                    className='sticker-set-dialog-item-sticker'\r\n                    sticker={x}\r\n                    autoplay={true}\r\n                    blur={false}\r\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\r\n                    preview\r\n                    source={StickerSourceEnum.STICKER_SET}\r\n                    inViewportFunc={this.handleInViewport}\r\n                />\r\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\r\n            </div>\r\n        ));\r\n\r\n        return (\r\n            <Dialog\r\n                className={classNames(\r\n                    'sticker-set-dialog',\r\n                    { 'sticker-set-dialog-scroll': scroll },\r\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\r\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\r\n                )}\r\n                open\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                aria-labelledby='sticker-set-dialog-title-text'\r\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\r\n                <DialogTitle\r\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\r\n                    disableTypography>\r\n                    <IconButton\r\n                        aria-label='Close'\r\n                        onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </IconButton>\r\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\r\n                        {title}\r\n                    </Typography>\r\n                    <ShareStickerSetButton />\r\n                </DialogTitle>\r\n                <DialogContent\r\n                    ref={this.contentRef}\r\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\r\n                    onMouseOver={this.handleMouseOver}\r\n                    onMouseOut={this.handleMouseOut}\r\n                    onScroll={this.handleScroll}>\r\n                    {items}\r\n                </DialogContent>\r\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\r\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\r\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\r\n                    </Button>\r\n                </DialogActions>\r\n                {<StickerPreview sticker={sticker} />}\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nStickerSetDialog.propTypes = {};\r\n\r\nexport default withTranslation()(StickerSetDialog);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { closeChatSelect } from '../../Actions/Message';\r\nimport './SelectChatPlaceholder.css';\r\n\r\nclass SelectChatPlaceholder extends React.Component {\r\n\r\n    handleClick = () => {\r\n        closeChatSelect();\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n\r\n        return (\r\n            <div className='switch-inline-placeholder' onClick={this.handleClick}>\r\n                <div className='switch-inline-text'>{t('SelectChat') + '...'}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nSelectChatPlaceholder.propTypes = {};\r\n\r\nexport default withTranslation()(SelectChatPlaceholder);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React, { Component } from 'react';\r\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\nimport HeaderPlayer from '../Player/HeaderPlayer';\r\nimport MessagesList from './MessagesList';\r\nimport PinnedMessages from './PinnedMessages';\r\nimport StickerSetDialog from '../Popup/StickerSetDialog';\r\nimport SelectChatPlaceholder from './SelectChatPlaceholder';\r\nimport { getSrc } from '../../Utils/File';\r\nimport AppStore from '../../Stores/ApplicationStore';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './DialogDetails.css';\r\n\r\nclass DialogDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chatId: AppStore.getChatId(),\r\n            messageId: AppStore.getMessageId(),\r\n            selectedCount: 0,\r\n            wallpaper: null,\r\n            wallpaperSrc: null,\r\n            chatSelectOptions: null,\r\n            chatOpenOptions: null\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId, selectedCount, wallpaper, chatSelectOptions, chatOpenOptions } = this.state;\r\n        if (nextState.chatId !== chatId) {\r\n            return true;\r\n        }\r\n        if (nextState.messageId !== messageId) {\r\n            return true;\r\n        }\r\n        if (nextState.selectedCount !== selectedCount) {\r\n            return true;\r\n        }\r\n        if (nextState.wallpaper !== wallpaper) {\r\n            return true;\r\n        }\r\n        if (nextState.chatSelectOptions !== chatSelectOptions) {\r\n            return true;\r\n        }\r\n        if (nextState.chatOpenOptions !== chatOpenOptions) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.on('clientUpdateChatSelect', this.onClientUpdateChatSelect);\r\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\r\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\r\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\r\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\r\n        AppStore.off('clientUpdateChatSelect', this.onClientUpdateChatSelect);\r\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\r\n        ChatStore.on('clientUpdateClearOpenChatOptions', this.onClientUpdateClearOpenChatOptions);\r\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\r\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\r\n    }\r\n\r\n    onClientUpdateClearOpenChatOptions = update => {\r\n        this.setState({\r\n            chatOpenOptions: null\r\n        });\r\n    }\r\n\r\n    onClientUpdateChatSelect = update => {\r\n        const { options } = update;\r\n\r\n        this.setState({\r\n            chatSelectOptions: options\r\n        });\r\n    };\r\n\r\n    onClientUpdateDocumentBlob = update => {\r\n        const { wallpaper } = this.state;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { document: file } = document;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        if (this.thumbnailTime) {\r\n            if (this.thumbnailTime.wallpaper === wallpaper) {\r\n                const diff = new Date() - this.thumbnailTime.time;\r\n                if (diff < 250) {\r\n                    setTimeout(() => {\r\n                        this.forceUpdate();\r\n                    }, 250);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateDocumentThumbnailBlob = update => {\r\n        const { wallpaper } = this.state;\r\n        if (!wallpaper) return;\r\n\r\n        const { document } = wallpaper;\r\n        if (!document) return;\r\n\r\n        const { thumbnail } = document;\r\n        if (!thumbnail) return;\r\n\r\n        const { file } = thumbnail;\r\n        if (!file) return;\r\n\r\n        const { fileId } = update;\r\n\r\n        if (file.id !== fileId) {\r\n            return;\r\n        }\r\n\r\n        this.thumbnailTime = {\r\n            wallpaper,\r\n            time: new Date()\r\n        };\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateChatBackground = update => {\r\n        const { wallpaper } = update;\r\n\r\n        this.thumbnailTime = {\r\n            wallpaper,\r\n            time: new Date()\r\n        };\r\n        this.setState({\r\n            wallpaper\r\n        });\r\n    };\r\n\r\n    onClientUpdateChatDetailsVisibility = update => {\r\n        this.forceUpdate();\r\n    };\r\n\r\n    onClientUpdateChatId = update => {\r\n        const { chatSelectOptions } = this.state;\r\n        const { nextChatId: chatId, nextMessageId: messageId, options: chatOpenOptions } = update;\r\n\r\n        this.setState({\r\n            chatId,\r\n            messageId,\r\n            chatOpenOptions,\r\n            chatSelectOptions: chatOpenOptions && chatOpenOptions.closeChatSelect ? null: chatSelectOptions\r\n        });\r\n    };\r\n\r\n    scrollToBottom = () => {\r\n        this.messagesList.scrollToBottom();\r\n    };\r\n\r\n    scrollToStart = () => {\r\n        this.messagesList.scrollToStart();\r\n    };\r\n\r\n    scrollToMessage = () => {\r\n        this.messagesList.scrollToMessage();\r\n    };\r\n\r\n    render() {\r\n        /*let groups = [];\r\n        if (this.props.history.length > 0){\r\n            let currentGroup = {\r\n                key: this.props.history[0].id,\r\n                date: this.props.history[0].date,\r\n                senderUserId: this.props.history[0].sender_user_id,\r\n                messages: [this.props.history[0]]\r\n            };\r\n\r\n            for (let i = 1; i < this.props.history.length; i++){\r\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\r\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\r\n                    && i % 20 !== 0){\r\n                    currentGroup.key += '_' + this.props.history[i].id;\r\n                    currentGroup.messages.push(this.props.history[i]);\r\n                }\r\n                else {\r\n                    groups.push(currentGroup);\r\n                    currentGroup = {\r\n                        key: this.props.history[i].id,\r\n                        date: this.props.history[i].date,\r\n                        senderUserId: this.props.history[i].sender_user_id,\r\n                        messages: [this.props.history[i]]\r\n                    };\r\n                }\r\n            }\r\n            groups.push(currentGroup);\r\n        }\r\n\r\n        this.groups = groups.map(x => {\r\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\r\n        });*/\r\n        const { chatId, messageId, chatOpenOptions, wallpaper, chatSelectOptions } = this.state;\r\n\r\n        let style = null;\r\n        let src = null;\r\n        if (wallpaper) {\r\n            const { document } = wallpaper;\r\n            if (document) {\r\n                const { thumbnail, document: file } = document;\r\n                if (file) {\r\n                    src = getSrc(file);\r\n                }\r\n\r\n                if (!src && thumbnail) {\r\n                    src = getSrc(thumbnail.file);\r\n                }\r\n            }\r\n\r\n            style = {\r\n                backgroundImage: src ? `url(${src})` : null\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='dialog-details' style={style}>\r\n                <div className='dialog-background'/>\r\n                <div className='dialog-details-wrapper'>\r\n                    <HeaderPlayer />\r\n                    <Header chatId={chatId} />\r\n                    <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} options={chatOpenOptions} />\r\n                    <Footer chatId={chatId} options={chatOpenOptions}/>\r\n                </div>\r\n                {chatSelectOptions && <SelectChatPlaceholder/>}\r\n                <PinnedMessages chatId={chatId}/>\r\n                <StickerSetDialog />\r\n                <ChatInfoDialog />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DialogDetails;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withSaveRef } from '../../Utils/HOC';\r\nimport { withIV } from './IVContext';\r\nimport { getPageBlock } from '../../Utils/InstantView';\r\nimport './Article.css';\r\n\r\nconst articleRefs = new Map();\r\n\r\nclass Article extends React.PureComponent {\r\n    render() {\r\n        const { forwardedRef, iv } = this.props;\r\n        if (!iv) return null;\r\n\r\n        const { page_blocks, is_rtl } = iv;\r\n        if (!page_blocks) return;\r\n\r\n        articleRefs.clear();\r\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\r\n\r\n        return (\r\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\r\n                {blocks}\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nArticle.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number\r\n};\r\n\r\nconst enhance = compose(\r\n    withSaveRef(),\r\n    withIV\r\n);\r\n\r\nexport { articleRefs };\r\n\r\nexport default enhance(Article);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\nimport React from 'react';\r\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\r\n\r\nexport default createSvgIcon(\r\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\r\n    'Left'\r\n);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaCaption.css';\r\n\r\nclass MediaCaption extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            top: false,\r\n            bottom: false\r\n        };\r\n\r\n        this.scrollRef = React.createRef();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { text } = this.props;\r\n        const { top, bottom } = this.state;\r\n\r\n        if (nextProps.text !== text) return true;\r\n        if (nextState.top !== top) return true;\r\n        if (nextState.bottom !== bottom) return true;\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleScroll();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { text } = this.props;\r\n\r\n        if (prevProps.text !== text) {\r\n            this.handleScroll();\r\n        }\r\n    }\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const scroll = this.scrollRef.current;\r\n        if (!scroll) return;\r\n\r\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\r\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\r\n\r\n        this.setState({\r\n            top,\r\n            bottom\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { text } = this.props;\r\n        const { top, bottom } = this.state;\r\n\r\n        return (\r\n            <div className='media-caption' onClick={this.handleClick}>\r\n                <div\r\n                    ref={this.scrollRef}\r\n                    className={classNames(\r\n                        'scrollbars-hidden',\r\n                        'media-caption-wrapper', {\r\n                            'media-caption-wrapper-top': top,\r\n                            'media-caption-wrapper-bottom': bottom,\r\n                            'media-caption-wrapper-both': !top && !bottom\r\n                        })}\r\n                    onScroll={this.handleScroll}>\r\n                    <div className='media-caption-text'>{text}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaCaption.propTypes = {\r\n    text: PropTypes.array\r\n};\r\n\r\nMediaCaption.defaultProps = {};\r\n\r\nexport default MediaCaption;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FileProgress from './FileProgress';\r\nimport MediaCaption from './MediaCaption';\r\nimport Caption from '../InstantView/Blocks/Caption';\r\nimport SafeLink from '../Additional/SafeLink';\r\nimport Player from '../Player/Player';\r\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\r\nimport { getThumb } from '../../Utils/Media';\r\nimport { isEmptyText } from '../../Utils/InstantView';\r\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\n\r\nclass InstantViewMediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.videoRef = React.createRef();\r\n\r\n        this.state = {};\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { media, size, caption, url } = props;\r\n\r\n        if (media !== state.prevMedia) {\r\n            const thumbnail = getViewerThumbnail(media);\r\n            const minithumbnail = getViewerMinithumbnail(media);\r\n\r\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\r\n            file = FileStore.get(file.id) || file;\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                const { video } = media;\r\n                if (video) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\r\n                }\r\n            }\r\n\r\n            return {\r\n                prevMedia: media,\r\n\r\n                speed: 1,\r\n                isPlaying: false,\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType,\r\n                thumbnail,\r\n                minithumbnail\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    onClientUpdatePictureInPicture = update => {\r\n        const { videoInfo } = update;\r\n        if (!videoInfo) return;\r\n\r\n        const { file } = this.state;\r\n        if (file.id !== videoInfo.fileId) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateInstantViewViewerContent',\r\n            content: null\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { src } = this.state;\r\n\r\n        if (prevState.src !== src) {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        }\r\n    }\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { fileId } = update;\r\n        const { media, size } = this.props;\r\n        const { file } = this.state;\r\n\r\n        if (file && file.id === fileId) {\r\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src: getSrc(file),\r\n                supportsStreaming,\r\n                mimeType\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaThumbnailBlob = update => {\r\n        const { fileId } = update;\r\n        const { thumbnail } = this.state;\r\n\r\n        if (thumbnail && thumbnail.file.id === fileId) {\r\n            this.forceUpdate();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { media, caption, url } = this.props;\r\n        if (!media) return null;\r\n\r\n        const {\r\n            width,\r\n            height,\r\n            file,\r\n            src,\r\n            mimeType,\r\n            thumbnail,\r\n            minithumbnail,\r\n            isPlaying,\r\n            supportsStreaming\r\n        } = this.state;\r\n        if (!file) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbnailSrc = getSrc(thumbnail);\r\n\r\n        let videoWidth = width;\r\n        let videoHeight = height;\r\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\r\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\r\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\r\n        videoWidth = w;\r\n        videoHeight = h;\r\n\r\n        let content = null;\r\n        const source = src ? <source src={src} type={mimeType}/> : null;\r\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\r\n\r\n        switch (media['@type']) {\r\n            case 'video': {\r\n                content = (\r\n                    <div className='media-viewer-content-wrapper'>\r\n                        <Player\r\n                            ref={this.videoRef}\r\n                            className='media-viewer-content-video-player'\r\n                            fileId={file.id}\r\n                            width={videoWidth}\r\n                            height={videoHeight}\r\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\r\n                            onPlay={() => {\r\n                                this.setState({ isPlaying: true });\r\n                            }}\r\n                        >\r\n                            {source}\r\n                        </Player>\r\n                        {!isPlaying && !supportsStreaming && thumb}\r\n                    </div>\r\n                );\r\n                break;\r\n            }\r\n            case 'animation': {\r\n                // content = (\r\n                //     <Animation\r\n                //         type='preview'\r\n                //         stretch={true}\r\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\r\n                //         animation={media}\r\n                //         onClick={this.handleContentClick}\r\n                //         showProgress={false}\r\n                //         style={{ borderRadius: 0 }}\r\n                //     />\r\n                // );\r\n\r\n                content = (\r\n                    <div className='media-viewer-content-wrapper'>\r\n                        <video\r\n                            ref={this.videoRef}\r\n                            className='media-viewer-content-video-player'\r\n                            onClick={this.handleContentClick}\r\n                            loop\r\n                            autoPlay\r\n                            width={videoWidth}\r\n                            height={videoHeight}\r\n                            onPlay={() => {\r\n                                this.setState({ isPlaying: true });\r\n                            }}\r\n                        >\r\n                            {source}\r\n                        </video>\r\n                        {!isPlaying && thumb}\r\n                    </div>\r\n                );\r\n                break;\r\n            }\r\n            default: {\r\n                content = (\r\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='media-viewer-content'>\r\n                {content}\r\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\r\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\r\n                    <MediaCaption\r\n                        text={\r\n                            <>\r\n                                <Caption text={caption.text} credit={caption.credit} />\r\n                                <SafeLink url={url} />\r\n                            </>\r\n                        }\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewMediaViewerContent.propTypes = {\r\n    media: PropTypes.object.isRequired,\r\n    size: PropTypes.number.isRequired,\r\n    caption: PropTypes.object,\r\n    url: PropTypes.string\r\n};\r\n\r\nexport default InstantViewMediaViewerContent;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaViewerButton.css';\r\n\r\nclass MediaViewerButton extends React.Component {\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { disabled, onClick } = this.props;\r\n\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { disabled, grow, children, className, style } = this.props;\r\n\r\n        const cx = classNames(\r\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\r\n            { grow: grow },\r\n            className\r\n        );\r\n\r\n        return (\r\n            <div className={cx} style={style} onClick={this.handleClick}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerButton.propTypes = {\r\n    disabled: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default MediaViewerButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MediaViewerFooterText.css';\r\n\r\nclass MediaViewerFooterText extends React.Component {\r\n    render() {\r\n        const { title, subtitle, style } = this.props;\r\n\r\n        return (\r\n            <div className='media-viewer-footer-text' style={style}>\r\n                <div className='media-viewer-footer-text-wrapper'>\r\n                    <span>{title}</span>\r\n                    {Boolean(subtitle) && (\r\n                        <span>\r\n                            &nbsp;\r\n                            {subtitle}\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerFooterText.propTypes = {\r\n    title: PropTypes.string,\r\n    subtitle: PropTypes.string\r\n};\r\n\r\nexport default MediaViewerFooterText;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport './MediaViewerFooterButton.css';\r\n\r\nclass MediaViewerFooterButton extends React.Component {\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { onClick, disabled } = this.props;\r\n\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { checked, children, disabled, title } = this.props;\r\n\r\n        return (\r\n            <div\r\n                className={classNames('media-viewer-footer-button', {\r\n                    'media-viewer-footer-button-checked': checked,\r\n                    'media-viewer-footer-button-disabled': disabled\r\n                })}\r\n                title={title}\r\n                onClick={this.handleClick}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerFooterButton.propTypes = {\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    checked: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n};\r\n\r\nexport default MediaViewerFooterButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SaveIcon from '../../Assets/Icons/Download';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './MediaViewerFooterButton.css';\r\n\r\nclass MediaViewerDownloadButton extends React.Component {\r\n    state = {  };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { fileId } = props;\r\n        const { prevPropsFileId } = state;\r\n\r\n        if (fileId !== prevPropsFileId) {\r\n            return {\r\n                prevPropsFileId: fileId,\r\n                fileId,\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.fileId !== this.props.chatId) {\r\n            this.checkFileLoaded();\r\n        }\r\n    }\r\n\r\n    checkFileLoaded() {\r\n        // console.log('[down] checkLoaded');\r\n        const { fileId } = this.props;\r\n        const blob = FileStore.getBlob(fileId);\r\n        if (blob) {\r\n            // console.log('[down] checkLoaded blob');\r\n            return;\r\n        }\r\n\r\n        const file = FileStore.get(fileId);\r\n        if (!file) {\r\n            // console.log('[down] checkLoaded file');\r\n            return;\r\n        }\r\n\r\n        const { local } = file;\r\n        if (!local) return;\r\n        if (!local.is_downloading_completed) return;\r\n\r\n        // console.log('[down] checkLoaded getLocal');\r\n        const store = FileStore.getStore();\r\n        FileStore.getLocalFile(store, file, null, () => {\r\n            // console.log('[down] checkLoaded getLocal complete');\r\n            this.setState({\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.checkFileLoaded();\r\n\r\n        FileStore.on('updateFile', this.onUpdateFile);\r\n\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('updateFile', this.onUpdateFile);\r\n\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n    }\r\n\r\n    onUpdateFile = update => {\r\n        const { fileId } = this.props;\r\n        const { file } = update;\r\n\r\n        if (file.id !== fileId) return;\r\n\r\n        if (file.local.is_downloading_completed) {\r\n            this.checkFileLoaded();\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { fileId } = this.state;\r\n\r\n        if (fileId === update.fileId) {\r\n            this.setState({\r\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\r\n            });\r\n        }\r\n    };\r\n\r\n    static saveDisabled = fileId => {\r\n        return !Boolean(FileStore.getBlob(fileId));\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.stopPropagation();\r\n\r\n        const { onClick } = this.props;\r\n        const { disabled } = this.state;\r\n        if (disabled) return;\r\n\r\n        onClick(event);\r\n    };\r\n\r\n    render() {\r\n        const { title, children, disabled: propsDisabled } = this.props;\r\n        const { disabled } = this.state;\r\n\r\n        return (\r\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\r\n                {children || <SaveIcon />}\r\n            </MediaViewerFooterButton>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerDownloadButton.propTypes = {\r\n    fileId: PropTypes.number.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool\r\n};\r\n\r\nexport default MediaViewerDownloadButton;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../../Utils/HOC';\r\nimport { withIV } from '../InstantView/IVContext';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\r\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\r\nimport { getInputMediaContent } from '../../Utils/Media';\r\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InstantViewMediaViewer.css';\r\n\r\nclass InstantViewMediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            index: -1,\r\n            hasPreviousMedia: false,\r\n            hasNextMedia: false,\r\n            blocks: []\r\n        };\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContent();\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        if (!blocks) return null;\r\n        if (index === -1) return null;\r\n\r\n        const block = blocks[index];\r\n        const media = getBlockMedia(block);\r\n        if (!media) return;\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n                this.handleClose();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowLeft': {\r\n                this.handleNext();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowRight': {\r\n                this.handlePrevious();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n\r\n        const isVideo = media['@type'] === 'video';\r\n        if (isVideo) {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\r\n        }\r\n    };\r\n\r\n    loadContent() {\r\n        const { iv, media } = this.props;\r\n\r\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\r\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\r\n\r\n        this.setState({\r\n            blocks,\r\n            index,\r\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\r\n            hasNextMedia: this.hasNextMedia(index, blocks)\r\n        });\r\n\r\n        preloadIVMediaViewerContent(index, blocks);\r\n    }\r\n\r\n    hasPreviousMedia(index, blocks) {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < blocks.length;\r\n    }\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        const nextIndex = index + 1;\r\n\r\n        if (!this.hasPreviousMedia(index, blocks)) return;\r\n\r\n        return this.loadMedia(nextIndex);\r\n    };\r\n\r\n    hasNextMedia(index, blocks) {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    }\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { index, blocks } = this.state;\r\n        const nextIndex = index - 1;\r\n\r\n        if (!this.hasNextMedia(index, blocks)) return;\r\n\r\n        return this.loadMedia(nextIndex);\r\n    };\r\n\r\n    loadMedia = index => {\r\n        const { blocks } = this.state;\r\n\r\n        if (index < 0) return false;\r\n        if (index >= blocks.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                index,\r\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\r\n                hasNextMedia: this.hasNextMedia(index, blocks)\r\n            }\r\n        );\r\n\r\n        preloadIVMediaViewerContent(index, blocks);\r\n        return true;\r\n    };\r\n\r\n    handleClose = () => {\r\n        setInstantViewViewerContent(null);\r\n\r\n        const { index, blocks } = this.state;\r\n        if (index !== -1) {\r\n            cancelPreloadIVMediaViewerContent(index, blocks);\r\n        }\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { media } = this.props;\r\n\r\n        const inputMessageContent = getInputMediaContent(media, null);\r\n        if (!inputMessageContent) return;\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { media } = this.props;\r\n\r\n        saveMedia(media, null);\r\n    };\r\n\r\n    handleWrapperMouseDown = event => {\r\n        this.mouseDownTarget = event.currentTarget;\r\n    }\r\n\r\n    handleWrapperClick = event => {\r\n        const { mouseDownTarget } = this;\r\n        this.mouseDownTarget = null;\r\n\r\n        if (event.currentTarget !== mouseDownTarget) return;\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    render() {\r\n        const { size, t } = this.props;\r\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\r\n        if (!blocks) return null;\r\n        if (index === -1) return null;\r\n\r\n        const block = blocks[index];\r\n        const media = getBlockMedia(block);\r\n        const caption = getBlockCaption(block);\r\n        const url = getBlockUrl(block);\r\n\r\n        const [width, height, file] = getViewerFile(media, size);\r\n\r\n        let title = '';\r\n        if (media['@type'] === 'photo') {\r\n            title = t('AttachPhoto');\r\n        }\r\n        if (media['@type'] === 'video') {\r\n            title = t('AttachVideo');\r\n        } else if (media['@type'] === 'animation') {\r\n            title = t('AttachGif');\r\n        }\r\n        const maxCount = blocks.length;\r\n\r\n        return (\r\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\r\n                <div className='media-viewer-footer'>\r\n                    <MediaViewerFooterText\r\n                        title={title}\r\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, maxCount) : null}\r\n                        style={{ marginLeft: 128 }}\r\n                    />\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\r\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                    <div className='media-viewer-content-column'>\r\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\r\n                    </div>\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewMediaViewer.propTypes = {\r\n    media: PropTypes.object.isRequired,\r\n    size: PropTypes.number.isRequired,\r\n    caption: PropTypes.object.isRequired\r\n};\r\n\r\nconst enhance = compose(\r\n    withTranslation(),\r\n    withIV\r\n);\r\n\r\nexport default enhance(InstantViewMediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactDOM from 'react-dom';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport Article from './Article';\r\nimport { articleRefs } from './Article';\r\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\r\nimport IVContext from './IVContext';\r\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport { itemsInView, throttle } from '../../Utils/Common';\r\nimport { getInnerBlocks } from '../../Utils/InstantView';\r\nimport { openInstantView } from '../../Actions/InstantView';\r\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\r\nimport { scrollTop } from '../../Utils/DOM';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { IV_PHOTO_SIZE } from '../../Constants';\r\nimport InstantViewStore from '../../Stores/InstantViewStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './InstantViewer.css';\r\n\r\nclass InstantViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.articleRef = React.createRef();\r\n        this.instantViewerRef = React.createRef();\r\n\r\n        this.state = {};\r\n\r\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.instantView !== state.prevInstantView) {\r\n            return {\r\n                prevInstantView: props.instantView,\r\n                hasPrev: InstantViewStore.hasPrev(),\r\n                hasScroll: false,\r\n                media: null,\r\n                caption: null,\r\n                url: null\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        const { instantView } = this.props;\r\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\r\n\r\n        if (instantView !== nextProps.instantView) {\r\n            return true;\r\n        }\r\n\r\n        if (hasScroll !== nextState.hasScroll) {\r\n            return true;\r\n        }\r\n\r\n        if (hasPrev !== nextState.hasPrev) {\r\n            return true;\r\n        }\r\n\r\n        if (media !== nextState.media) {\r\n            return true;\r\n        }\r\n\r\n        if (caption !== nextState.caption) {\r\n            return true;\r\n        }\r\n\r\n        if (url !== nextState.url) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mounted = true;\r\n        this.handleScroll();\r\n        this.scrollToBlock(this.props.block, 'smooth');\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\r\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\r\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\r\n    }\r\n\r\n    onClientUpdateInstantViewViewerContent = update => {\r\n        const { content } = update;\r\n        if (!content) {\r\n            this.setState({ media: null, caption: null, url: null });\r\n            return;\r\n        }\r\n\r\n        const { media, caption, url, instantView } = content;\r\n\r\n        if (this.props.instantView !== instantView) return;\r\n\r\n        this.setState({ media, caption, url });\r\n    };\r\n\r\n    onClientUpdateInstantViewUrl = async update => {\r\n        const { url } = update;\r\n        const active = InstantViewStore.getCurrent();\r\n        const { instantView, url: oldUrl } = this.props;\r\n\r\n        if (active !== instantView) return;\r\n\r\n        if (instantView && url.startsWith(oldUrl)) {\r\n            const hash = new URL(url).hash;\r\n            if (url.indexOf('#') === url.length - 1) {\r\n                this.scrollTop('smooth');\r\n\r\n                return;\r\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\r\n\r\n                return;\r\n            }\r\n        }\r\n\r\n        openInstantView(url);\r\n    };\r\n\r\n    scrollToBlock(block, behavior) {\r\n        if (!block) return false;\r\n\r\n        if (!articleRefs) return false;\r\n\r\n        const ref = articleRefs.get(block);\r\n        if (!ref) return false;\r\n\r\n        const element = ReactDOM.findDOMNode(ref);\r\n        return this.scrollToElement(element, behavior);\r\n    }\r\n\r\n    scrollToElement(element, behavior) {\r\n        if (!element) return false;\r\n\r\n        const details = [];\r\n        let finished = false;\r\n        let currentElement = element;\r\n        do {\r\n            currentElement = currentElement.parentNode;\r\n            if (currentElement) {\r\n                if (currentElement.nodeName === 'DETAILS') {\r\n                    details.push(currentElement);\r\n                } else if (currentElement.nodeName === 'ARTICLE') {\r\n                    finished = true;\r\n                }\r\n            } else {\r\n                finished = true;\r\n            }\r\n        } while (!finished);\r\n\r\n        details.forEach(x => (x.open = true));\r\n\r\n        element.scrollIntoView({\r\n            block: 'center',\r\n            behavior\r\n        });\r\n\r\n        return true;\r\n    }\r\n\r\n    scrollToHash(hash, behavior) {\r\n        if (!hash) return false;\r\n\r\n        const element = document.getElementById(hash.substr(1));\r\n\r\n        return this.scrollToElement(element, behavior);\r\n    }\r\n\r\n    scrollTop(behavior) {\r\n        const element = this.instantViewerRef.current;\r\n\r\n        switch (behavior) {\r\n            case 'smooth': {\r\n                scrollTop(element);\r\n                break;\r\n            }\r\n            default: {\r\n                element.scrollTo({\r\n                    top: 0,\r\n                    behavior\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { instantView, block, url } = this.props;\r\n\r\n        const hash = new URL(url).hash;\r\n        if (prevProps.instantView !== instantView) {\r\n            if (prevProps.url !== url) {\r\n                if (url.indexOf('#') === url.length - 1) {\r\n                    this.scrollTop('auto');\r\n                } else if (hash) {\r\n                    this.scrollToHash(hash, 'auto');\r\n                } else {\r\n                    this.scrollTop('auto');\r\n                }\r\n            } else {\r\n                if (hash) {\r\n                    this.scrollToHash(hash, 'auto');\r\n                } else {\r\n                    this.scrollTop('smooth');\r\n                }\r\n            }\r\n\r\n            this.handleScroll();\r\n        }\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape': {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n\r\n                const { media } = this.state;\r\n\r\n                if (media) {\r\n                    setInstantViewViewerContent(null);\r\n                    return;\r\n                }\r\n\r\n                this.handleClose();\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClose() {\r\n        setInstantViewContent(null);\r\n    }\r\n\r\n    handleBack = () => {\r\n        const { hasPrev, hasScroll } = this.state;\r\n        if (hasScroll) {\r\n            this.scrollTop('smooth');\r\n            return;\r\n        }\r\n\r\n        if (hasPrev) {\r\n            TdLibController.clientUpdate({\r\n                '@type': 'clientUpdatePrevInstantView'\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    handleScroll = () => {\r\n        const element = this.instantViewerRef.current;\r\n        this.setState({\r\n            hasScroll: element.scrollTop > 50\r\n        });\r\n\r\n        this.updateItemsInView();\r\n    };\r\n\r\n    updateItemsInView() {\r\n        if (!this.mounted) return;\r\n\r\n        const { instantView } = this.props;\r\n        if (!instantView) return;\r\n\r\n        const { page_blocks } = instantView;\r\n\r\n        const blocks = new Map();\r\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\r\n\r\n        for (let i = 0; i < items.length; i++) {\r\n            const block = page_blocks[items[i]];\r\n            blocks.set(block, block);\r\n\r\n            const innerBlocks = getInnerBlocks(block);\r\n            innerBlocks.forEach(x => blocks.set(x, x));\r\n        }\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateBlocksInView',\r\n            blocks\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { instantView } = this.props;\r\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\r\n        if (!instantView) return null;\r\n\r\n        return (\r\n            <IVContext.Provider value={instantView}>\r\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\r\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\r\n                        <MediaViewerButton\r\n                            className='instant-viewer-left-button'\r\n                            style={{ alignItems: 'flex-start' }}\r\n                            onClick={this.handleBack}>\r\n                            <NavigateBeforeIcon\r\n                                style={{\r\n                                    transition: 'transform 0.25s ease-out',\r\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\r\n                                }}\r\n                            />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                    <div className='instant-viewer-content-column'>\r\n                        <div>\r\n                            <Article ref={this.articleRef} />\r\n                        </div>\r\n                    </div>\r\n                    <div className='instant-viewer-right-column'>\r\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\r\n                            <CloseIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\r\n            </IVContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nInstantViewer.propTypes = {\r\n    instantView: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withTranslation()(InstantViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getDateHint } from '../../Utils/Message';\r\nimport UserTile from './UserTile';\r\nimport ChatTile from './ChatTile';\r\nimport MessageAuthor from '../Message/MessageAuthor';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport './MediaInfo.css';\r\n\r\nclass MediaInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { date, sender } = message;\r\n\r\n        const dateHint = getDateHint(date);\r\n\r\n        const tileControl = sender.user_id ? <UserTile userId={sender.user_id} /> : <ChatTile chatId={chatId} />;\r\n\r\n        return (\r\n            <div className='media-info'>\r\n                <div className='media-info-wrapper'>\r\n                    {tileControl}\r\n                    <div className='media-info-content'>\r\n                        <div className='media-info-row'>\r\n                            <MessageAuthor sender={sender} />\r\n                        </div>\r\n                        <div className='media-info-row meta'>\r\n                            <span>{dateHint}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaInfo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default MediaInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport FileProgress from './FileProgress';\r\nimport MediaCaption from './MediaCaption';\r\nimport Player from '../Player/Player';\r\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\r\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\r\nimport { getThumb } from '../../Utils/Media';\r\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport PlayerStore from '../../Stores/PlayerStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MediaViewerContent.css';\r\n\r\nclass MediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {};\r\n\r\n        this.videoRef = React.createRef();\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId, size, t } = props;\r\n\r\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\r\n            const thumbnail = getMediaThumbnail(chatId, messageId);\r\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\r\n\r\n            const message = MessageStore.get(chatId, messageId);\r\n            const text = getText(message, null, t);\r\n\r\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\r\n            file = FileStore.get(file.id) || file;\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                if (isVideoMessage(chatId, messageId)) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\r\n                }\r\n            }\r\n\r\n            const { content } = message;\r\n            const { web_page: webPage } = content;\r\n\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageId: messageId,\r\n\r\n                speed: 1,\r\n                isPlaying: false,\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType,\r\n                text,\r\n                thumbnail,\r\n                minithumbnail,\r\n                webPage\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\r\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    onClientUpdatePictureInPicture = update => {\r\n        const { videoInfo } = update;\r\n        if (!videoInfo) return;\r\n\r\n        const { file } = this.state;\r\n        if (file.id !== videoInfo.fileId) return;\r\n\r\n        TdLibController.clientUpdate({\r\n            '@type': 'clientUpdateMediaViewerContent',\r\n            content: null\r\n        });\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        const { src } = this.state;\r\n\r\n        if (prevState.src !== src) {\r\n            const player = this.videoRef.current;\r\n            if (!player) return;\r\n\r\n            player.load();\r\n        }\r\n    }\r\n\r\n    onClientUpdateMediaBlob = update => {\r\n        const { chatId, messageId, size } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\r\n\r\n            file = FileStore.get(file.id) || file;\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                if (isVideoMessage(chatId, messageId)) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateMediaThumbnailBlob = update => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        if (chatId === update.chatId && messageId === update.messageId) {\r\n            const thumbnail = getMediaThumbnail(chatId, messageId);\r\n            this.setState({\r\n                thumbnail\r\n            });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chatId, messageId, size, t } = this.props;\r\n        const { chat_id, message_id } = update;\r\n\r\n        if (chatId === chat_id && messageId === message_id) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            const text = getText(message, null, t);\r\n\r\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\r\n            let src = getSrc(file);\r\n            let source = null;\r\n            if (!src && supportsStreaming) {\r\n                if (isVideoMessage(chatId, messageId)) {\r\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                width,\r\n                height,\r\n                file,\r\n                src,\r\n                source,\r\n                supportsStreaming,\r\n                mimeType,\r\n                text\r\n            });\r\n        }\r\n    };\r\n\r\n    handleContentClick = event => {\r\n        if (event) event.stopPropagation();\r\n    };\r\n\r\n    handleClick = event => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n\r\n        const { source } = this.state;\r\n        if (!source) return;\r\n\r\n        source.loadNextBuffer();\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            width,\r\n            height,\r\n            file,\r\n            src,\r\n            supportsStreaming,\r\n            mimeType,\r\n            text,\r\n            minithumbnail,\r\n            thumbnail,\r\n            webPage,\r\n            isPlaying\r\n        } = this.state;\r\n\r\n        if (!file) return null;\r\n\r\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\r\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\r\n\r\n        const isEmbed = isEmbedMessage(chatId, messageId);\r\n        const isVideo = isVideoMessage(chatId, messageId);\r\n        const isAnimation = isAnimationMessage(chatId, messageId);\r\n\r\n        let videoWidth = width;\r\n        let videoHeight = height;\r\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\r\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\r\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\r\n        videoWidth = w;\r\n        videoHeight = h;\r\n\r\n        let content = null;\r\n        const source = src ? <source src={src} type={mimeType}/> : null;\r\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\r\n\r\n        if (isVideo) {\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <Player\r\n                        ref={this.videoRef}\r\n                        className='media-viewer-content-video-player'\r\n                        fileId={file.id}\r\n                        width={videoWidth}\r\n                        height={videoHeight}\r\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\r\n                        onPlay={() => {\r\n                            this.setState({ isPlaying: true });\r\n                        }}\r\n                    >\r\n                        {source}\r\n                    </Player>\r\n                    {!isPlaying && !supportsStreaming && thumb}\r\n                </div>\r\n            );\r\n        } else if (isAnimation) {\r\n            // const message = MessageStore.get(chatId, messageId);\r\n            //\r\n            // content = (\r\n            //     <Animation\r\n            //         type='preview'\r\n            //         stretch={true}\r\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\r\n            //         animation={message.content.animation || message.content.web_page.animation}\r\n            //         onClick={this.handleContentClick}\r\n            //         showProgress={false}\r\n            //         style={{ borderRadius: 0 }}\r\n            //         />\r\n            // );\r\n\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <video\r\n                        ref={this.videoRef}\r\n                        className='media-viewer-content-video-player'\r\n                        onClick={this.handleContentClick}\r\n                        loop\r\n                        autoPlay\r\n                        width={videoWidth}\r\n                        height={videoHeight}\r\n                        onPlay={() => {\r\n                            this.setState({ isPlaying: true });\r\n                        }}\r\n                    >\r\n                        {source}\r\n                    </video>\r\n                    {!isPlaying && thumb}\r\n                </div>\r\n            );\r\n        } else if (webPage && webPage.embed_url) {\r\n            let { embed_url: url } = webPage;\r\n\r\n            switch (webPage.site_name) {\r\n                case 'Coub': {\r\n                    break;\r\n                }\r\n                case 'SoundCloud': {\r\n                    break;\r\n                }\r\n                case 'Spotify': {\r\n                    break;\r\n                }\r\n                case 'Twitch': {\r\n                    url += `&parent=${window.location.hostname}`;\r\n                    break;\r\n                }\r\n                case 'YouTube': {\r\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\r\n                    break;\r\n                }\r\n                case 'Vimeo': {\r\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\r\n                    break;\r\n                }\r\n                case 'КиноПоиск': {\r\n                    break;\r\n                }\r\n                case 'Яндекс.Музыка': {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            content = (\r\n                <div className='media-viewer-content-wrapper'>\r\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\r\n                </div>\r\n            );\r\n        } else {\r\n            content = (\r\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div className='media-viewer-content'>\r\n                    {content}\r\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\r\n                </div>\r\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewerContent.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired,\r\n    size: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(MediaViewerContent);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport MediaInfo from '../Tile/MediaInfo';\r\nimport MediaViewerContent from './MediaViewerContent';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\r\nimport {\r\n    cancelPreloadMediaViewerContent,\r\n    getMediaFile,\r\n    loadMediaViewerContent,\r\n    preloadMediaViewerContent,\r\n    saveMedia\r\n} from '../../Utils/File';\r\nimport {\r\n    canMessageBeDeleted,\r\n    filterDuplicateMessages,\r\n    isAnimationMessage,\r\n    isEmbedMessage,\r\n    isMediaContent,\r\n    isVideoMessage\r\n} from '../../Utils/Message';\r\nimport { between } from '../../Utils/Common';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './MediaViewer.css';\r\nimport LStore from '../../Stores/LocalizationStore';\r\n\r\nclass MediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\r\n        this.history = [];\r\n\r\n        const { chatId, messageId } = this.props;\r\n\r\n        this.state = {\r\n            background: 'media-viewer-default',\r\n            prevChatId: chatId,\r\n            prevMessageId: messageId,\r\n            currentMessageId: messageId,\r\n            hasNextMedia: false,\r\n            hasPreviousMedia: false,\r\n            deleteConfirmationOpened: false,\r\n            deleteForAll: true\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            background,\r\n            currentMessageId,\r\n            deleteConfirmationOpened,\r\n            firstSliceLoaded,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            totalCount\r\n        } = this.state;\r\n\r\n        if (nextState.background !== background) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.currentMessageId !== currentMessageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasNextMedia !== hasNextMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.totalCount !== totalCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadHistory();\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\r\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\r\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\r\n    }\r\n\r\n    onKeyDown = event => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\r\n\r\n        const { key } = event;\r\n        switch (key) {\r\n            case 'Escape': {\r\n\r\n                this.handleClose();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowLeft': {\r\n                if (!fullscreenElement) {\r\n                    this.handlePrevious();\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n            case 'ArrowRight': {\r\n                if (!fullscreenElement) {\r\n                    this.handleNext();\r\n                    event.stopPropagation();\r\n                    event.preventDefault();\r\n                    return;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        const isVideo = isVideoMessage(chatId, currentMessageId);\r\n        if (isVideo) {\r\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\r\n        }\r\n    };\r\n\r\n    onUpdateMessageContent = update => {\r\n        const { chat_id, message_id, new_content, old_content } = update;\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        if (chatId !== chat_id) return;\r\n\r\n        const message = MessageStore.get(chat_id, message_id);\r\n        if (!message) return;\r\n\r\n        loadMediaViewerContent([message]);\r\n\r\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\r\n        if (addMessage) {\r\n            if (\r\n                this.history.length >= 2 &&\r\n                (this.firstSliceLoaded ||\r\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\r\n            ) {\r\n                let inserted = false;\r\n                let history = [];\r\n                for (let i = 0; i < this.history.length; i++) {\r\n                    if (this.history[i].id > message_id) {\r\n                        history.push(this.history[i]);\r\n                    } else {\r\n                        if (!inserted) {\r\n                            inserted = true;\r\n                            history.push(message);\r\n                        }\r\n                        history.push(this.history[i]);\r\n                    }\r\n                }\r\n                this.history = history;\r\n            }\r\n\r\n            const index = this.history.findIndex(x => x.id === currentMessageId);\r\n            this.setState({\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index),\r\n                totalCount: totalCount + 1\r\n            });\r\n        }\r\n\r\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\r\n        if (removeMessage) {\r\n            let oldHistory = this.history;\r\n            this.history = this.history.filter(x => x.id !== message_id);\r\n\r\n            if (currentMessageId === message_id) {\r\n                const filterMap = new Map();\r\n                filterMap.set(message_id, message_id);\r\n\r\n                this.moveToNextMedia(oldHistory, filterMap);\r\n                this.setState({\r\n                    totalCount: Math.max(totalCount - 1, 0)\r\n                });\r\n            } else {\r\n                const index = this.history.findIndex(x => x.id === currentMessageId);\r\n                this.setState({\r\n                    hasNextMedia: this.hasNextMedia(index),\r\n                    hasPreviousMedia: this.hasPreviousMedia(index),\r\n                    totalCount: Math.max(totalCount - 1, 0)\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    onUpdateDeleteMessages = update => {\r\n        const { chat_id, message_ids, is_permanent } = update;\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        if (!is_permanent) return;\r\n        if (chatId !== chat_id) return;\r\n\r\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\r\n            accumulator.set(currentId, currentId);\r\n            return accumulator;\r\n        }, new Map());\r\n\r\n        const oldHistory = this.history;\r\n        let deletedCount = oldHistory.length;\r\n\r\n        this.history = this.history.filter(x => !filterMap.has(x.id));\r\n        deletedCount -= this.history.length;\r\n\r\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\r\n\r\n        if (!this.history.length) {\r\n            setMediaViewerContent(null);\r\n            return;\r\n        }\r\n\r\n        if (filterMap.has(currentMessageId)) {\r\n            this.moveToNextMedia(oldHistory, filterMap);\r\n        }\r\n    };\r\n\r\n    onUpdateNewMessage = update => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, totalCount } = this.state;\r\n\r\n        const { message } = update;\r\n        if (!message) return;\r\n        if (!isMediaContent(message.content)) return;\r\n\r\n        if (message.chat_id !== chatId) return;\r\n        if (!this.firstSliceLoaded) return;\r\n\r\n        this.history = [message].concat(this.history);\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: totalCount + 1\r\n        });\r\n    };\r\n\r\n    getFilter = (chatId, messageId) => {\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return null;\r\n\r\n        const { content } = message;\r\n        if (!content) return null;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageChatChangePhoto': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterChatPhoto'\r\n                };\r\n            }\r\n            case 'messagePhoto': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\r\n                };\r\n            }\r\n            case 'messageVideo': {\r\n                return {\r\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\r\n                };\r\n            }\r\n            default: {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n\r\n    loadHistory = async () => {\r\n        const { chatId, messageId } = this.props;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: messageId,\r\n                offset: -MEDIA_SLICE_LIMIT,\r\n                limit: 2 * MEDIA_SLICE_LIMIT,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.history = result.messages;\r\n        this.firstSliceLoaded = result.messages.length === 0;\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index)\r\n        });\r\n\r\n        if (index === -1) {\r\n            this.history = [MessageStore.get(chatId, currentMessageId)];\r\n            preloadMediaViewerContent(0, this.history);\r\n        } else {\r\n            preloadMediaViewerContent(index, this.history);\r\n\r\n            const filter = this.getFilter(chatId, messageId);\r\n            if (!filter) return;\r\n\r\n            const maxCount = 1500;\r\n            let count = 0;\r\n            while (!this.firstSliceLoaded && count < maxCount) {\r\n                const result = await TdLibController.send({\r\n                    '@type': 'searchChatMessages',\r\n                    chat_id: chatId,\r\n                    query: '',\r\n                    sender_user_id: 0,\r\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\r\n                    offset: -99,\r\n                    limit: 99 + 1,\r\n                    filter: filter\r\n                });\r\n                count += result.messages.length;\r\n\r\n                filterDuplicateMessages(result, this.history);\r\n                MessageStore.setItems(result.messages);\r\n\r\n                this.history = result.messages.concat(this.history);\r\n                this.firstSliceLoaded = result.messages.length === 0;\r\n\r\n                const { currentMessageId } = this.state;\r\n                const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n                this.setState({\r\n                    hasNextMedia: this.hasNextMedia(index),\r\n                    hasPreviousMedia: this.hasPreviousMedia(index),\r\n                    firstSliceLoaded: this.firstSliceLoaded,\r\n                    totalCount: result.total_count\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleClose = () => {\r\n        setMediaViewerContent(null);\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        if (index !== -1) {\r\n            cancelPreloadMediaViewerContent(index, this.history);\r\n        }\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        if (!message) return;\r\n\r\n        const { content } = message;\r\n        if (!content) return;\r\n\r\n        let media = null;\r\n        switch (content['@type']) {\r\n            case 'messageAnimation': {\r\n                const { animation } = content;\r\n\r\n                media = animation;\r\n                break;\r\n            }\r\n            case 'messageChatChangePhoto': {\r\n                const { photo } = content;\r\n\r\n                media = photo;\r\n                break;\r\n            }\r\n            case 'messageDocument': {\r\n                const { document } = content;\r\n\r\n                media = document;\r\n                break;\r\n            }\r\n            case 'messagePhoto': {\r\n                const { photo } = content;\r\n\r\n                media = photo;\r\n                break;\r\n            }\r\n            case 'messageText': {\r\n                const { web_page } = content;\r\n                if (!web_page) return;\r\n\r\n                const { animation, document, photo, video } = web_page;\r\n\r\n                if (animation) {\r\n                    media = animation;\r\n                    break;\r\n                }\r\n\r\n                if (document) {\r\n                    media = document;\r\n                    break;\r\n                }\r\n\r\n                if (photo) {\r\n                    media = photo;\r\n                    break;\r\n                }\r\n\r\n                if (video) {\r\n                    media = video;\r\n                    break;\r\n                }\r\n                break;\r\n            }\r\n            case 'messageVideo': {\r\n                const { video } = content;\r\n\r\n                media = video;\r\n                break;\r\n            }\r\n        }\r\n\r\n        saveMedia(media, message);\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { chatId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        forwardMessages(chatId, [currentMessageId]);\r\n    };\r\n\r\n    handleDelete = () => {\r\n        this.handleDialogOpen();\r\n    };\r\n\r\n    hasPreviousMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < this.history.length;\r\n    };\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        const nextIndex = index + 1;\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadPrevious = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: currentMessageId,\r\n                offset: 0,\r\n                limit: MEDIA_SLICE_LIMIT,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.history = this.history.concat(result.messages);\r\n\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: result.total_count\r\n        });\r\n    };\r\n\r\n    hasNextMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    };\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentMessageId } = this.state;\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n        const nextIndex = index - 1;\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadNext = async () => {\r\n        const { chatId, messageId } = this.props;\r\n        const { currentMessageId } = this.state;\r\n\r\n        const filter = this.getFilter(chatId, messageId);\r\n\r\n        let result = {\r\n            '@type': 'messages',\r\n            messages: [],\r\n            total_count: 0\r\n        };\r\n        if (filter) {\r\n            result = await TdLibController.send({\r\n                '@type': 'searchChatMessages',\r\n                chat_id: chatId,\r\n                query: '',\r\n                sender_user_id: 0,\r\n                from_message_id: currentMessageId,\r\n                offset: -MEDIA_SLICE_LIMIT,\r\n                limit: MEDIA_SLICE_LIMIT + 1,\r\n                filter: filter\r\n            });\r\n        }\r\n\r\n        filterDuplicateMessages(result, this.history);\r\n        MessageStore.setItems(result.messages);\r\n\r\n        this.firstSliceLoaded = result.messages.length === 0;\r\n        this.history = result.messages.concat(this.history);\r\n\r\n        const index = this.history.findIndex(x => x.id === currentMessageId);\r\n\r\n        this.setState({\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            firstSliceLoaded: this.firstSliceLoaded,\r\n            totalCount: result.total_count\r\n        });\r\n    };\r\n\r\n    loadMedia = (index, callback) => {\r\n        if (index < 0) return false;\r\n        if (index >= this.history.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                currentMessageId: this.history[index].id,\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index)\r\n            },\r\n            callback\r\n        );\r\n\r\n        preloadMediaViewerContent(index, this.history);\r\n        return true;\r\n    };\r\n\r\n    moveToNextMedia = (oldHistory, filterMap) => {\r\n        const { currentMessageId } = this.state;\r\n\r\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\r\n        let nextId = 0;\r\n        for (let i = index - 1; i >= 0; i--) {\r\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\r\n                nextId = oldHistory[i].id;\r\n                break;\r\n            }\r\n        }\r\n        if (!nextId) {\r\n            for (let i = index + 1; i < oldHistory.length; i++) {\r\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\r\n                    nextId = oldHistory[i].id;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!nextId) return;\r\n\r\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\r\n\r\n        return this.loadMedia(nextIndex, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            } else if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    handleDialogOpen = () => {\r\n        this.setState({ deleteConfirmationOpened: true });\r\n    };\r\n\r\n    handleDialogClose = () => {\r\n        this.setState({ deleteConfirmationOpened: false });\r\n    };\r\n\r\n    handleDone = () => {\r\n        this.setState({ deleteConfirmationOpened: false });\r\n\r\n        const { chatId } = this.props;\r\n        const { currentMessageId, deleteForAll } = this.state;\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        if (!message) return;\r\n\r\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\r\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\r\n        if (!canBeDeleted) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteMessages',\r\n            chat_id: chatId,\r\n            message_ids: [currentMessageId],\r\n            revoke: can_be_deleted_for_all_users && deleteForAll\r\n        });\r\n    };\r\n\r\n    handleChangeDeleteForAll = event => {\r\n        this.setState({ deleteForAll: event.target.checked });\r\n    };\r\n\r\n    handleInvertColors = () => {\r\n        const { background } = this.state;\r\n\r\n        let nextBackground = 'media-viewer-default';\r\n        switch (background) {\r\n            case 'media-viewer-default': {\r\n                nextBackground = 'media-viewer-dark';\r\n                break;\r\n            }\r\n            case 'media-viewer-dark': {\r\n                nextBackground = 'media-viewer-light';\r\n                break;\r\n            }\r\n            case 'media-viewer-light': {\r\n                nextBackground = 'media-viewer-default';\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            background: nextBackground\r\n        });\r\n    };\r\n\r\n    canBeForwarded = (chatId, messageId) => {\r\n        const message = MessageStore.get(chatId, messageId);\r\n        if (!message) return false;\r\n\r\n        const { can_be_forwarded, content } = message;\r\n        if (!content) return false;\r\n\r\n        switch (content['@type']) {\r\n            case 'messageChatChangePhoto': {\r\n                return true;\r\n            }\r\n            default: {\r\n                return can_be_forwarded;\r\n            }\r\n        }\r\n    };\r\n\r\n    handleWrapperMouseDown = event => {\r\n        this.mouseDownTarget = event.currentTarget;\r\n    }\r\n\r\n    handleWrapperClick = event => {\r\n        const { mouseDownTarget } = this;\r\n        this.mouseDownTarget = null;\r\n\r\n        if (event.currentTarget !== mouseDownTarget) return;\r\n\r\n        this.handleClose();\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const {\r\n            background,\r\n            currentMessageId,\r\n            deleteConfirmationOpened,\r\n            deleteForAll,\r\n            firstSliceLoaded,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            totalCount\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount && firstSliceLoaded) {\r\n            index = this.history.findIndex(x => x.id === currentMessageId);\r\n        }\r\n        const maxCount = Math.max(this.history.length, totalCount);\r\n\r\n        const message = MessageStore.get(chatId, currentMessageId);\r\n        const { can_be_deleted_for_all_users } = message;\r\n\r\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\r\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\r\n\r\n        let deleteConfirmationContent = '';\r\n        if (isVideoMessage(chatId, currentMessageId)) {\r\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\r\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\r\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\r\n        } else {\r\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\r\n        }\r\n        const deleteConfirmation = deleteConfirmationOpened ? (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={deleteConfirmationOpened}\r\n                onClose={this.handleDialogClose}\r\n                aria-labelledby='form-dialog-title'>\r\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\r\n                    {can_be_deleted_for_all_users && (\r\n                        <FormControlLabel\r\n                            label={t('DeleteForAll')}\r\n                            control={\r\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\r\n                            }\r\n                            checked={deleteForAll}\r\n                        />\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.handleDialogClose} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={this.handleDone} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        ) : null;\r\n\r\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\r\n\r\n        const fileId = file ? file.id : 0;\r\n        let title = t('AttachPhoto');\r\n        if (isEmbedMessage(chatId, currentMessageId)) {\r\n            title = '';\r\n        } else if (isVideoMessage(chatId, currentMessageId)) {\r\n            title = t('AttachVideo');\r\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\r\n            title = t('AttachGif');\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('media-viewer', background)}>\r\n                <div className='media-viewer-footer'>\r\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\r\n                    <MediaViewerFooterText\r\n                        title={title}\r\n                        subtitle={maxCount > 1 && index >= 0 ? LStore.formatString('Of', maxCount - index, maxCount) : null}\r\n                    />\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\r\n                    <MediaViewerFooterButton\r\n                        title={t('Forward')}\r\n                        disabled={!canBeForwarded}\r\n                        onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\r\n                        <DeleteIcon />\r\n                    </MediaViewerFooterButton>\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-content-column'>\r\n                        <MediaViewerContent\r\n                            chatId={chatId}\r\n                            messageId={currentMessageId}\r\n                            size={PHOTO_BIG_SIZE}\r\n                            onClick={this.handlePrevious}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n                <div className='media-viewer-footer'/>\r\n                {deleteConfirmation}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nMediaViewer.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    messageId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(MediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FileProgress from './FileProgress';\r\nimport { getChatUserId } from '../../Utils/Chat';\r\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport './ProfileMediaViewer.css';\r\n\r\nclass ProfileMediaViewerContent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const { chatId, photo } = this.props;\r\n\r\n        let { big: file } = photo;\r\n        file = FileStore.get(file.id) || file;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            prevPhoto: photo,\r\n            width: PROFILE_PHOTO_BIG_SIZE,\r\n            height: PROFILE_PHOTO_BIG_SIZE,\r\n            file: file\r\n        };\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, photo } = props;\r\n\r\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevPhoto: photo,\r\n                width: PROFILE_PHOTO_BIG_SIZE,\r\n                height: PROFILE_PHOTO_BIG_SIZE,\r\n                file: photo.big\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\r\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\r\n    }\r\n\r\n    onClientUpdateChatBlob = update => {\r\n        const { chatId, photo } = this.props;\r\n\r\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\r\n            const file = FileStore.get(update.fileId) || this.state.file;\r\n            this.setState({\r\n                file\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateUserBlob = update => {\r\n        const { chatId, photo } = this.props;\r\n        const userId = getChatUserId(chatId);\r\n\r\n        if (userId === update.userId && photo.big.id === update.fileId) {\r\n            const file = FileStore.get(update.fileId) || this.state.file;\r\n            this.setState({\r\n                file\r\n            });\r\n        }\r\n    };\r\n\r\n    handleContentClick = event => {\r\n        if (event) event.stopPropagation();\r\n\r\n        const { onClose } = this.props;\r\n\r\n        onClose && onClose(event);\r\n    };\r\n\r\n    handlePhotoClick = event => {\r\n        if (event) event.stopPropagation();\r\n\r\n        const { onPrevious } = this.props;\r\n\r\n        onPrevious && onPrevious(event);\r\n    };\r\n\r\n    render() {\r\n        const { file } = this.state;\r\n        if (!file) return null;\r\n\r\n        const blob = FileStore.getBlob(file.id) || file.blob;\r\n        const src = FileStore.getBlobUrl(blob);\r\n\r\n        return (\r\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\r\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\r\n                <FileProgress file={file} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaViewerContent.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    photo: PropTypes.object.isRequired,\r\n\r\n    onClose: PropTypes.func,\r\n    onPrevious: PropTypes.func\r\n};\r\n\r\nexport default ProfileMediaViewerContent;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ChatTile from './ChatTile';\r\nimport MessageAuthor from '../Message/MessageAuthor';\r\nimport './MediaInfo.css';\r\n\r\nclass ProfileMediaInfo extends React.Component {\r\n    render() {\r\n        const { chatId, date, style } = this.props;\r\n\r\n        return (\r\n            <div className='media-info' style={style}>\r\n                <div className='media-info-wrapper'>\r\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\r\n                    <div className='media-info-content'>\r\n                        <div className='media-info-row'>\r\n                            <MessageAuthor sender={{ '@type': 'messageSenderChat', chat_id: chatId }} />\r\n                        </div>\r\n                        {date && (\r\n                            <div className='media-info-row meta'>\r\n                                <span>{date}</span>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaInfo.propTypes = {\r\n    chatId: PropTypes.number.isRequired,\r\n    date: PropTypes.string\r\n};\r\n\r\nexport default ProfileMediaInfo;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { withTranslation } from 'react-i18next';\r\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\r\nimport CloseIcon from '../../Assets/Icons/Close';\r\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\r\nimport ReplyIcon from '../../Assets/Icons/Share';\r\nimport DeleteIcon from '../../Assets/Icons/Delete';\r\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\r\nimport MediaViewerButton from './MediaViewerButton';\r\nimport MediaViewerFooterText from './MediaViewerFooterText';\r\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\r\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\r\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\r\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\r\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\r\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\r\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport FileStore from '../../Stores/FileStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport TdLibController from '../../Controllers/TdLibController';\r\nimport './ProfileMediaViewer.css';\r\n\r\nclass ProfileMediaViewer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.history = [];\r\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\r\n\r\n        const { chatId, fileId } = this.props;\r\n\r\n        this.state = {\r\n            prevChatId: chatId,\r\n            prevFileId: fileId,\r\n            currentIndex: 0,\r\n            hasNextMedia: false,\r\n            hasPreviousMedia: false,\r\n            deleteConfirmationOpened: false\r\n        };\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        const { chatId, messageId } = this.props;\r\n        const {\r\n            currentFileId,\r\n            hasPreviousMedia,\r\n            hasNextMedia,\r\n            firstSliceLoaded,\r\n            totalCount,\r\n            deleteConfirmationOpened\r\n        } = this.state;\r\n\r\n        if (nextProps.chatId !== chatId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextProps.messageId !== messageId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.currentFileId !== currentFileId) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.hasNextMedia !== hasNextMedia) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.totalCount !== totalCount) {\r\n            return true;\r\n        }\r\n\r\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { chatId } = this.props;\r\n        const photo = getPhotoFromChat(chatId);\r\n        loadProfileMediaViewerContent(chatId, [photo]);\r\n\r\n        this.loadHistory(photo);\r\n\r\n        KeyboardManager.add(this.keyboardHandler);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        KeyboardManager.remove(this.keyboardHandler);\r\n    }\r\n\r\n    handleKeyDown = event => {\r\n        if (modalManager.modals.length > 0) {\r\n            return;\r\n        }\r\n\r\n        if (event.isComposing) {\r\n            return;\r\n        }\r\n\r\n        switch (event.key) {\r\n            case 'Escape': {\r\n                this.handleClose();\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                return;\r\n            }\r\n            case 'ArrowLeft': {\r\n                this.handleNext();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n            case 'ArrowRight': {\r\n                this.handlePrevious();\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    loadHistory = async () => {\r\n        const { chatId } = this.props;\r\n\r\n        if (!isPrivateChat(chatId)) return;\r\n\r\n        const result = await TdLibController.send({\r\n            '@type': 'getUserProfilePhotos',\r\n            user_id: getChatUserId(chatId),\r\n            offset: 0,\r\n            limit: 100\r\n        });\r\n\r\n        this.history = result.photos;\r\n        this.firstSliceLoaded = result.photos.length === 0;\r\n\r\n        const index = 0;\r\n\r\n        this.setState({\r\n            currentIndex: index,\r\n            hasNextMedia: this.hasNextMedia(index),\r\n            hasPreviousMedia: this.hasPreviousMedia(index),\r\n            totalCount: result.total_count\r\n        });\r\n\r\n        preloadProfileMediaViewerContent(chatId, index, this.history);\r\n    };\r\n\r\n    handleClose = () => {\r\n        setProfileMediaViewerContent(null);\r\n    };\r\n\r\n    handleSave = () => {\r\n        const { chatId } = this.props;\r\n        const { currentIndex, totalCount } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const photo =\r\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n        if (!photo.big) return;\r\n\r\n        const file = FileStore.get(photo.big.id) || photo.big;\r\n        if (!file) return;\r\n\r\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\r\n    };\r\n\r\n    handleForward = () => {\r\n        const { chatId } = this.props;\r\n        const { currentIndex, totalCount } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        let inputFile = null;\r\n        let inputMessagePhoto = null;\r\n        const inHistory = this.history && index >= 0 && index < this.history.length;\r\n        if (inHistory) {\r\n            const photo = getProfilePhoto(this.history[index]);\r\n            if (!photo) return;\r\n\r\n            let { big: file } = photo;\r\n            if (!file) return;\r\n\r\n            inputFile = {\r\n                '@type': 'inputFileId',\r\n                id: file.id\r\n            };\r\n        } else {\r\n            const chatPhoto = getPhotoFromChat(chatId);\r\n            if (!chatPhoto) return;\r\n\r\n            const { big: file } = chatPhoto;\r\n            if (!file) return;\r\n\r\n            const blob = FileStore.getBlob(file.id);\r\n            if (!blob) return;\r\n\r\n            inputFile = {\r\n                '@type': 'inputFileBlob',\r\n                data: blob,\r\n                name: ''\r\n            };\r\n        }\r\n\r\n        if (!inputFile) return;\r\n\r\n        const inputMessageContent = {\r\n            '@type': 'inputMessagePhoto',\r\n            photo: inputFile,\r\n            thumbnail: null,\r\n            added_sticker_file_ids: [],\r\n            width: PROFILE_PHOTO_BIG_SIZE,\r\n            height: PROFILE_PHOTO_BIG_SIZE,\r\n            caption: {\r\n                '@type': 'formattedText',\r\n                text: '',\r\n                entities: null\r\n            },\r\n            ttl: 0\r\n        };\r\n\r\n        forward(inputMessageContent);\r\n    };\r\n\r\n    handleDelete = async () => {\r\n        const { chatId } = this.props;\r\n        const {\r\n            currentIndex,\r\n            totalCount,\r\n            hasNextMedia,\r\n            hasPreviousMedia\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\r\n        if (!photo) return;\r\n\r\n        const { id } = photo;\r\n        if (!id) return;\r\n\r\n        await TdLibController.send({\r\n            '@type': 'deleteProfilePhoto',\r\n            profile_photo_id: id\r\n        });\r\n\r\n        this.history.splice(index, 1);\r\n        if (!this.history.length) {\r\n            this.handleClose();\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            totalCount: totalCount - 1\r\n        });\r\n\r\n        if (hasNextMedia) {\r\n            const nextIndex = currentIndex - 1;\r\n\r\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\r\n                if (nextIndex === 0) {\r\n                    this.loadNext();\r\n                }\r\n            });\r\n        }\r\n\r\n        if (hasPreviousMedia) {\r\n            const nextIndex = currentIndex;\r\n\r\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\r\n                if (nextIndex === this.history.length - 1) {\r\n                    this.loadPrevious();\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    hasPreviousMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index + 1;\r\n        return nextIndex < this.history.length;\r\n    };\r\n\r\n    handlePrevious = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentIndex } = this.state;\r\n        const nextIndex = currentIndex + 1;\r\n\r\n        return this.loadMedia(nextIndex, { }, () => {\r\n            if (nextIndex === this.history.length - 1) {\r\n                this.loadPrevious();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadPrevious = async () => {\r\n        return;\r\n    };\r\n\r\n    hasNextMedia = index => {\r\n        if (index === -1) return false;\r\n\r\n        const nextIndex = index - 1;\r\n        return nextIndex >= 0;\r\n    };\r\n\r\n    handleNext = event => {\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n\r\n        const { currentIndex } = this.state;\r\n        const nextIndex = currentIndex - 1;\r\n\r\n        return this.loadMedia(nextIndex, { }, () => {\r\n            if (nextIndex === 0) {\r\n                this.loadNext();\r\n            }\r\n        });\r\n    };\r\n\r\n    loadNext = async () => {\r\n        return;\r\n    };\r\n\r\n    loadMedia = (index, obj, callback) => {\r\n        if (index < 0) return false;\r\n        if (index >= this.history.length) return false;\r\n\r\n        this.setState(\r\n            {\r\n                currentIndex: index,\r\n                ...obj,\r\n                hasNextMedia: this.hasNextMedia(index),\r\n                hasPreviousMedia: this.hasPreviousMedia(index)\r\n            },\r\n            callback\r\n        );\r\n\r\n        const { chatId } = this.props;\r\n\r\n        preloadProfileMediaViewerContent(chatId, index, this.history);\r\n        return true;\r\n    };\r\n\r\n    render() {\r\n        const { chatId, t } = this.props;\r\n        const {\r\n            currentIndex,\r\n            hasNextMedia,\r\n            hasPreviousMedia,\r\n            totalCount,\r\n        } = this.state;\r\n\r\n        let index = -1;\r\n        if (totalCount) {\r\n            index = currentIndex;\r\n        }\r\n\r\n        const inHistory = index >= 0 && index < this.history.length;\r\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\r\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\r\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\r\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\r\n        const userProfilePhoto = inHistory ? this.history[index] : null;\r\n        const { big: file } = photo;\r\n        const isMe = isMeChat(chatId);\r\n\r\n        return (\r\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\r\n                <div className='media-viewer-footer'>\r\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)}/>\r\n                    <MediaViewerFooterText\r\n                        title={t('AttachPhoto')}\r\n                        subtitle={totalCount > 1 && index >= 0 ? LStore.formatString('Of', index + 1, totalCount) : null}\r\n                    />\r\n                    <div style={{ width: 64 }}/>\r\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\r\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\r\n                        <ReplyIcon />\r\n                    </MediaViewerDownloadButton>\r\n                    {isMe && (\r\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\r\n                            <DeleteIcon />\r\n                        </MediaViewerFooterButton>\r\n                    )}\r\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\r\n                        <CloseIcon />\r\n                    </MediaViewerFooterButton>\r\n                </div>\r\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\r\n                    <div className='media-viewer-left-column'>\r\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\r\n                            <NavigateBeforeIcon />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-content-column'>\r\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\r\n                    </div>\r\n\r\n                    <div className='media-viewer-right-column'>\r\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\r\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\r\n                        </MediaViewerButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nProfileMediaViewer.propTypes = {\r\n    chatId: PropTypes.number.isRequired\r\n};\r\n\r\nexport default withTranslation()(ProfileMediaViewer);\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { getFormattedText } from '../../Utils/Message';\r\nimport './AlertDialog.css';\r\n\r\nclass AlertDialog extends React.Component {\r\n\r\n    handleClose = result => {\r\n        const { onClose } = this.props;\r\n\r\n        onClose && onClose(false);\r\n    };\r\n\r\n    render() {\r\n        const { params, t } = this.props;\r\n        if (!params) return null;\r\n\r\n        let { title, message, ok, cancel } = params;\r\n\r\n        if (message['@type'] === 'formattedText') {\r\n            message = getFormattedText(message, t, {});\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={this.handleClose}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {message}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    { cancel && (\r\n                        <Button onClick={() => this.handleClose(false)} color='primary'>\r\n                            {cancel}\r\n                        </Button>\r\n                    )}\r\n                    { ok && (\r\n                        <Button onClick={() => this.handleClose(true)} color='primary'>\r\n                            {ok}\r\n                        </Button>\r\n                    )}\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nAlertDialog.propTypes = {\r\n    params: PropTypes.object\r\n};\r\n\r\nexport default withTranslation()(AlertDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { getUserShortName } from '../../Utils/User';\r\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\r\nimport { getChatLocation, isChannelChat } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './BlockSenderDialog.css';\r\n\r\nclass BlockSenderDialog extends React.Component {\r\n    state = {\r\n        reportSpam: true,\r\n        deleteChat: true\r\n    };\r\n\r\n    handleReportSpamChange = () => {\r\n        const { reportSpam } = this.state;\r\n\r\n        this.setState({\r\n            reportSpam: !reportSpam\r\n        });\r\n    };\r\n\r\n    handleDeleteChatChange = () => {\r\n        const { deleteChat } = this.state;\r\n\r\n        this.setState({\r\n            deleteChat: !deleteChat\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { sender, onClose, t } = this.props;\r\n        if (!sender) return null;\r\n\r\n        const { reportSpam, deleteChat } = this.state;\r\n\r\n        let title = null;\r\n        let text = null;\r\n        const entities = [];\r\n        let reportText = null;\r\n        switch (sender['@type']) {\r\n            case 'messageSenderUser': {\r\n                const { user_id } = sender;\r\n\r\n                title = LStore.formatString('BlockUserTitle', getUserShortName(user_id, t));\r\n                text = LStore.formatString('BlockUserAlert', getUserShortName(user_id, t));\r\n                text = getSimpleMarkupEntities(text, entities);\r\n                reportText = LStore.getString('BlockContact');\r\n                break;\r\n            }\r\n            case 'messageSenderChat': {\r\n                const { chat_id } = sender;\r\n\r\n                const location = getChatLocation(chat_id);\r\n                if (location) {\r\n                    title = LStore.getString('ReportUnrelatedGroup');\r\n                    if (location.address) {\r\n                        text = LStore.formatString('ReportUnrelatedGroupText', location.address);\r\n                        text = getSimpleMarkupEntities(text, entities);\r\n                    } else {\r\n                        text = LStore.getString('ReportUnrelatedGroupTextNoAddress');\r\n                    }\r\n                } else {\r\n                    title = LStore.getString('ReportSpamTitle');\r\n                    if (isChannelChat(chat_id)) {\r\n                        text = LStore.getString('ReportSpamAlertChannel');\r\n                    } else {\r\n                        text = LStore.getString('ReportSpamAlertGroup');\r\n                    }\r\n                }\r\n                reportText = LStore.getString('ReportChat');\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false, null)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>\r\n                    {title}\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {getFormattedText({ '@type': 'formattedText', text, entities })}\r\n                    </DialogContentText>\r\n                    { sender['@type'] === 'messageSenderUser' && (\r\n                        <div className='block-sender-params'>\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={reportSpam} onChange={this.handleReportSpamChange} color='primary' />}\r\n                                label={t('DeleteReportSpam')}\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={deleteChat} onChange={this.handleDeleteChatChange} color='primary' />}\r\n                                label={t('DeleteThisChat')}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, null)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, sender && sender['@type'] === 'messageSenderUser' ? { reportSpam, deleteChat } : null)} color='secondary'>\r\n                        {reportText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nBlockSenderDialog.propTypes = {\r\n    sender: PropTypes.object\r\n};\r\n\r\nexport default withTranslation()(BlockSenderDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport ChatTile from '../Tile/ChatTile';\r\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ChatStore from '../../Stores/ChatStore';\r\n\r\nclass ClearHistoryDialog extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId } = props;\r\n        const { prevChatId } = state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n\r\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\r\n\r\n        if (prevChatId !== chatId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                canBeDeletedForAllUsers,\r\n                revoke: canBeDeletedForAllUsers\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleRevokeChange = () => {\r\n        const { revoke } = this.state;\r\n\r\n        this.setState({ revoke: !revoke });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClose, t } = this.props;\r\n        const { canBeDeletedForAllUsers, revoke } = this.state;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                open={true}\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false, revoke)}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className='delete-dialog-content'>\r\n                        <ChatTile chatId={chatId} />\r\n                        <div>\r\n                            <DialogContentText id='delete-dialog-description'>\r\n                                Are you sure you want clear history?\r\n                            </DialogContentText>\r\n                            {\r\n                                canBeDeletedForAllUsers && (\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\r\n                                        }\r\n                                        label={\r\n                                            isPrivateChat(chatId)\r\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\r\n                                                : 'Delete for all members'\r\n                                        }\r\n                                        style={{ marginLeft: 0 }}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nClearHistoryDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(ClearHistoryDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\r\nimport { sprintf } from '../../Utils/Language';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport MessageStore from '../../Stores/MessageStore';\r\nimport LStore from '../../Stores/LocalizationStore';\r\n\r\nclass DeleteMessagesDialog extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageIds } = props;\r\n        const { prevChatId, prevMessageIds } = state;\r\n\r\n        let canBeDeletedForAllUsers = true;\r\n        for (let messageId of messageIds) {\r\n            const message = MessageStore.get(chatId, messageId);\r\n            if (!message) {\r\n                canBeDeletedForAllUsers = false;\r\n                break;\r\n            }\r\n            if (!message.can_be_deleted_for_all_users) {\r\n                canBeDeletedForAllUsers = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageIds: messageIds,\r\n                canBeDeletedForAllUsers,\r\n                revoke: canBeDeletedForAllUsers\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleRevokeChange = () => {\r\n        const { revoke } = this.state;\r\n\r\n        this.setState({ revoke: !revoke });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, messageIds, onClose, t } = this.props;\r\n        const { canBeDeletedForAllUsers, revoke } = this.state;\r\n\r\n        const count = messageIds ? messageIds.length : 0;\r\n\r\n        let confirm = count === 1 ? t('AreYouSureDeleteSingleMessage') : t('AreYouSureDeleteFewMessages');\r\n        if (isSupergroup(chatId) && !isChannelChat(chatId)) {\r\n            confirm = count === 1 ? t('AreYouSureDeleteSingleMessageMega') : t('AreYouSureDeleteFewMessagesMega');\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false, revoke)}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{LStore.formatString('DeleteMessagesTitle', LStore.formatPluralString('messages', count))}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {confirm}\r\n                    </DialogContentText>\r\n                    { !isSupergroup(chatId) && canBeDeletedForAllUsers && (\r\n                        <FormControlLabel\r\n                            control={<Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />}\r\n                            label={\r\n                                isPrivateChat(chatId)\r\n                                    ? sprintf(t, 'DeleteForUser', getChatShortTitle(chatId, false, t))\r\n                                    : t('DeleteForAll')\r\n                            }\r\n                        />\r\n                    )}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nDeleteMessagesDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageIds: PropTypes.array,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(DeleteMessagesDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './InputPasswordDialog.css';\r\n\r\nclass InputPasswordDialog extends React.Component {\r\n\r\n    state = { };\r\n\r\n    handleChange = e => {\r\n        this.password = e.target.value;\r\n    };\r\n\r\n    handleClickShowPassword = () => {\r\n        const { showPassword } = this.state;\r\n\r\n        this.setState({ showPassword: !showPassword });\r\n    };\r\n\r\n    getErrorMessage = error => {\r\n        const { t } = this.props;\r\n\r\n        if (!error) return null;\r\n\r\n        if (error.message === 'PASSWORD_HASH_INVALID') {\r\n            return t('InvalidPassword');\r\n        } else if (error.message.startsWith('Too Many Requests: retry after ')) {\r\n            const str = error.message.replace('Too Many Requests: retry after ', '');\r\n            try {\r\n                const time = parseInt(str);\r\n                const timeString = time < 60\r\n                    ? LStore.formatPluralString('Seconds', time)\r\n                    : LStore.formatPluralString('Minutes', Math.floor(time / 60));\r\n\r\n                return LStore.formatString('FloodWaitTime', timeString);\r\n            } catch (e) {\r\n                return error.message;\r\n            }\r\n        }\r\n\r\n        return error.message;\r\n    }\r\n\r\n    render() {\r\n        const { state, error, onClose, t } = this.props;\r\n        if (!state) return null;\r\n\r\n        const { showPassword, loading } = this.state;\r\n        const { password_hint: passwordHint } = state;\r\n\r\n        const errorMessage = this.getErrorMessage(error);\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('TwoStepVerificationTitle')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {t('PleaseEnterCurrentPasswordTransfer')}\r\n                    </DialogContentText>\r\n                    <FormControl className='auth-input' fullWidth>\r\n                        <InputLabel htmlFor='adornment-password' error={Boolean(error)}>{t('LoginPassword')}</InputLabel>\r\n                        <Input\r\n                            fullWidth\r\n                            autoFocus\r\n                            autoComplete='off'\r\n                            id='adornment-password'\r\n                            type={showPassword ? 'text' : 'password'}\r\n                            disabled={loading}\r\n                            error={Boolean(error)}\r\n                            onChange={this.handleChange}\r\n                            endAdornment={\r\n                                <InputAdornment position='end'>\r\n                                    <IconButton\r\n                                        aria-label='Toggle password visibility'\r\n                                        onClick={this.handleClickShowPassword}\r\n                                        edge='end'>\r\n                                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                        {passwordHint && <FormHelperText id='password-hint-text'>{passwordHint}</FormHelperText>}\r\n                        <FormHelperText id='password-error-text' error>{errorMessage || ' '}</FormHelperText>\r\n                    </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, this.password)} color='primary'>\r\n                        {t('OK')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nInputPasswordDialog.propTypes = {\r\n    state: PropTypes.object,\r\n    error: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(InputPasswordDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport ChatTile from '../Tile/ChatTile';\r\nimport { getChatShortTitle } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport SupergroupStore from '../../Stores/SupergroupStore';\r\n\r\nclass LeaveChatDialog extends React.Component {\r\n    getDeleteDialogText = (chatId, t) => {\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n        if (!chat.type) return null;\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return `Are you sure you want to leave group ${chat.title}?`;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                if (supergroup) {\r\n                    return supergroup.is_channel\r\n                        ? `Are you sure you want to leave channel ${chat.title}?`\r\n                        : `Are you sure you want to leave group ${chat.title}?`;\r\n                }\r\n\r\n                return null;\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClose, t } = this.props;\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                open={true}\r\n                transitionDuration={0}\r\n                onClose={() => onClose(false)}\r\n                aria-labelledby='delete-dialog-title'>\r\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\r\n                <DialogContent>\r\n                    <div className='delete-dialog-content'>\r\n                        <ChatTile chatId={chatId} />\r\n                        <DialogContentText id='delete-dialog-description'>\r\n                            {this.getDeleteDialogText(chatId, t)}\r\n                        </DialogContentText>\r\n                    </div>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nLeaveChatDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(LeaveChatDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { getUserFullName } from '../../Utils/User';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './OpenGameDialog.css';\r\n\r\nclass OpenGameDialog extends React.Component {\r\n    render() {\r\n        const { game, params, onClose, t } = this.props;\r\n        if (!game) return null;\r\n\r\n        const { userId } = params;\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={e => onClose(e, false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('AppName')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {LStore.formatString('BotPermissionGameAlert', getUserFullName(userId))}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={e => onClose(e, false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={e => onClose(e, true)} color='primary'>\r\n                        {t('OK')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nOpenGameDialog.propTypes = {\r\n    game: PropTypes.object,\r\n    params: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(OpenGameDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport './OpenUrlDialog.css';\r\n\r\nclass OpenUrlDialog extends React.Component {\r\n    render() {\r\n        const { url, onClose, t } = this.props;\r\n        if (!url) return null;\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={e => onClose(e, false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\r\n                <DialogContent style={{ overflowWrap: 'break-word' }}>\r\n                    <DialogContentText>\r\n                        {LStore.formatString('OpenUrlAlert2', url)}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={e => onClose(e, false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={e => onClose(e, true)} color='primary'>\r\n                        {t('Open')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nOpenUrlDialog.propTypes = {\r\n    url: PropTypes.string,\r\n    params: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(OpenUrlDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport { getUserFullName, getUserShortName } from '../../Utils/User';\r\nimport { getFormattedText, getSimpleMarkupEntities } from '../../Utils/Message';\r\nimport LStore from '../../Stores/LocalizationStore';\r\nimport UserStore from '../../Stores/UserStore';\r\nimport './RequestUrlDialog.css';\r\n\r\nclass RequestUrlDialog extends React.Component {\r\n    state = {\r\n        value1: true,\r\n        value2: true\r\n    };\r\n\r\n    handleValue1Change = () => {\r\n        const { value1 } = this.state;\r\n\r\n        this.setState({ value1: !value1 });\r\n    };\r\n\r\n    handleValue2Change = () => {\r\n        const { value2 } = this.state;\r\n\r\n        this.setState({ value2: !value2 });\r\n    };\r\n\r\n    render() {\r\n        const { url, params, onClose, t } = this.props;\r\n        if (!url) return null;\r\n\r\n        const { value1, value2 } = this.state;\r\n\r\n        const { result } = params;\r\n        if (!result) return null;\r\n\r\n        const { domain, bot_user_id, request_write_access } = result;\r\n\r\n        let text1 = LStore.formatString('OpenUrlOption1', domain, getUserFullName(UserStore.getMyId()));\r\n        const entities1 = [];\r\n        text1 = getSimpleMarkupEntities(text1, entities1);\r\n        const option1 = (\r\n            <FormControlLabel\r\n                control={<Checkbox color='primary' checked={value1} onChange={this.handleValue1Change}/>}\r\n                label={getFormattedText({ '@type': 'formattedText', text: text1, entities: entities1 }, t)}\r\n            />\r\n        );\r\n\r\n        let option2 = null;\r\n        if (request_write_access) {\r\n            let text2 = LStore.formatString('OpenUrlOption2', getUserShortName(bot_user_id, t));\r\n            const entities2 = [];\r\n            text2 = getSimpleMarkupEntities(text2, entities2);\r\n            option2 = (\r\n                <FormControlLabel\r\n                    control={<Checkbox color='primary' checked={value2} onChange={this.handleValue2Change}/>}\r\n                    label={getFormattedText({ '@type': 'formattedText', text: text2, entities: entities2 }, t)}\r\n                />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                open={true}\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                onClose={e => onClose(e, false)}\r\n                classes={{ paper: 'alert-dialog' }}>\r\n                <DialogTitle>{t('OpenUrlTitle')}</DialogTitle>\r\n                <DialogContent style={{ display: 'flex', flexDirection: 'column', overflowWrap: 'break-word' }}>\r\n                    <DialogContentText>\r\n                        {LStore.formatString('OpenUrlAlert2', url)}\r\n                    </DialogContentText>\r\n                    {option1}\r\n                    {option2}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={e => onClose(e, false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={e => onClose(e, true, { value1, value2 })} color='primary'>\r\n                        {t('Open')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nRequestUrlDialog.propTypes = {\r\n    url: PropTypes.string,\r\n    params: PropTypes.object,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(RequestUrlDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { getChatShortTitle, isChannelChat, isPrivateChat } from '../../Utils/Chat';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport ChatStore from '../../Stores/ChatStore';\r\nimport './PinMessageDialog.css';\r\n\r\nclass PinMessageDialog extends React.Component {\r\n    state = { };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { chatId, messageId } = props;\r\n        const { prevChatId, prevMessageId } = state;\r\n\r\n        if (prevChatId !== chatId && prevMessageId !== messageId) {\r\n            return {\r\n                prevChatId: chatId,\r\n                prevMessageIds: messageId,\r\n                revoke: !isPrivateChat(chatId)\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    handleRevokeChange = () => {\r\n        const { revoke } = this.state;\r\n\r\n        this.setState({ revoke: !revoke });\r\n    };\r\n\r\n    render() {\r\n        const { chatId, onClose, t } = this.props;\r\n        const { revoke } = this.state;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return null;\r\n\r\n        let text = '';\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                text = t('PinMessageAlertChat');\r\n                break;\r\n            }\r\n            case 'chatTypeBasicGroup': {\r\n                text = t('PinMessageAlert');\r\n                break;\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                if (isChannelChat(chatId)) {\r\n                    text = t('PinMessageAlertChannel');\r\n                } else {\r\n                    text = t('PinMessageAlert');\r\n                }\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false, revoke)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {text}\r\n                    </DialogContentText>\r\n                    <>\r\n                        {\r\n                            isPrivateChat(chatId) && (\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\r\n                                    }\r\n                                    label={`Also pin for ${getChatShortTitle(chatId, false, t)}`}\r\n                                />\r\n                            )\r\n                        }\r\n                    </>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nPinMessageDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(PinMessageDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport './NotificationTimer.css';\r\n\r\nclass NotificationTimer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            seconds: this.props.timeout / 1000,\r\n            value: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.startTime = new Date();\r\n        this.expire = this.startTime;\r\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\r\n        this.timerId = setInterval(this.handleTimer, 100);\r\n    }\r\n\r\n    handleTimer = () => {\r\n        const now = new Date();\r\n        const seconds = this.expire - now;\r\n        const value = 100 - (seconds / this.props.timeout) * 100;\r\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\r\n        this.setState({\r\n            seconds: seconds > 0 ? seconds : 0,\r\n            value: value > 100 ? 100 : value\r\n        });\r\n\r\n        if (now >= this.expire) {\r\n            if (this.timerId) {\r\n                clearInterval(this.timerId);\r\n                this.timerId = null;\r\n\r\n                const { onTimeout } = this.props;\r\n                if (onTimeout) {\r\n                    onTimeout();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        if (this.timerId) {\r\n            clearInterval(this.timerId);\r\n            this.timerId = null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { value, seconds } = this.state;\r\n\r\n        return (\r\n            <div className='notification-timer'>\r\n                <div className='notification-timer-text'>\r\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\r\n                </div>\r\n                <div className='notification-timer-progress'>\r\n                    <CircularProgress size={32} value={100 - value} variant='static' />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNotificationTimer.propTypes = {\r\n    timeout: PropTypes.number.isRequired,\r\n    onTimeout: PropTypes.func\r\n};\r\n\r\nexport default NotificationTimer;\r\n","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { modalManager } from '../../Utils/Modal';\r\nimport './UnpinMessageDialog.css';\r\n\r\nclass UnpinMessageDialog extends React.Component {\r\n\r\n    render() {\r\n        const { messageId, onClose, t } = this.props;\r\n\r\n        const text = messageId ? t('UnpinMessageAlert') : t('UnpinAllMessagesAlert');\r\n\r\n        return (\r\n            <Dialog\r\n                manager={modalManager}\r\n                transitionDuration={0}\r\n                open={true}\r\n                onClose={() => onClose(false)}\r\n                aria-labelledby='dialog-title'>\r\n                <DialogTitle id='dialog-title'>{t('Confirm')}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {text}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => onClose(false)} color='primary'>\r\n                        {t('Cancel')}\r\n                    </Button>\r\n                    <Button onClick={() => onClose(true)} color='primary'>\r\n                        {t('Ok')}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nUnpinMessageDialog.propTypes = {\r\n    chatId: PropTypes.number,\r\n    messageId: PropTypes.number,\r\n    onClose: PropTypes.func\r\n};\r\n\r\nexport default withTranslation()(UnpinMessageDialog);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport { compose } from '../Utils/HOC';\r\nimport { withSnackbar } from 'notistack';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AlertDialog from './Popup/AlertDialog';\r\nimport BlockSenderDialog from './Popup/BlockSenderDialog';\r\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\r\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\r\nimport InputPasswordDialog from './Popup/InputPasswordDialog';\r\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\r\nimport OpenGameDialog from './Popup/OpenGameDialog';\r\nimport OpenUrlDialog from './Popup/OpenUrlDialog';\r\nimport RequestUrlDialog from './Popup/RequestUrlDialog';\r\nimport PinMessageDialog from './Popup/PinMessageDialog';\r\nimport NotificationTimer from './Additional/NotificationTimer';\r\nimport UnpinMessageDialog from './Popup/UnpinMessageDialog';\r\nimport { canDeleteChat, canPinMessages, getChatLocation, isChatMember, isCreator, isMeChat } from '../Utils/Chat';\r\nimport { blockSender, pinMessage as pinMessageAction, unpinAllMessages, unpinMessage as unpinMessageAction } from '../Actions/Message';\r\nimport { clearSelection, closePinned } from '../Actions/Client';\r\nimport { openGameInBrowser } from '../Utils/Game';\r\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\r\nimport AppStore from '../Stores/ApplicationStore';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport SupergroupStore from '../Stores/SupergroupStore';\r\nimport UserStore from '../Stores/UserStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\nimport { reportChat } from '../Actions/Chat';\r\n\r\nclass Actions extends React.PureComponent {\r\n    state = {\r\n        leaveChat: null,\r\n        clearHistory: null,\r\n        deleteMessages: null,\r\n        pinMessage: null,\r\n        unpinMessage: null,\r\n        alert: null,\r\n        openUrlAlert: null,\r\n        openGameAlert: null,\r\n        requestUrlAlert: null,\r\n        inputPasswordAlert: null,\r\n        requestBlockSenderAlert: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        AppStore.on('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\r\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\r\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\r\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\r\n        AppStore.on('clientUpdatePinMessage', this.onClientUpdatePinMessage);\r\n        AppStore.on('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\r\n        AppStore.on('clientUpdateAlert', this.onClientUpdateAlert);\r\n        AppStore.on('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\r\n        AppStore.on('clientUpdateSnackbar', this.onClientUpdateSnackbar);\r\n        AppStore.on('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\r\n        AppStore.on('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\r\n        AppStore.on('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        AppStore.off('clientUpdateRequestBlockSender', this.onClientUpdateBlockSender);\r\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\r\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\r\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\r\n        AppStore.off('clientUpdatePinMessage', this.onClientUpdatePinMessage);\r\n        AppStore.off('clientUpdateUnpinMessage', this.onClientUpdateUnpinMessage);\r\n        AppStore.off('clientUpdateAlert', this.onClientUpdateAlert);\r\n        AppStore.off('clientUpdateInputPasswordAlert', this.onClientUpdateInputPasswordAlert);\r\n        AppStore.off('clientUpdateSnackbar', this.onClientUpdateSnackbar);\r\n        AppStore.off('clientUpdateOpenUrlAlert', this.onClientUpdateOpenUrlAlert);\r\n        AppStore.off('clientUpdateOpenGameAlert', this.onClientUpdateOpenGameAlert);\r\n        AppStore.off('clientUpdateRequestUrlAlert', this.onClientUpdateRequestUrlAlert);\r\n    }\r\n\r\n    onClientUpdateBlockSender = update => {\r\n        const { sender } = update;\r\n\r\n        this.setState({ requestBlockSenderAlert: { sender }});\r\n    }\r\n\r\n    onClientUpdateInputPasswordAlert = update => {\r\n        const { state, onPassword } = update;\r\n\r\n        this.setState({ inputPasswordAlert: { state, onPassword } });\r\n    }\r\n\r\n    onClientUpdateOpenGameAlert = update => {\r\n        const { game, params } = update;\r\n\r\n        if (params && params.isVerified) {\r\n            this.openGameAlert = { game, params };\r\n            this.handleOpenGameContinue(null, true);\r\n        } else {\r\n            this.setState({ openGameAlert: { game, params } });\r\n        }\r\n    }\r\n\r\n    onClientUpdateOpenUrlAlert = update => {\r\n        const { url, params } = update;\r\n\r\n        if (params && !params.ask) {\r\n            this.openUrlAlert = { url, params };\r\n            this.handleOpenUrlContinue(null, true);\r\n        } else {\r\n            this.setState({ openUrlAlert: { url, params } });\r\n        }\r\n    };\r\n\r\n    onClientUpdateRequestUrlAlert = update => {\r\n        const { url, params } = update;\r\n\r\n        this.setState({ requestUrlAlert: { url, params } });\r\n    }\r\n\r\n    onClientUpdateSnackbar = update => {\r\n        const { enqueueSnackbar, closeSnackbar } = this.props;\r\n        const { message, action } = update;\r\n\r\n        enqueueSnackbar(message, {\r\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\r\n            preventDuplicate: true,\r\n            action: action(closeSnackbar)\r\n        });\r\n    };\r\n\r\n    onClientUpdateAlert = update => {\r\n        const { params } = update;\r\n\r\n        this.setState({ alert: { params } });\r\n    };\r\n\r\n    onClientUpdateUnpinMessage = update => {\r\n        const { chatId, messageId } = update;\r\n\r\n        if (isMeChat(chatId)) {\r\n            this.unpinMessage = {\r\n                chatId,\r\n                messageId\r\n            };\r\n            this.handleUnpinMessageContinue(true, false);\r\n        } else {\r\n            this.setState({\r\n                unpinMessage: {\r\n                    chatId,\r\n                    messageId\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdatePinMessage = update => {\r\n        const { chatId, messageId } = update;\r\n\r\n        if (isMeChat(chatId)) {\r\n            this.pinMessage = {\r\n                chatId,\r\n                messageId\r\n            };\r\n            this.handlePinMessageContinue(true, false);\r\n        } else {\r\n            this.setState({\r\n                pinMessage: {\r\n                    chatId,\r\n                    messageId\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    onClientUpdateDeleteMessages = update => {\r\n        const { chatId, messageIds } = update;\r\n\r\n        this.setState({\r\n            deleteMessages: {\r\n                chatId,\r\n                messageIds\r\n            }\r\n        });\r\n    };\r\n\r\n    onClientUpdateLeaveChat = update => {\r\n        const { chatId } = update;\r\n\r\n        this.setState({ leaveChat : { chatId } });\r\n    };\r\n\r\n    onClientUpdateClearHistory = update => {\r\n        const { chatId } = update;\r\n\r\n        this.setState({ clearHistory : { chatId } });\r\n    };\r\n\r\n    handleClearHistoryContinue = (result, revoke) => {\r\n        const { t } = this.props;\r\n\r\n        const { clearHistory } = this.state;\r\n        if (!clearHistory) return;\r\n\r\n        this.setState({ clearHistory: null });\r\n\r\n        if (!result) return;\r\n\r\n        const chatId = AppStore.getChatId();\r\n        const message = t('HistoryClearedUndo');\r\n        const request = {\r\n            '@type': 'deleteChatHistory',\r\n            chat_id: chatId,\r\n            remove_from_chat_list: false,\r\n            revoke\r\n        };\r\n\r\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\r\n    };\r\n\r\n    handleLeaveContinue = async (result, undo = true) => {\r\n        const { leaveChat } = this.state || this;\r\n        if (!leaveChat) return;\r\n\r\n        const { chatId } = leaveChat;\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return;\r\n\r\n        this.leaveChat = null;\r\n        this.setState({ leaveChat: null });\r\n\r\n        if (!result) return;\r\n\r\n        const message = this.getLeaveChatNotification(chatId);\r\n        const requests = [];\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                if (isChatMember(chatId)) {\r\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\r\n                }\r\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                if (isCreator(chatId)) {\r\n                    requests.push({\r\n                        '@type': 'setChatMemberStatus',\r\n                        chat_id: chatId,\r\n                        user_id: UserStore.getMyId(),\r\n                        status: {\r\n                            '@type': 'chatMemberStatusCreator',\r\n                            is_member: false\r\n                        }\r\n                    });\r\n                } else if (isChatMember(chatId)) {\r\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\r\n                }\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\r\n            }\r\n        }\r\n\r\n        if (undo) {\r\n            this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\r\n        } else {\r\n            try {\r\n                for (let i = 0; i < requests.length; i++) {\r\n                    await TdLibController.send(requests[i]);\r\n                }\r\n            } finally {\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    handleDeleteMessagesContinue = (result, revoke) => {\r\n        const { deleteMessages } = this.state;\r\n        if (!deleteMessages) return;\r\n\r\n        const { chatId, messageIds } = deleteMessages;\r\n\r\n        clearSelection();\r\n        this.setState({ deleteMessages: null });\r\n\r\n        if (!result) return;\r\n\r\n        TdLibController.send({\r\n            '@type': 'deleteMessages',\r\n            chat_id: chatId,\r\n            message_ids: messageIds,\r\n            revoke\r\n        });\r\n    };\r\n\r\n    getLeaveChatNotification = chatId => {\r\n        const { t } = this.props;\r\n\r\n        const chat = ChatStore.get(chatId);\r\n        if (!chat) return t('ChatDeletedUndo');\r\n        if (!chat.type) return t('ChatDeletedUndo');\r\n\r\n        switch (chat.type['@type']) {\r\n            case 'chatTypeBasicGroup': {\r\n                return t('ChatDeletedUndo');\r\n            }\r\n            case 'chatTypeSupergroup': {\r\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\r\n                if (supergroup) {\r\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\r\n                }\r\n\r\n                return t('ChatDeletedUndo');\r\n            }\r\n            case 'chatTypePrivate':\r\n            case 'chatTypeSecret': {\r\n                return t('ChatDeletedUndo');\r\n            }\r\n        }\r\n\r\n        return t('ChatDeletedUndo');\r\n    };\r\n\r\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\r\n        const { t, enqueueSnackbar, closeSnackbar } = this.props;\r\n        if (!clientUpdateType) return;\r\n\r\n        const key = `${clientUpdateType} chatId=${chatId}`;\r\n        const action = async () => {\r\n            try {\r\n                for (let i = 0; i < requests.length; i++) {\r\n                    await TdLibController.send(requests[i]);\r\n                }\r\n            } finally {\r\n                closeSnackbar(snackKey);\r\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\r\n            }\r\n        };\r\n        const cancel = () => {\r\n            closeSnackbar(snackKey);\r\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\r\n        };\r\n\r\n        AppStore.addScheduledAction(key, Number.MAX_VALUE, action, cancel);\r\n\r\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\r\n        const snackKey = enqueueSnackbar(message, {\r\n            persist: true,\r\n            key,\r\n            preventDuplicate: true,\r\n            action: [\r\n                <IconButton\r\n                    key='progress'\r\n                    color='inherit'\r\n                    className='progress-button'>\r\n                    <NotificationTimer\r\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\r\n                        onTimeout={() => {\r\n                            action();\r\n                            AppStore.removeScheduledAction(key);\r\n                        }}/>\r\n                </IconButton>,\r\n                <Button\r\n                    key='undo'\r\n                    color='primary'\r\n                    size='small'\r\n                    onClick={() => {\r\n                        cancel();\r\n                        AppStore.removeScheduledAction(key);\r\n                    }}>\r\n                    {t('Undo')}\r\n                </Button>\r\n            ]\r\n        });\r\n    };\r\n\r\n    handlePinMessageContinue = (result, revoke) => {\r\n        let { pinMessage } = this.state;\r\n        pinMessage = pinMessage || this.pinMessage;\r\n        if (!pinMessage) return;\r\n\r\n        const { chatId, messageId } = pinMessage;\r\n\r\n        clearSelection();\r\n        this.setState({ pinMessage: null });\r\n        this.pinMessage = null;\r\n\r\n        if (!result) return;\r\n\r\n        pinMessageAction(chatId, messageId, false, !revoke);\r\n    };\r\n\r\n    handleUnpinMessageContinue = async result => {\r\n        let { unpinMessage } = this.state;\r\n        unpinMessage = unpinMessage || this.unpinMessage;\r\n        if (!unpinMessage) return;\r\n\r\n        const { chatId, messageId } = unpinMessage;\r\n\r\n        clearSelection();\r\n        this.setState({ unpinMessage: null });\r\n        this.unpinMessage = null;\r\n\r\n        if (!result) return;\r\n\r\n        if (canPinMessages(chatId)) {\r\n            if (messageId) {\r\n                await unpinMessageAction(chatId, messageId);\r\n            } else {\r\n                closePinned();\r\n\r\n                await unpinAllMessages(chatId);\r\n            }\r\n        } else {\r\n            closePinned();\r\n\r\n            const data = ChatStore.getClientData(chatId);\r\n            await TdLibController.clientUpdate({\r\n                '@type': 'clientUpdateSetChatClientData',\r\n                chatId,\r\n                clientData: { ...data, ...{ unpinned: true } }\r\n            });\r\n        }\r\n    };\r\n\r\n    handleAlertContinue = result => {\r\n        this.setState({ alert: null });\r\n    };\r\n\r\n    handleOpenUrlContinue = (event, result) => {\r\n        const openUrlAlert = this.state.openUrlAlert || this.openUrlAlert;\r\n\r\n        this.setState({ openUrlAlert: null });\r\n        this.openUrlAlert = null;\r\n\r\n        if (!result) return;\r\n\r\n        const { url, onClick } = openUrlAlert;\r\n        if (!url) return;\r\n\r\n        if (onClick) {\r\n            onClick(event);\r\n        } else {\r\n            const newWindow = window.open();\r\n            newWindow.opener = null;\r\n            newWindow.location = url;\r\n        }\r\n    };\r\n\r\n    handleOpenGameContinue = (event, result) => {\r\n        const openGameAlert = this.state.openGameAlert || this.openGameAlert;\r\n\r\n        this.setState({ openGameAlert: null });\r\n        this.openGameAlert = null;\r\n\r\n        if (!result) return;\r\n\r\n        const { game, params } = openGameAlert;\r\n        if (!game) return;\r\n        if (!params) return;\r\n\r\n        const { url, message } = params;\r\n        if (!url) return;\r\n        if (!message) return;\r\n\r\n        openGameInBrowser(url, message);\r\n    };\r\n\r\n    handleRequestUrlContinue = async (event, open, values) => {\r\n        const { requestUrlAlert } = this.state;\r\n        this.setState({ requestUrlAlert: null });\r\n\r\n        if (!open) return;\r\n\r\n        const { params } = requestUrlAlert;\r\n        if (!params) return;\r\n\r\n        const { result, chatId, messageId, buttonId } = params;\r\n        if (!result) return;\r\n\r\n        if (!values.value1) {\r\n            this.openUrlAlert = { url: result.url };\r\n            this.handleOpenUrlContinue(event, open);\r\n        } else {\r\n            const httpUrl = await TdLibController.send({\r\n                '@type': 'getLoginUrl',\r\n                chat_id: chatId,\r\n                message_id: messageId,\r\n                button_id: buttonId,\r\n                allow_write_access: result.request_write_access && values.value2\r\n            });\r\n\r\n            this.openUrlAlert = { url: httpUrl.url };\r\n            this.handleOpenUrlContinue(event, open);\r\n        }\r\n    };\r\n\r\n    handleInputPasswordContinue = (result, password) => {\r\n        const { inputPasswordAlert } = this.state;\r\n        const onCloseDialog = () => this.setState({ inputPasswordAlert: null });\r\n        const onError = error => this.setState({ inputPasswordAlert: { ...inputPasswordAlert, error } })\r\n\r\n        if (!result) {\r\n            onCloseDialog();\r\n            return;\r\n        }\r\n\r\n        const { onPassword } = inputPasswordAlert;\r\n        onPassword && onPassword(password, onCloseDialog, onError);\r\n    };\r\n\r\n    handleBlockSenderContinue = async (result, params) => {\r\n        const { requestBlockSenderAlert } = this.state;\r\n\r\n        this.setState({ requestBlockSenderAlert: null });\r\n\r\n        if (!result) {\r\n            return;\r\n        }\r\n\r\n        const { sender } = requestBlockSenderAlert;\r\n        if (!sender) return;\r\n\r\n        let chatId = null;\r\n        switch (sender['@type']) {\r\n            case 'messageSenderUser': {\r\n                blockSender(sender);\r\n                chatId = await TdLibController.send({ '@type': 'createPrivateChat', user_id: sender.user_id });\r\n                break;\r\n            }\r\n            case 'messageSenderChat': {\r\n                chatId = sender.chat_id;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (!params || params.reportSpam) {\r\n            const reason = getChatLocation(chatId)\r\n                ? { '@type': 'chatReportReasonUnrelatedLocation' }\r\n                : { '@type': 'chatReportReasonSpam' };\r\n\r\n            reportChat(chatId, reason);\r\n        }\r\n\r\n        if (!params || params.deleteChat) {\r\n            const deleteChat = canDeleteChat(chatId);\r\n            if (!deleteChat) return;\r\n\r\n            this.leaveChat = { chatId };\r\n            this.handleLeaveContinue(true, false);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            leaveChat,\r\n            clearHistory,\r\n            deleteMessages,\r\n            pinMessage,\r\n            unpinMessage,\r\n            alert,\r\n            openUrlAlert,\r\n            openGameAlert,\r\n            requestUrlAlert,\r\n            inputPasswordAlert,\r\n            requestBlockSenderAlert\r\n        } = this.state;\r\n        if (leaveChat) {\r\n            const { chatId } = leaveChat;\r\n\r\n            return (\r\n                <LeaveChatDialog\r\n                    chatId={chatId}\r\n                    onClose={this.handleLeaveContinue} />\r\n                );\r\n        } else if (clearHistory) {\r\n            const { chatId } = clearHistory;\r\n\r\n            return (\r\n                <ClearHistoryDialog\r\n                    chatId={chatId}\r\n                    onClose={this.handleClearHistoryContinue} />\r\n                );\r\n        } else if (deleteMessages) {\r\n            const { chatId, messageIds } = deleteMessages;\r\n\r\n            return (\r\n                <DeleteMessagesDialog\r\n                    chatId={chatId}\r\n                    messageIds={messageIds}\r\n                    onClose={this.handleDeleteMessagesContinue} />\r\n                );\r\n        } else if (pinMessage) {\r\n            const { chatId, messageId } = pinMessage;\r\n\r\n            return (\r\n                <PinMessageDialog\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    onClose={this.handlePinMessageContinue} />\r\n            );\r\n        } else if (unpinMessage) {\r\n            const { chatId, messageId } = unpinMessage;\r\n\r\n            return (\r\n                <UnpinMessageDialog\r\n                    chatId={chatId}\r\n                    messageId={messageId}\r\n                    onClose={this.handleUnpinMessageContinue} />\r\n            );\r\n        } else if (alert) {\r\n            const { params } = alert;\r\n\r\n            return (\r\n                <AlertDialog\r\n                    params={params}\r\n                    onClose={this.handleAlertContinue} />\r\n            );\r\n        } else if (openUrlAlert) {\r\n            const { url, params } = openUrlAlert;\r\n\r\n            return (\r\n                <OpenUrlDialog\r\n                    url={url}\r\n                    params={params}\r\n                    onClose={this.handleOpenUrlContinue}/>\r\n            );\r\n        } else if (openGameAlert) {\r\n            const { game, params } = openGameAlert;\r\n\r\n            return (\r\n                <OpenGameDialog\r\n                    game={game}\r\n                    params={params}\r\n                    onClose={this.handleOpenGameContinue}/>\r\n            );\r\n        } else if (requestUrlAlert) {\r\n            const { url, params } = requestUrlAlert;\r\n\r\n            return (\r\n                <RequestUrlDialog\r\n                    url={url}\r\n                    params={params}\r\n                    onClose={this.handleRequestUrlContinue}/>\r\n            );\r\n        } else if (inputPasswordAlert) {\r\n            const { state, error } = inputPasswordAlert;\r\n\r\n            return (\r\n                <InputPasswordDialog\r\n                    state={state}\r\n                    error={error}\r\n                    onClose={this.handleInputPasswordContinue}/>\r\n            );\r\n        } else if (requestBlockSenderAlert) {\r\n            const { sender } = requestBlockSenderAlert;\r\n\r\n            return (\r\n                <BlockSenderDialog\r\n                    sender={sender}\r\n                    onClose={this.handleBlockSenderContinue}/>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nconst enhance = compose(\r\n    withSnackbar,\r\n    withTranslation()\r\n);\r\n\r\nexport default enhance(Actions);","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport function openGameInBrowser(url, message) {\r\n    let sharedPreferences = {};\r\n    try {\r\n        sharedPreferences = JSON.parse(localStorage.getItem('botshare')) || { };\r\n    } catch (e) { }\r\n\r\n    const existing = sharedPreferences['' + message.id];\r\n    let hash = existing ? existing : ''\r\n    let addHash = 'tgShareScoreUrl=' + encodeURIComponent('tg://share_game_score?hash=');\r\n    if (!existing) {\r\n        const chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n        const array = new Uint8Array(1);\r\n        for (let i = 0; i < 20; i++) {\r\n            window.crypto.getRandomValues(array)\r\n            hash += chars[array[0] % chars.length];\r\n        }\r\n\r\n        sharedPreferences['' + message.id] = hash;\r\n        localStorage.setItem('botshare', JSON.stringify(sharedPreferences));\r\n    }\r\n    addHash += hash;\r\n    const index = url.indexOf('#');\r\n    if (index < 0) {\r\n        url += '#' + addHash;\r\n    } else {\r\n        const curHash = url.substring(0, index + 1);\r\n        if (curHash.indexOf('=') >= 0 || curHash.indexOf('?') >= 0) {\r\n            url += '&' + addHash;\r\n        } else {\r\n            if (curHash.length > 0) {\r\n                url += '?' + addHash;\r\n            } else {\r\n                url += addHash;\r\n            }\r\n        }\r\n    }\r\n\r\n    const newWindow = window.open();\r\n    newWindow.opener = null;\r\n    newWindow.location = url;\r\n}","/*\r\n *  Copyright (c) 2018-present, Evgeny Nadymov\r\n *\r\n * This source code is licensed under the GPL v.3.0 license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport { compose } from '../Utils/HOC';\r\nimport withLanguage from '../Language';\r\nimport withSnackbarNotifications from '../Notifications';\r\nimport PipPlayer from './Player/PipPlayer';\r\nimport ForwardDialog from './Popup/ForwardDialog';\r\nimport ChatInfo from './ColumnRight/ChatInfo';\r\nimport Dialogs from './ColumnLeft/Dialogs';\r\nimport DialogDetails from './ColumnMiddle/DialogDetails';\r\nimport InstantViewer from './InstantView/InstantViewer';\r\nimport MediaViewer from './Viewer/MediaViewer';\r\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\r\nimport { highlightMessage } from '../Actions/Client';\r\nimport AppStore from '../Stores/ApplicationStore';\r\nimport ChatStore from '../Stores/ChatStore';\r\nimport InstantViewStore from '../Stores/InstantViewStore';\r\nimport UserStore from '../Stores/UserStore';\r\nimport PlayerStore from '../Stores/PlayerStore';\r\nimport TdLibController from '../Controllers/TdLibController';\r\nimport '../TelegramApp.css';\r\nimport Actions from './Actions';\r\n\r\nclass MainPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.dialogDetailsRef = React.createRef();\r\n\r\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\r\n\r\n        this.state = {\r\n            isChatDetailsVisible,\r\n            mediaViewerContent,\r\n            profileMediaViewerContent,\r\n            isSmallWidth,\r\n            forwardInfo: null,\r\n            instantViewContent: null,\r\n            videoInfo: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\r\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\r\n\r\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\r\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\r\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\r\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\r\n\r\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\r\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\r\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\r\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\r\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\r\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\r\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\r\n    }\r\n\r\n    onClientUpdatePictureInPicture = update => {\r\n        const { videoInfo } = update;\r\n\r\n        this.setState({\r\n            videoInfo\r\n        });\r\n    };\r\n\r\n    onClientUpdatePageWidth = update => {\r\n        const { isSmallWidth } = update;\r\n\r\n        this.setState({ isSmallWidth });\r\n    };\r\n\r\n    onClientUpdateInstantViewContent = update => {\r\n        const { content } = update;\r\n\r\n        this.setState({\r\n            instantViewContent: content\r\n        });\r\n    };\r\n\r\n    onClientUpdateOpenChat = update => {\r\n        const { chatId, messageId, popup, options } = update;\r\n\r\n        this.handleSelectChat(chatId, messageId, popup, options || AppStore.chatSelectOptions);\r\n    };\r\n\r\n    onClientUpdateOpenUser = update => {\r\n        const { userId, popup } = update;\r\n\r\n        this.handleSelectUser(userId, popup);\r\n    };\r\n\r\n    onClientUpdateChatDetailsVisibility = update => {\r\n        const { isChatDetailsVisible } = AppStore;\r\n\r\n        this.setState({ isChatDetailsVisible });\r\n    };\r\n\r\n    onClientUpdateMediaViewerContent = update => {\r\n        const { mediaViewerContent } = AppStore;\r\n\r\n        this.setState({ mediaViewerContent });\r\n    };\r\n\r\n    onClientUpdateProfileMediaViewerContent = update => {\r\n        const { profileMediaViewerContent } = AppStore;\r\n\r\n        this.setState({ profileMediaViewerContent });\r\n    };\r\n\r\n    onClientUpdateForward = update => {\r\n        const { info } = update;\r\n\r\n        this.setState({ forwardInfo: info });\r\n    };\r\n\r\n    handleSelectChat = (chatId, messageId = null, popup = false, options = {}) => {\r\n        const currentChatId = AppStore.getChatId();\r\n        const currentDialogChatId = AppStore.dialogChatId;\r\n        const currentMessageId = AppStore.getMessageId();\r\n\r\n        if (popup) {\r\n            if (currentDialogChatId !== chatId) {\r\n                TdLibController.clientUpdate({\r\n                    '@type': 'clientUpdateDialogChatId',\r\n                    chatId\r\n                });\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if (currentChatId === chatId && messageId && currentMessageId === messageId && !options) {\r\n            this.dialogDetailsRef.current.scrollToMessage();\r\n            if (messageId) {\r\n                highlightMessage(chatId, messageId);\r\n            }\r\n        } else if (currentChatId === chatId && !messageId && !options) {\r\n            this.dialogDetailsRef.current.scrollToStart();\r\n        } else {\r\n            TdLibController.setChatId(chatId, messageId, options);\r\n        }\r\n    };\r\n\r\n    handleSelectUser = async (userId, popup) => {\r\n        if (!userId) return;\r\n\r\n        const chat = await TdLibController.send({\r\n            '@type': 'createPrivateChat',\r\n            user_id: userId,\r\n            force: true\r\n        });\r\n\r\n        this.handleSelectChat(chat.id, null, popup);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            instantViewContent,\r\n            isChatDetailsVisible,\r\n            mediaViewerContent,\r\n            profileMediaViewerContent,\r\n            forwardInfo,\r\n            videoInfo,\r\n            isSmallWidth\r\n        } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    className={classNames('page', {\r\n                        'page-small': isSmallWidth,\r\n                        'page-third-column': isChatDetailsVisible\r\n                    })}>\r\n                    <Dialogs />\r\n                    <DialogDetails ref={this.dialogDetailsRef} />\r\n                    {isChatDetailsVisible && <ChatInfo />}\r\n                </div>\r\n                <Actions/>\r\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\r\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\r\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\r\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\r\n                {videoInfo && <PipPlayer {...videoInfo}/>}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nMainPage.propTypes = {};\r\n\r\nconst enhance = compose(\r\n    withLanguage,\r\n    withSnackbarNotifications\r\n);\r\n\r\nexport default enhance(MainPage);\r\n"],"sourceRoot":""}